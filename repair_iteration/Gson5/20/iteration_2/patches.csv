bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	108	None	replace
2	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
3	[BUG]  [BUGGY]  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
4	[BUG]  [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
5	[BUG]  [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'. ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'. ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'. ");  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
6	[BUG]  [BUGGY]  }  else  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
7	[BUG]  [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "' ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "' ");  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
8	[BUG]  [BUGGY]  }  else  if(hasT  &&  isInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  isInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  isInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
9	[BUG]  [BUGGY]  }  else  if(hasT  ||  isInvalidTimeZone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  isInvalidTimeZone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  isInvalidTimeZone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
10	[BUG]  [BUGGY]  }  else  if(isInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(isInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(isInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
11	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
12	[BUG]  [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(tz))  {  [CE]  cannot  find  symbol  tz  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(tz))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  isInvalidTimezone(tz))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	85	None	replace
13	[BUG]  [BUGGY]  }  else  if(!hasT  ||  isInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  ||  isInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  ||  isInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
14	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
15	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
16	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!removed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!removed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(cleaned)&&!removed.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
17	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(removed))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(removed))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(removed))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
18	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!utc.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!utc.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!utc.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
19	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!this.timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!this.timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!this.timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
20	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	114	None	replace
21	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	114	None	replace
22	[BUG]  [BUGGY]  }  else  if(clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(clean.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	114	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }  [CE]  char  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  char  cannot  be  dereferenced	81	None	replace
24	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).get  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	81	None	replace
25	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	81	None	replace
26	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	81	None	replace
27	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).get  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	81	None	replace
28	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	81	None	replace
29	[BUG]  [BUGGY]  nisip.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  nisip.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	nisip.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  	24	None	replace
30	[BUG]  [BUGGY]  If(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  If(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	If(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  	24	None	replace
31	[BUG]  [BUGGY]  while(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  while(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	while(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	24	None	replace
32	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
33	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
34	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(c))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(c))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(c))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
35	[BUG]  [BUGGY]  }  else  if(timezone.getMessage()  ==  null)  {  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezone.getMessage()  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezone.getMessage()  ==  null)  {	  }    else    if(calendar.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
36	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(timezoneIndicator))  {	  }    else    if(tz.contains(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	15	None	replace
37	[BUG]  [BUGGY]  }  else  if(str.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  str  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(str.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(str.contains(timezoneIndicator))  {	  }    else    if(tz.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  str	15	None	replace
38	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}    else    if(!hasT)    {    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
39	[BUG]  [BUGGY]  }  else  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(!hasT)    {    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
40	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}    else    if(!hasT)    {    if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
41	[BUG]  [BUGGY]  }  else  if(!hasT)  {  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(!hasT)    {    if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
42	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(e.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	92	None	replace
43	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(e.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	92	None	replace
44	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||  timezoneIndicator.equals(clean))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||  timezoneIndicator.equals(clean))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||  timezoneIndicator.equals(clean))  {	  }    else    if(timezoneIndicator!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	4	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  char  cannot  be  dereferenced	78	None	replace
46	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
47	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
48	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
49	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
50	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
51	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(indicator))  {  [CE]  cannot  find  symbol  indicator  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(indicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(indicator))  {	  }    else    if(!indicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indicator	111	None	replace
52	[BUG]  [BUGGY]  }  else  if(!calendar.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  calendar  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!calendar.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!calendar.equals(timezoneIndicator))  {	  }    else    if(!indicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  calendar	111	None	replace
53	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(color))  {  [CE]  cannot  find  symbol  color  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(color))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(color))  {	  }    else    if(color.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  color	112	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  char  cannot  be  dereferenced	77	None	replace
55	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
56	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	77	None	replace
57	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	77	None	replace
58	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
59	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	77	None	replace
60	[BUG]  [BUGGY]  }  else  if(!false.contains(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!false.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!false.contains(timezoneIndicator))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	113	None	replace
61	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.contains(false))  {  [CE]  char  cannot  be  dereferenced  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.contains(false))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.contains(false))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	113	None	replace
62	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(false))  {  [CE]  char  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(false))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(false))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	113	None	replace
63	[BUG]  [BUGGY]  }  else  if(true.contains(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(true.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(true.contains(timezoneIndicator))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	113	None	replace
64	[BUG]  [BUGGY]  }  else  if(false.contains(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.contains(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.contains(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	113	None	replace
65	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}  else  if(hasT  &&  hasT)  {	  }    else    if(hasT    ||    hasT)    {    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
66	[BUG]  [BUGGY]  }  else  if(hasT  &&  hasT)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  hasT)  {	  }    else    if(hasT    ||    hasT)    {    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
67	[BUG]  [BUGGY]  }  else  if(cleaned  ||  hasT)  {  [CE]  cannot  find  symbol  cleaned  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ||  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ||  hasT)  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	53	None	replace
68	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasMillis)  {  [CE]  cannot  find  symbol  hasMillis  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasMillis)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasMillis)  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  cannot  find  symbol  hasMillis	53	None	replace
69	[BUG]  [BUGGY]  }  else  if(hasMillis  ||  hasT)  {  [CE]  cannot  find  symbol  hasMillis  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasMillis  ||  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasMillis  ||  hasT)  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  cannot  find  symbol  hasMillis	53	None	replace
70	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT  ||  timezoneIndicator!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasT  ||  timezoneIndicator!=  null)  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	53	None	replace
71	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }	  if(!cleaned.equals(timezoneId))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "+timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	101	None	replace
72	[BUG]  [BUGGY]  if(!cleaned.equals(date))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(date))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(date))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }	  if(!cleaned.equals(timezoneId))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "+timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	101	None	replace
73	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }	  if(!cleaned.equals(timezoneId))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "+timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	101	None	replace
74	[BUG]  [BUGGY]  If(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  If(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	If(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }	  if(!cleaned.equals(timezoneId))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "+timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  	101	None	replace
75	[BUG]  [BUGGY]  if(!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "+timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }	  if(!cleaned.equals(timezoneId))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "+timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	101	None	replace
76	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.equals(cleaned))  {  [CE]  char  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.equals(cleaned))  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
77	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
78	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()  ==  null  ||  cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
79	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||!timezoneIndicator.equals(cleaned))  {  [CE]  char  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  ||!timezoneIndicator.equals(cleaned))  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
80	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.isEmpty())  {  [CE]  char  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.isEmpty())  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.isEmpty())  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
81	[BUG]  [BUGGY]  }  else  if(hasT  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	55	None	replace
82	[BUG]  [BUGGY]  }  else  if(!hasT  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	55	None	replace
83	[BUG]  [BUGGY]  }  else  if(!hasT  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&!cleaned.equals(timezoneIndicator))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	55	None	replace
84	[BUG]  [BUGGY]  }  else  if(!hasT  &&  timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&  timezoneIndicator.equals(cleaned))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	55	None	replace
85	[BUG]  [BUGGY]  }  else  if(!hasT  &&  timezoneIndicator!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&  timezoneIndicator!=  null)  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	55	None	replace
86	[BUG]  [BUGGY]  }  else  if(!hasT  ||  timezoneIndicator!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  ||  timezoneIndicator!=  null)  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	55	None	replace
87	[BUG]  [BUGGY]  }  else  if(dleaned  ==  null)  {  [CE]  cannot  find  symbol  dleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(dleaned  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(dleaned  ==  null)  {	  }    else    if(lattice    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  dleaned	71	None	replace
88	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	105	None	replace
89	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.equals(cleaned))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.equals(cleaned))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	105	None	replace
90	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	105	None	replace
91	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(calendar.getTime()))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(calendar.getTime()))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(calendar.getTime()))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	105	None	replace
92	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  string  literal  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator+ "'))  {	  }    else    if(timezoneIndicator.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  unclosed  string  literal	91	None	replace
93	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneId+ "'   "))  {  [CE]  cannot  find  symbol  timezoneId  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneId+ "'   "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneId+ "'   "))  {	  }    else    if(timezoneIndicator.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneId	91	None	replace
94	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneIndicator+ "'   "))  {  [CE]  char  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneIndicator+ "'   "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneIndicator+ "'   "))  {	  }    else    if(timezoneIndicator.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
95	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
96	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||  timezoneIndicator.equals(timezone))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||  timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	3	None	replace
97	[BUG]  [BUGGY]  }  else  if(!invalid.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  invalid  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!invalid.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!invalid.equals(timezoneIndicator))  {	  }    else    if(!uTC_ID.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  invalid	66	None	replace
98	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	100	None	replace
99	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator.equals(cleaned))  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	100	None	replace
100	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.matches(timezoneId))  {  [CE]  cannot  find  symbol  timezoneId  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.matches(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator.matches(timezoneId))  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  cannot  find  symbol  timezoneId	100	None	replace
101	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!cleaned.equals(timezoneIndicator+ "'   "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!cleaned.equals(timezoneIndicator+ "'   "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!cleaned.equals(timezoneIndicator+ "'   "))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator+   "'   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	7	None	replace
102	[BUG]  [BUGGY]  }  else  if(selected!=  null)  {  [CE]  cannot  find  symbol  selected  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(selected!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(selected!=  null)  {	  }    else    if(lattice!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  selected	90	None	replace
103	[BUG]  [BUGGY]  }  else  if(dleaned!=  null)  {  [CE]  cannot  find  symbol  dleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(dleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(dleaned!=  null)  {	  }    else    if(lattice!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  dleaned	90	None	replace
104	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	84	None	replace
105	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezone))  {  [CE]  char  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezone))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	84	None	replace
106	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneOffset))  {  [CE]  cannot  find  symbol  timezoneOffset  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezoneOffset))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	84	None	replace
107	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneId))  {  [CE]  cannot  find  symbol  timezoneId  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezoneId))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneId	84	None	replace
108	[BUG]  [BUGGY]  }  else  if(hasT  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!cleaned.equals(timezoneIndicator))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	84	None	replace
109	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(date))  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(date))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	84	None	replace
110	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  c  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  c	19	None	replace
111	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	19	None	replace
112	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  timezoneId  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneId	19	None	replace
113	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	19	None	replace
114	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	117	None	replace
115	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	117	None	replace
116	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(TimeZone.UTC))  {	  }    else    if(cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	36	None	replace
117	[BUG]  [BUGGY]  }  else  if(cleaned.equals(TimeZone.UTC,  timezoneIndicator))  {  [CE]  cannot  find  symbol  UTC  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(TimeZone.UTC,  timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(TimeZone.UTC,  timezoneIndicator))  {	  }    else    if(cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	36	None	replace
118	[BUG]  [BUGGY]  }  else  if(tz.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz.equals(TimeZone.UTC))  {	  }    else    if(cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	36	None	replace
119	[BUG]  [BUGGY]  nisip.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  nisip.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	nisip.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  	20	None	replace
120	[BUG]  [BUGGY]  while(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  while(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	while(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	20	None	replace
121	[BUG]  [BUGGY]  if(cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  timezoneId  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneId	20	None	replace
122	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(timezone))  {  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(timezone))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	replace
123	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(date))  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(date))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	replace
124	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneId))  {  [CE]  cannot  find  symbol  timezoneId  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(timezoneId))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneId	14	None	replace
125	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneOffset))  {  [CE]  cannot  find  symbol  timezoneOffset  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(timezoneOffset))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	14	None	replace
126	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(null))  {  [CE]  char  cannot  be  dereferenced  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(null))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(null))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	replace
127	[BUG]  [BUGGY]  }  else  if(cleaned  &&  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  cleaned  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  &&  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  &&  timezoneIndicator  ==  null)  {	  }    else    if(hasT    &&    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	99	None	replace
128	[BUG]  [BUGGY]  }  else  if(selected  ==  null)  {  [CE]  cannot  find  symbol  selected  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(selected  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(selected  ==  null)  {	  }    else    if(hash    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  selected	72	None	replace
129	[BUG]  [BUGGY]  }  else  if(tleaned!=  null)  {  [CE]  cannot  find  symbol  tleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tleaned!=  null)  {	  }    else    if(tz!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  tleaned	63	None	replace
130	[BUG]  [BUGGY]  }  else  if(!clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!clean.equals(timezoneIndicator))  {	  }    else    if(!hashCode.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	48	None	replace
131	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(hashCode))  {  [CE]  cannot  find  symbol  hashCode  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(hashCode))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(hashCode))  {	  }    else    if(!hashCode.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	48	None	replace
132	[BUG]  [BUGGY]  }  else  if(tleaned  ==  null)  {  [CE]  cannot  find  symbol  tleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tleaned  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tleaned  ==  null)  {	  }    else    if(tz    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  tleaned	69	None	replace
133	[BUG]  [BUGGY]  }  else  if(cleaned  ||  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ||  timezoneIndicator!=  null)  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	57	None	replace
134	[BUG]  [BUGGY]  }  else  if(hasT  ||  timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  timezoneIndicator.equals(cleaned))  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	57	None	replace
135	[BUG]  [BUGGY]  }  else  if(hasT  ||  timezoneIndicator  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  timezoneIndicator  >=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  timezoneIndicator  >=  null)  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	57	None	replace
136	[BUG]  [BUGGY]  }  else  if(hashCode  ||  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  hashCode  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashCode  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashCode  ||  timezoneIndicator!=  null)  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	57	None	replace
137	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  TimeZone.isInstance(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  TimeZone.isInstance(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||  TimeZone.isInstance(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
138	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  &&  TimeZone.isInstance(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  &&  TimeZone.isInstance(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  &&  TimeZone.isInstance(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	109	None	replace
139	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneOffset))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneOffset))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
140	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  TimeZone.isInstance(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  TimeZone.isInstance(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&  TimeZone.isInstance(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
141	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezone))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
142	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(cleaned))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(cleaned))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
143	[BUG]  [BUGGY]  }  else  if(tz.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  tz  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	97	None	replace
144	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!tz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!tz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(cleaned)&&!tz.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	97	None	replace
145	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	97	None	replace
146	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(tz))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(tz))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!timezoneIndicator.equals(tz))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	97	None	replace
147	[BUG]  [BUGGY]  }  else  if(stripped!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  stripped  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(stripped!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(stripped!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  stripped	106	None	replace
148	[BUG]  [BUGGY]  }  else  if(saved.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  saved  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(saved.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(saved.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  saved	106	None	replace
149	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  cleaned.equals(timezoneId))  {	  }    else    if(timezoneIndicator!=    null    &&    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	106	None	replace
150	[BUG]  [BUGGY]  }  else  if(!centuries.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  centuries  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!centuries.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!centuries.equals(timezoneIndicator))  {	  }    else    if(!str.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  centuries	51	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  char  cannot  be  dereferenced	79	None	replace
152	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	79	None	replace
153	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).get  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	79	None	replace
154	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	79	None	replace
155	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
156	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
157	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  ||  cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
158	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMethod()!=  null)  {  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMethod()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMethod()!=  null)  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
159	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(seen))  {  [CE]  cannot  find  symbol  seen  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(seen))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(seen))  {	  }    else    if(seen.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  seen	86	None	replace
160	[BUG]  [BUGGY]  }  else  if(selected.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  selected  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(selected.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(selected.contains(timezoneIndicator))  {	  }    else    if(seen.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  selected	86	None	replace
161	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(selected))  {  [CE]  cannot  find  symbol  selected  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(selected))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(selected))  {	  }    else    if(seen.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  selected	86	None	replace
162	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  [CE]  unreachable  statement  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");	  	non-compiled	[CE]  unreachable  statement	37	None	add
163	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  unreachable  statement  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	non-compiled	[CE]  unreachable  statement	37	None	add
164	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  unreachable  statement  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	non-compiled	[CE]  unreachable  statement	37	None	add
165	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'. ");  }  [CE]  unreachable  statement  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'. ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'. ");  }	  	non-compiled	[CE]  unreachable  statement	37	None	add
166	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	1	None	replace
167	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	1	None	replace
168	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&!timezoneIndicator.equals(cleaned))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&!timezoneIndicator.equals(cleaned))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	replace
169	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||!timezoneIndicator.equals(timezone))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||!timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	1	None	replace
170	[BUG]  [BUGGY]  }  else  if(tempZone.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  tempZone  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tempZone.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tempZone.contains(timezoneIndicator))  {	  }    else    if(calendar.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tempZone	17	None	replace
171	[BUG]  [BUGGY]  }  else  if(cleaned  ||  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ||  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ||  timezoneIndicator  ==  null)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	58	None	replace
172	[BUG]  [BUGGY]  }  else  if(hashCode  ||  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  hashCode  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashCode  ||  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashCode  ||  timezoneIndicator  ==  null)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	58	None	replace
173	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	39	1	add
174	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	39	1	add
175	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	non-compiled	[CE]  'catch'  without  'try'	39	None	add
176	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	39	1	add
177	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(!hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	39	1	add
178	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");	  	compilable	  [FE]  JsonSyntaxException  	39	1	add
179	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");	  	compilable	  [FE]  JsonSyntaxException  	39	1	add
180	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	non-compiled	[CE]  'catch'  without  'try'	39	None	add
181	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	non-compiled	[CE]  cannot  find  symbol  cleaned	39	None	add
182	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	40	None	replace
183	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneId))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  timezoneId  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneId))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneId))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneId	40	None	replace
184	[BUG]  [BUGGY]  while(!cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  while(!cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	while(!cleaned.equals(timezoneIndicator))  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    	non-compiled	[CE]  'catch'  without  'try'	40	None	replace
185	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}  else  if(!hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    	compilable	  [FE]  JsonSyntaxException  	40	1	replace
186	[BUG]  [BUGGY]  }  else  if(!hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    	compilable	  [FE]  JsonSyntaxException  	40	1	replace
187	[BUG]  [BUGGY]  }  else  if(cleaned.getMessage()  ==  null)  {  [CE]  cannot  find  symbol  cleaned  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.getMessage()  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.getMessage()  ==  null)  {	  }    else    if(stubbed.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	118	None	replace
188	[BUG]  [BUGGY]  }  else  if(selected.getMessage()!=  null)  {  [CE]  cannot  find  symbol  selected  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(selected.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(selected.getMessage()!=  null)  {	  }    else    if(stubbed.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  selected	118	None	replace
189	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  string  literal  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(timezoneIndicator+ "'))  {	  }    else    if(!cleaned.equals(timezoneOffset))    {    	non-compiled	[CE]  unclosed  string  literal	43	None	replace
190	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(hash))  {  [CE]  cannot  find  symbol  hash  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(hash))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(hash))  {	  }    else    if(!hash.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hash	49	None	replace
191	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.length()  >  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
192	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.length()  >  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
193	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  ==  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  ==  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
194	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  <  =  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  <  =  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
195	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  >=  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  >=  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  >=  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
196	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.length()  >  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
197	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(cleaned+ "'   "))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(cleaned+ "'   "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(cleaned+ "'   "))  {	  }    else    if(!cleaned.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	31	None	replace
198	[BUG]  [BUGGY]  }  else  if(date.getMessage()  ==  null)  {  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getMessage()  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getMessage()  ==  null)  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
199	[BUG]  [BUGGY]  }  else  if(date.getMessage()!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getMessage()!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getMessage()!=  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
200	[BUG]  [BUGGY]  }  else  if(date.getMessage()!=  null  ||!clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getMessage()!=  null  ||!clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getMessage()!=  null  ||!clean.equals(timezoneIndicator))  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
201	[BUG]  [BUGGY]  }  else  if(date.getMethod()!=  UTC_ID)  {  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getMethod()!=  UTC_ID)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getMethod()!=  UTC_ID)  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
202	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  cannot  find  symbol  c  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  c	23	None	replace
203	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	23	None	replace
204	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  cannot  find  symbol  timezoneId  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneId	23	None	replace
205	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneOffset))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	23	None	replace
206	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'.   ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'.   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'.   ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
207	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.n ");  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.n ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.n ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
208	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Please  check  that  the  time  zone  indicator  does  not  exist. ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Please  check  that  the  time  zone  indicator  does  not  exist. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Please  check  that  the  time  zone  indicator  does  not  exist. ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
209	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Please  check  that  the  time  zone  indicator  is  null. ");  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Please  check  that  the  time  zone  indicator  is  null. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Please  check  that  the  time  zone  indicator  is  null. ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
210	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  e);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  e);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  e);	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
211	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'. ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'. ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
212	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "',  hasT);  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "',  hasT);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "',  hasT);	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  unclosed  string  literal	88	None	replace
213	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  c);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  c);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  c);	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
214	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  c.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  c.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  c.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	6	None	replace
215	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  timezoneIndicator.equals(c))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  timezoneIndicator.equals(c))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  timezoneIndicator.equals(c))  {	  }    else    if(cleaned    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	6	None	replace
216	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  date.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  date.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  date.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	6	None	replace
217	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  tz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  tz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  tz.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	6	None	replace
218	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(c))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(c))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(c))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	94	None	replace
219	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	94	None	replace
220	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	94	None	replace
221	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	94	None	replace
222	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(c))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(c))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(c))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	82	None	replace
223	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	82	None	replace
224	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(cleaned)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	95	None	replace
225	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	95	None	replace
226	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.equals(timezoneIndicator)&&!date.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}  else  if(date.equals(timezoneIndicator)&&!date.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	95	1	replace
227	[BUG]  [BUGGY]  }  else  if(date.equals(timezoneIndicator)&&!date.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.equals(timezoneIndicator)&&!date.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.equals(timezoneIndicator)&&!date.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	95	1	replace
228	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(cleaned)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(cleaned)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(cleaned)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	95	None	replace
229	[BUG]  [BUGGY]  }  else  if(e.equals(timezoneIndicator)&&!e.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  e  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(e.equals(timezoneIndicator)&&!e.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(e.equals(timezoneIndicator)&&!e.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  e	95	None	replace
230	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneOffset))  {  [CE]  cannot  find  symbol  timezoneOffset  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneOffset))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	46	None	replace
231	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezone))  {  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezone))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	46	None	replace
232	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneId))  {  [CE]  cannot  find  symbol  timezoneId  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneId))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneId	46	None	replace
233	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(date))  {  [CE]  char  cannot  be  dereferenced  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(date))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	46	None	replace
234	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneNumber))  {  [CE]  cannot  find  symbol  timezoneNumber  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneNumber))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneNumber))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneNumber	46	None	replace
235	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  c  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "    +    timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  c	21	None	replace
236	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ "  given,  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "    +    timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	21	None	replace
237	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator: "  +  timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator:   "    +    timezoneIndicator+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	21	None	replace
238	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  >>  null)  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  >>  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator  >>  null)  {	  }    else    if(hasT    &&    timezoneIndicator!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	56	None	replace
239	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  priority	5	None	replace
240	[BUG]  [BUGGY]  }  else  if(hashCode  ==  null  ||!hashCode.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashCode  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashCode  ==  null  ||!hashCode.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashCode  ==  null  ||!hashCode.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	5	None	replace
241	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  e);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  e);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  e);	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
242	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'   ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'   ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
243	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  c);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  c);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  c);	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
244	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  string  literal  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator+ "'))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
245	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  string  literal  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator+ "'))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
246	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  &&!cleaned.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  string  literal  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  &&!cleaned.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  &&!cleaned.equals(timezoneIndicator+ "'))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
247	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  given,  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "',    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	22	None	replace
248	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  timezoneId  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "',    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  timezoneId	22	None	replace
249	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  c  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(c))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "',    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  c	22	None	replace
250	[BUG]  [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!timezoneIndicator.equals(cleaned))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "',    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	22	None	replace
251	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  timezoneIndicator.equals(timezone))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator    ==    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	115	None	replace
252	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  char  cannot  be  dereferenced	76	None	replace
253	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
254	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [CE]  ')'  expected  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	76	None	replace
255	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
256	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
257	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	76	None	replace
258	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	76	None	replace
259	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	116	None	replace
260	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator    ==    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	116	None	replace
261	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "* "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "* "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "* "))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
262	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "- "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "- "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "- "))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
263	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "0 "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "0 "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "0 "))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
264	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "n "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "n "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "n "))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
265	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "/ "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "/ "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "/ "))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
266	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "+ "))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "+ "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals( "+ "))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
267	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.contains(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.contains(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.contains(cleaned))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	16	None	replace
268	[BUG]  [BUGGY]  }  else  if(!calendar.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  calendar  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!calendar.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!calendar.contains(timezoneIndicator))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  calendar	16	None	replace
269	[BUG]  [BUGGY]  }  else  if(!hashCode.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashCode  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashCode.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashCode.contains(timezoneIndicator))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	16	None	replace
270	[BUG]  [BUGGY]  }  else  if(!utc.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  utc  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!utc.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!utc.contains(timezoneIndicator))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  utc	16	None	replace
271	[BUG]  [BUGGY]  }  else  if(!hashZone.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashZone  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashZone.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashZone.contains(timezoneIndicator))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashZone	16	None	replace
272	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator  + "')||!cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator  + "')||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator  + "')||!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	32	None	replace
273	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneOffset))  {  [CE]  unclosed  string  literal  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneOffset))  {	  }    else    if(cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	32	None	replace
274	[BUG]  [BUGGY]  }  else  if(!hashzoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashzoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashzoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashzoneIndicator.equals(timezoneIndicator))  {	  }    else    if(!hashZone.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashzoneIndicator	67	None	replace
275	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(hashZone))  {  [CE]  cannot  find  symbol  hashZone  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(hashZone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(hashZone))  {	  }    else    if(!hashZone.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashZone	67	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  char  cannot  be  dereferenced  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
277	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	80	None	replace
278	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).get  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).get	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	80	None	replace
279	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	80	None	replace
280	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
281	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	80	None	replace
282	[BUG]  [BUGGY]  }  else  if(hash  ||  hasT)  {  [CE]  cannot  find  symbol  hash  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hash  ||  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hash  ||  hasT)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  hash	59	None	replace
283	[BUG]  [BUGGY]  }  else  if(empty  ||  hasT)  {  [CE]  cannot  find  symbol  empty  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(empty  ||  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(empty  ||  hasT)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  empty	59	None	replace
284	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasTimeZone)  {  [CE]  cannot  find  symbol  hasTimeZone  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasTimeZone)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasTimeZone)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	59	None	replace
285	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasFinally)  {  [CE]  cannot  find  symbol  hasFinally  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasFinally)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasFinally)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  hasFinally	59	None	replace
286	[BUG]  [BUGGY]  }  else  if(!utc.equals(date))  {  [CE]  cannot  find  symbol  utc  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!utc.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!utc.equals(date))  {	  }    else    if(!cleaned.equals(date))    {    	non-compiled	[CE]  cannot  find  symbol  utc	42	None	replace
287	[BUG]  [BUGGY]  }  else  if(!uTC_ID.equals(date))  {  [CE]  cannot  find  symbol  uTC_ID  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!uTC_ID.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!uTC_ID.equals(date))  {	  }    else    if(!cleaned.equals(date))    {    	non-compiled	[CE]  cannot  find  symbol  uTC_ID	42	None	replace
288	[BUG]  [BUGGY]  }  else  if(!utf8.equals(date))  {  [CE]  cannot  find  symbol  utf8  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!utf8.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!utf8.equals(date))  {	  }    else    if(!cleaned.equals(date))    {    	non-compiled	[CE]  cannot  find  symbol  utf8	42	None	replace
289	[BUG]  [BUGGY]  }  else  if(!hashCode.equals(date))  {  [CE]  cannot  find  symbol  hashCode  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashCode.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashCode.equals(date))  {	  }    else    if(!cleaned.equals(date))    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	42	None	replace
290	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)||  date.contains(timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)||  date.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)||  date.contains(timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
291	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
292	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator,  cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator,  cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator,  cleaned))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	18	None	replace
293	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)||  timezoneIndicator.equals(cleaned))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)||  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)||  timezoneIndicator.equals(cleaned))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
294	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&  cleaned.equals(timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)&&  cleaned.equals(timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
295	[BUG]  [BUGGY]  }  else  if(item.getMessage()!=  null)  {  [CE]  cannot  find  symbol  item  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(item.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(item.getMessage()!=  null)  {	  }    else    if(timezone.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  item	27	None	replace
296	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}    else    if(hasT    ||    hasT)    {    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
297	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(hasT    ||    hasT)    {    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
298	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT)  {  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}    else    if(hasT    ||    hasT)    {    if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
299	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT)  {  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT)  {  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(hasT    ||    hasT)    {    if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
300	[BUG]  [BUGGY]  }  else  if(date.equals(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.equals(cleaned))  {	  }    else    if(cleaned.equals(date))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	33	None	replace
301	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(date))  {  [CE]  char  cannot  be  dereferenced  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(date))  {	  }    else    if(cleaned.equals(date))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	33	None	replace
302	[BUG]  [BUGGY]  }  else  if(tz.equals(date))  {  [CE]  cannot  find  symbol  tz  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz.equals(date))  {	  }    else    if(cleaned.equals(date))    {    	non-compiled	[CE]  cannot  find  symbol  tz	33	None	replace
303	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneOffset))  {  [CE]  cannot  find  symbol  timezoneOffset  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneOffset))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	10	None	replace
304	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezone))  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	10	None	replace
305	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneId))  {  [CE]  cannot  find  symbol  timezoneId  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneId	10	None	replace
306	[BUG]  [BUGGY]  }  else  if(!false.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!false.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!false.equals(timezoneIndicator))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	93	None	replace
307	[BUG]  [BUGGY]  }  else  if(true.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(true.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(true.equals(timezoneIndicator))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	93	None	replace
308	[BUG]  [BUGGY]  }  else  if(false.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	93	None	replace
309	[BUG]  [BUGGY]  }  else  if(false.equals(timezoneIndicator)||!cleaned.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.equals(timezoneIndicator)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.equals(timezoneIndicator)||!cleaned.equals(timezoneIndicator))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	93	None	replace
310	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(false))  {  [CE]  char  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(false))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(false))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	93	None	replace
311	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||!timezoneIndicator.equals(timezone))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||!timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	2	None	replace
312	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
313	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(TimeZone.UTC,  timezoneIndicator))  {  [CE]  cannot  find  symbol  UTC  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(TimeZone.UTC,  timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(TimeZone.UTC,  timezoneIndicator))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
314	[BUG]  [BUGGY]  }  else  if(!hash.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hash.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hash.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
315	[BUG]  [BUGGY]  }  else  if(!clean.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!clean.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!clean.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
316	[BUG]  [BUGGY]  }  else  if(tz  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  tz  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	8	None	replace
317	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  priority	8	None	replace
318	[BUG]  [BUGGY]  }  else  if(dragged  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  dragged  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(dragged  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(dragged  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  dragged	8	None	replace
319	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  periodIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  periodIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  periodIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	8	None	replace
320	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	83	None	replace
321	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  >=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  >=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  >=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	83	None	replace
322	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneOutdicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneOutdicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	83	None	replace
323	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||  timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	83	None	replace
324	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
325	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  pos);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  pos);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  pos);	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
326	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  priority  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||  timezoneIndicator!=  null)  {	  }    else    if(priority    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	70	None	replace
327	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	1	None	replace
328	[BUG]  [BUGGY]  }  else  if(hashZone.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashZone  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZone.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZone.contains(timezoneIndicator))  {	  }    else    if(tz.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashZone	15	None	replace
329	[BUG]  [BUGGY]  }  else  if(TimeZone.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(TimeZone.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(TimeZone.contains(timezoneIndicator))  {	  }    else    if(tz.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
330	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezoneOffset))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||!timezoneIndicator.equals(timezoneOffset))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	82	None	replace
331	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")||  timezoneIndicator.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  string  literal  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")||  timezoneIndicator.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")||  timezoneIndicator.equals(timezoneIndicator+ "'))  {	  }    else    if(timezoneIndicator.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  unclosed  string  literal	91	None	replace
332	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")&&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")&&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator+ "' ")&&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	91	None	replace
333	[BUG]  [BUGGY]  }  else  if(false.equals(date))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.equals(date))  {	  }    else    if(cleaned.equals(date))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	33	None	replace
334	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneNumber))  {  [CE]  cannot  find  symbol  timezoneNumber  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneNumber))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneNumber))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneNumber	10	None	replace
335	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneID))  {  [CE]  cannot  find  symbol  timezoneID  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneID))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneID	10	None	replace
336	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasSecond)  {  [CE]  cannot  find  symbol  hasSecond  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasSecond)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasSecond)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  hasSecond	59	None	replace
337	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasDate)  {  [CE]  cannot  find  symbol  hasDate  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasDate)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasDate)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  hasDate	59	None	replace
338	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}  else  if(date!=  null)  {	  }    else    if(hashZone!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	89	1	replace
339	[BUG]  [BUGGY]  }  else  if(date!=  null)  {  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date!=  null)  {	  }    else    if(hashZone!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	89	1	replace
340	[BUG]  [BUGGY]  }  else  if(removed.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  removed  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(removed.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(removed.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  removed	96	None	replace
341	[BUG]  [BUGGY]  }  else  if(!removed.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  removed  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!removed.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!removed.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  removed	96	None	replace
342	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	96	None	replace
343	[BUG]  [BUGGY]  }  else  if(tz.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  tz  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	96	None	replace
344	[BUG]  [BUGGY]  }  else  if(!hashToken.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashToken  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashToken.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashToken.equals(timezoneIndicator))  {	  }    else    if(!utf8.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashToken	50	None	replace
345	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.getMessage()  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.getMessage()  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.getMessage()  ==  null)  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	30	None	replace
346	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.getMessage()  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.getMessage()  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.getMessage()  ==  null)  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	30	None	replace
347	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()  ==  null  ||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
348	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.getMessage()  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.getMessage()  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.getMessage()  ==  null)  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	30	None	replace
349	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  ||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  ||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
350	[BUG]  [BUGGY]  }  else  if(!hashZoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashZoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashZoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashZoneIndicator.equals(timezoneIndicator))  {	  }    else    if(!uTC_ID.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashZoneIndicator	66	None	replace
351	[BUG]  [BUGGY]  }  else  if(!hasT  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	55	None	replace
352	[BUG]  [BUGGY]  }  else  if(!hasT  &&!timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&!timezoneIndicator.equals(cleaned))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	55	None	replace
353	[BUG]  [BUGGY]  }  else  if(!hasT  &&  timezoneIndicator  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&  timezoneIndicator  ==  null)  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	55	None	replace
354	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  TimeZone.getDefault()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}  else  if(!hasT  &&  TimeZone.getDefault()!=  null)  {	  }    else    if(!hasT)    {    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
355	[BUG]  [BUGGY]  }  else  if(!hasT  &&  TimeZone.getDefault()!=  null)  {  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  TimeZone.getDefault()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&  TimeZone.getDefault()!=  null)  {	  }    else    if(!hasT)    {    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
356	[BUG]  [BUGGY]  }  else  if(zoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator  ==  null)  {	  }    else    if(calendar    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	103	None	replace
357	[BUG]  [BUGGY]  }  else  if(hashZone  ==  null)  {  [CE]  cannot  find  symbol  hashZone  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZone  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZone  ==  null)  {	  }    else    if(calendar    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashZone	103	None	replace
358	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	}  else  if(date  ==  null)  {	  }    else    if(calendar    ==    null)    {    	compilable	  [FE]  JsonSyntaxException  	103	1	replace
359	[BUG]  [BUGGY]  }  else  if(date  ==  null)  {  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date  ==  null)  {	  }    else    if(calendar    ==    null)    {    	compilable	  [FE]  JsonSyntaxException  	103	1	replace
360	[BUG]  [BUGGY]  if(timezoneIndicator.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  char  cannot  be  dereferenced	24	None	replace
361	[BUG]  [BUGGY]  String  cleaned  =  c.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "'.   ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  String  cleaned  =  c.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	String  cleaned  =  c.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "'.   ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  	24	None	replace
362	[BUG]  [BUGGY]  }  else  if(zoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	8	None	replace
363	[BUG]  [BUGGY]  }  else  if(hashZoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashZoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashZoneIndicator	8	None	replace
364	[BUG]  [BUGGY]  }  else  if(date  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date  ==  null  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	8	None	replace
365	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  period.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  period.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  period.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	6	None	replace
366	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||  style.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||  style.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||  style.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	6	None	replace
367	[BUG]  [BUGGY]  }  else  if(false.getMessage()!=  null)  {  [CE]  boolean  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.getMessage()!=  null)  {	  }    else    if(cleaned.getMessage()!=    null)    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	26	None	replace
368	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(cleaned!=  null)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(cleaned!=  null)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(cleaned!=  null)  {  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	non-compiled	[CE]  'catch'  without  'try'	39	None	add
369	[BUG]  [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    if(hasT)  {  throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  }  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	non-compiled	[CE]  cannot  find  symbol  cleaned	39	None	add
370	[BUG]  [BUGGY]  }  else  if(timezoneOutdicator.getMessage()!=  null)  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneOutdicator.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneOutdicator.getMessage()!=  null)  {	  }    else    if(tz.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	28	None	replace
371	[BUG]  [BUGGY]  }  else  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator+ "',  '-'))  {  [CE]  unclosed  string  literal  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator+ "',  '-'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator+ "',  '-'))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
372	[BUG]  [BUGGY]  }  else  if(hash.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hash.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hash.equals(TimeZone.UTC))  {	  }    else    if(cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	36	None	replace
373	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  >=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  >=  null)  {	  }    else    if(cleaned    >=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	60	None	replace
374	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  time  zone  indicator  is  not  valid. ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  time  zone  indicator  is  not  valid. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  time  zone  indicator  is  not  valid. ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
375	[BUG]  [BUGGY]  }  else  if(tz  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  tz  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	5	None	replace
376	[BUG]  [BUGGY]  }  else  if(hashZone  ==  null  ||!hashZone.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashZone  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZone  ==  null  ||!hashZone.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZone  ==  null  ||!hashZone.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashZone	5	None	replace
377	[BUG]  [BUGGY]  }  else  if(zoneIndicator  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	5	None	replace
378	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||!priority.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||!priority.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||!priority.equals(timezoneIndicator))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  priority	5	None	replace
379	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezoneOutdicator))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	84	None	replace
380	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneIndex))  {  [CE]  cannot  find  symbol  timezoneIndex  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneIndex))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezoneIndex))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneIndex	84	None	replace
381	[BUG]  [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneID))  {  [CE]  cannot  find  symbol  timezoneID  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&!timezoneIndicator.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&!timezoneIndicator.equals(timezoneID))  {	  }    else    if(hasT    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneID	84	None	replace
382	[BUG]  [BUGGY]  }  else  if(datezone.getMessage()!=  null)  {  [CE]  cannot  find  symbol  datezone  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(datezone.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(datezone.getMessage()!=  null)  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  datezone	29	None	replace
383	[BUG]  [BUGGY]  }  else  if(date.getTime()!=  null)  {  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getTime()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getTime()!=  null)  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
384	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	97	None	replace
385	[BUG]  [BUGGY]  }  else  if(len.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  len  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(len.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(len.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  len	97	None	replace
386	[BUG]  [BUGGY]  }  else  if(date.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  tz  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	97	None	replace
387	[BUG]  [BUGGY]  }  else  if(!hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(!hasT)    {    JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
388	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator!=    null    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
389	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator!=    null    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
390	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneOffset))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneOffset))  {	  }    else    if(timezoneIndicator!=    null    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
391	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i  [CE]  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  	77	None	replace
392	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	80	None	replace
393	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	80	None	replace
394	[BUG]  [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'. ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'. ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneId+ "'. ");  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
395	[BUG]  [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
396	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.getMessage()!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.getMessage()!=  null)  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	25	None	replace
397	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.getMessage()!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  &&  timezoneIndicator.getMessage()!=  null)  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	25	None	replace
398	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  date.getMessage()!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  date.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  date.getMessage()!=  null)  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	25	None	replace
399	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMethod()!=  UTC_ID)  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMethod()!=  UTC_ID)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMethod()!=  UTC_ID)  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
400	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	79	None	replace
401	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator  ==  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	79	None	replace
402	[BUG]  [BUGGY]  }  else  if(zoneIndicator!=  null)  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator!=  null)  {	  }    else    if(calendar!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	62	None	replace
403	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "'. ");  [CE]  unreachable  statement  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "'. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "'. ");	  	non-compiled	[CE]  unreachable  statement	37	None	add
404	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  clean.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  clean.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	114	None	replace
405	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneID))  {  [CE]  cannot  find  symbol  timezoneID  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(timezoneID))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneID	14	None	replace
406	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneSecond))  {  [CE]  cannot  find  symbol  timezoneSecond  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.contains(timezoneSecond))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.contains(timezoneSecond))  {	  }    else    if(timezoneIndicator.contains(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneSecond	14	None	replace
407	[BUG]  [BUGGY]  }  else  if(TimeZone.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(TimeZone.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(TimeZone.getMessage()!=  null)  {	  }    else    if(timezone.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
408	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(false))  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(false))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(false))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	93	None	replace
409	[BUG]  [BUGGY]  }  else  if(false.equals(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.equals(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.equals(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	93	None	replace
410	[BUG]  [BUGGY]  }  else  if(false.equals(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.equals(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.equals(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(false.equals(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	93	None	replace
411	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
412	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&!timezoneIndicator.equals(cleaned))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)&&!timezoneIndicator.equals(cleaned))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
413	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
414	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator,  timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator,  timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator,  timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
415	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneNumber))  {  [CE]  cannot  find  symbol  timezoneNumber  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneNumber))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneNumber))  {	  }    else    if(cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneNumber	35	None	replace
416	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezone))  {  [CE]  cannot  find  symbol  cleaned  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezone))  {	  }    else    if(cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	35	None	replace
417	[BUG]  [BUGGY]  }  else  if(hashZoneIndicator  &&  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  hashZoneIndicator  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZoneIndicator  &&  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZoneIndicator  &&  timezoneIndicator  ==  null)  {	  }    else    if(hasT    &&    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashZoneIndicator	99	None	replace
418	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndex))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndex))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndex))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
419	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezonePosition))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezonePosition))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezonePosition))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
420	[BUG]  [BUGGY]  }  else  if(hashZoneIndicator  ||  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  hashZoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZoneIndicator  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZoneIndicator  ||  timezoneIndicator!=  null)  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashZoneIndicator	57	None	replace
421	[BUG]  [BUGGY]  }  else  if(tz  ||  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  tz  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz  ||  timezoneIndicator!=  null)  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  tz	57	None	replace
422	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!cleaned.equals(timezoneId))  {	  }    else    if(timezoneIndicator    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	117	None	replace
423	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  ||!cleaned.equals(timezoneId))  {	  }    else    if(timezoneIndicator    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	117	None	replace
424	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasTimeZone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasTimeZone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasTimeZone(timezoneIndicator))  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
425	[BUG]  [BUGGY]  }  else  if(false.contains(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false.contains(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false.contains(timezoneIndicator)&&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	113	None	replace
426	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.matches(timezone))  {  [CE]  char  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.matches(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator.matches(timezone))  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	100	None	replace
427	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.equals(timezone))  {  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator.equals(timezone))  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	100	None	replace
428	[BUG]  [BUGGY]  }  else  if(hashZoneIndicator  ||  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  hashZoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashZoneIndicator  ||  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashZoneIndicator  ||  timezoneIndicator  ==  null)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashZoneIndicator	58	None	replace
429	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  hasT)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  hasT)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  hasT)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	58	None	replace
430	[BUG]  [BUGGY]  }  else  if(tz  ||  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  tz  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz  ||  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz  ||  timezoneIndicator  ==  null)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  tz	58	None	replace
431	[BUG]  [BUGGY]  }  else  if(!hashcode.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashcode  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashcode.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashcode.equals(timezoneIndicator))  {	  }    else    if(!hashCode.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashcode	48	None	replace
432	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ||  isInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ||  isInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ||  isInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
433	[BUG]  [BUGGY]  }  else  if(tz  ||  isInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  tz  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tz  ||  isInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tz  ||  isInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tz	85	None	replace
434	[BUG]  [BUGGY]  }  else  if(!hasT  &&  isInvalidTimezone(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  isInvalidTimezone(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&  isInvalidTimezone(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
435	[BUG]  [BUGGY]  }  else  if(!tz.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!tz.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!tz.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
436	[BUG]  [BUGGY]  }  else  if(!hashZone.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashZone.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashZone.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
437	[BUG]  [BUGGY]  }  else  if(!hashCode.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hashCode.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hashCode.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
438	[BUG]  [BUGGY]  }  else  if(strubbed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  strubbed  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(strubbed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(strubbed.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  strubbed	4	None	replace
439	[BUG]  [BUGGY]  }  else  if(stripped.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  stripped  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(stripped.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(stripped.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  stripped	4	None	replace
440	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneOutdicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneOutdicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
441	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndex))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndex))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndex))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
442	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i)  [CE]  ')'  expected  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i)  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i)	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	78	None	replace
443	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  	78	None	replace
444	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneId))  {	  }    else    if(cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  string  literal	32	None	replace
445	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  cleaning.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  cleaning.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  cleaning.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	106	None	replace
446	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  clean.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  clean.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	106	None	replace
447	[BUG]  [BUGGY]  }  else  if(!tempZone.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  tempZone  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!tempZone.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!tempZone.equals(timezoneIndicator))  {	  }    else    if(!hashZone.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  tempZone	67	None	replace
448	[BUG]  [BUGGY]  }  else  if(hasT)  {  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  }    else    if(hasT)    {    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	40	None	replace
449	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(timezoneNumber))  {  [CE]  cannot  find  symbol  timezoneNumber  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(timezoneNumber))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(timezoneNumber))  {	  }    else    if(!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneNumber	44	None	replace
450	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator    ==    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	115	None	replace
451	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezone))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  timezoneIndicator.equals(timezone))  {	  }    else    if(timezoneIndicator    ==    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	115	None	replace
452	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime()	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	81	None	replace
453	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	95	None	replace
454	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!timezoneIndicator.equals(cleaned))  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneIndicator)&&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneIndicator)&&!timezoneIndicator.equals(cleaned))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	95	None	replace
455	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(cleaned)&&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(cleaned)&&!timezoneIndicator.equals(cleaned))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	95	None	replace
456	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	95	None	replace
457	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneID))  {  [CE]  cannot  find  symbol  timezoneID  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneID))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneID	46	None	replace
458	[BUG]  [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneSecond))  {  [CE]  cannot  find  symbol  timezoneSecond  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!timezoneIndicator.equals(timezoneSecond))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!timezoneIndicator.equals(timezoneSecond))  {	  }    else    if(!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneSecond	46	None	replace
459	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneId))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneId))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	2	None	replace
460	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneOffset))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneOffset))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	2	None	replace
461	[BUG]  [BUGGY]  if(timezoneIndicator.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  char  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  char  cannot  be  dereferenced	20	None	replace
462	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneOutdicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||!timezoneIndicator.equals(timezoneOutdicator))  {	  }    else    if(timezoneIndicator    ==    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	94	None	replace
463	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(hasT    ||    hasT)    {    JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
464	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",' ");  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",' ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",' ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
465	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
466	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  needs  to  be   ");  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  needs  to  be   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  needs  to  be   ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
467	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  is  not  a  valid  time  zone  indicator. ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  is  not  a  valid  time  zone  indicator. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  is  not  a  valid  time  zone  indicator. ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
468	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  must  be  a  string  value ");  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  must  be  a  string  value ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  must  be  a  string  value ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
469	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  must  be  in  the  range. ");  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  must  be  in  the  range. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "',  must  be  in  the  range. ");	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
470	[BUG]  [BUGGY]  }  else  if(!utc.equals(timezoneIndicator+ "'   "))  {  [CE]  cannot  find  symbol  utc  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!utc.equals(timezoneIndicator+ "'   "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!utc.equals(timezoneIndicator+ "'   "))  {	  }    else    if(!cleaned.equals(timezoneIndicator+   "'       "))    {    	non-compiled	[CE]  cannot  find  symbol  utc	31	None	replace
471	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	80	None	replace
472	[BUG]  [BUGGY]  }  else  if(hashCode.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashCode  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashCode.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashCode.contains(timezoneIndicator))  {	  }    else    if(color.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	112	None	replace
473	[BUG]  [BUGGY]  }  else  if(lattice.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  lattice  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(lattice.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(lattice.contains(timezoneIndicator))  {	  }    else    if(color.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  lattice	112	None	replace
474	[BUG]  [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  cleaned);  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  cleaned);  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  cleaned);  }	  }    else    if(hasT)    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
475	[BUG]  [BUGGY]  }  else  if(clean.getMessage()!=  null)  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(clean.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(clean.getMessage()!=  null)  {	  }    else    if(stubbed.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	118	None	replace
476	[BUG]  [BUGGY]  }  else  if(cleane.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleane.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleane.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	4	None	replace
477	[BUG]  [BUGGY]  }  else  if(hashCode!=  null)  {  [CE]  cannot  find  symbol  hashCode  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashCode!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashCode!=  null)  {	  }    else    if(lattice!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	90	None	replace
478	[BUG]  [BUGGY]  }  else  if(stubbed!=  null)  {  [CE]  cannot  find  symbol  stubbed  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(stubbed!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(stubbed!=  null)  {	  }    else    if(lattice!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  stubbed	90	None	replace
479	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneIndicator+ "'))  {  [CE]  unclosed  character  literal  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneIndicator+ "'))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator+ "')||!cleaned.equals(timezoneIndicator+ "'))  {	  }    else    if(cleaned.equals(timezoneIndicator+   "'))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
480	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
481	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.isEmpty())  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.isEmpty())  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.isEmpty())  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
482	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  &&  cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
483	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.equals(cleaned))  {  [CE]  char  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()!=  null  &&!timezoneIndicator.equals(cleaned))  {	  }    else    if(timezoneIndicator.getMessage()!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	25	None	replace
484	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  ==  null  ||!timezoneIndicator.equals(cleaned))  {  [CE]  incomparable  types:  char  and  <null>  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  ==  null  ||!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator  ==  null  ||!timezoneIndicator.equals(cleaned))  {	  }    else    if(hasT    &&    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
485	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  ==  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  ==  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator  ==  null  ||  cleaned.equals(timezoneIndicator))  {	  }    else    if(hasT    &&    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	99	None	replace
486	[BUG]  [BUGGY]  }  else  if(!int.equals(timezoneIndicator))  {  [CE]  class  expected  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!int.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!int.equals(timezoneIndicator))  {	  }    else    if(!utc.equals(timezoneIndicator))    {    	non-compiled	[CE]  class  expected	47	None	replace
487	[BUG]  [BUGGY]  }  else  if(!hasT)  {  if(timezoneIndicator!=  null)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [CE]  incomparable  types:  char  and  <null>  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT)  {  if(timezoneIndicator!=  null)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(!hasT)    {    if(timezoneIndicator!=  null)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	non-compiled	[CE]  incomparable  types:  char  and  <null>	54	None	add
488	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT  &&  timezoneIndicator!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT  &&  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasT  &&  timezoneIndicator!=  null)  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	53	None	replace
489	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasT  &&!cleaned.equals(timezoneIndicator))  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	53	None	replace
490	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]        JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasT  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	53	None	replace
491	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT  &&  timezoneIndicator  ==  null)  {  [CE]  incomparable  types:  char  and  <null>  [FE]          JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT  &&  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  hasT  &&  timezoneIndicator  ==  null)  {	  }    else    if(hasT    ||    hasT)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	53	None	replace
492	[BUG]  [BUGGY]  }  else  if(tempZone.getMessage()!=  null)  {  [CE]  cannot  find  symbol  tempZone  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(tempZone.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(tempZone.getMessage()!=  null)  {	  }    else    if(tz.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  tempZone	28	None	replace
493	[BUG]  [BUGGY]  }  else  if(saved.getMessage()!=  null)  {  [CE]  cannot  find  symbol  saved  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(saved.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(saved.getMessage()!=  null)  {	  }    else    if(tz.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  saved	28	None	replace
494	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  date.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  date.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  date.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
495	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(style))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(style))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(style))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	104	None	replace
496	[BUG]  [BUGGY]  }  else  if(calendar!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  calendar  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(calendar!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(calendar!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(calendar!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  calendar	62	None	replace
497	[BUG]  [BUGGY]  }  else  if(calendar!=  null  &&  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  calendar  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(calendar!=  null  &&  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(calendar!=  null  &&  timezoneIndicator!=  null)  {	  }    else    if(calendar!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  calendar	62	None	replace
498	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(hasT    &&    timezoneIndicator!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	56	None	replace
499	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator!=  null  &&!timezoneIndicator.equals(cleaned))  {  [CE]  incomparable  types:  char  and  <null>  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator!=  null  &&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator!=  null  &&!timezoneIndicator.equals(cleaned))  {	  }    else    if(hasT    &&    timezoneIndicator!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	56	None	replace
500	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator!=  null  &&  cleaned.equals(timezoneIndicator))  {	  }    else    if(hasT    &&    timezoneIndicator!=    null)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	56	None	replace
501	[BUG]  [BUGGY]  }  else  if(zoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	82	None	replace
502	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  >=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  >=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  >=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	82	None	replace
503	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneOutdicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(timezoneOutdicator))  {	  }    else    if(timezoneIndicator!=    null    ||!timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	82	None	replace
504	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&  timezoneIndicator.equals(cleaned))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)&&  timezoneIndicator.equals(cleaned))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
505	[BUG]  [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.contains(timezoneIndicator)&&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.contains(timezoneIndicator)&&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(date.contains(timezoneIndicator))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	18	None	replace
506	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	41	None	replace
507	[BUG]  [BUGGY]  }  else  if(cleaned!=  timezoneIndicator  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  timezoneIndicator  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  timezoneIndicator  ||!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	41	None	replace
508	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneOutdicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	97	None	replace
509	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!day.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!day.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!day.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	97	None	replace
510	[BUG]  [BUGGY]  }  else  if(false,  calendar.contains(timezoneIndicator))  {  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(false,  calendar.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(false,  calendar.contains(timezoneIndicator))  {	  }    else    if(false.contains(timezoneIndicator))    {    	non-compiled	[CE]  ')'  expected	113	None	replace
511	[BUG]  [BUGGY]  }  else  if(hasT  ||  periodIndicator  ==  null)  {  [CE]  cannot  find  symbol  periodIndicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  periodIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  periodIndicator  ==  null)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  periodIndicator	58	None	replace
512	[BUG]  [BUGGY]  }  else  if(hash  ||  timezoneIndicator  ==  null)  {  [CE]  cannot  find  symbol  hash  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hash  ||  timezoneIndicator  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hash  ||  timezoneIndicator  ==  null)  {	  }    else    if(hasT    ||    timezoneIndicator    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  hash	58	None	replace
513	[BUG]  [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
514	[BUG]  [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&!cleaned.equals(timezoneId))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
515	[BUG]  [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&  cleaned.equals(timezoneId))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
516	[BUG]  [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&  timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&  timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  isInvalidTimezone(timezoneIndicator)&&  timezoneIndicator.equals(cleaned))  {	  }    else    if(hasT    ||    isInvalidTimezone(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
517	[BUG]  [BUGGY]  if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  hasT);  }  [CE]  cannot  find  symbol  cleaned  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  hasT);  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  hasT);  }	          if(cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	20	None	replace
518	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
519	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
520	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||  cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||  cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
521	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!timezoneIndicator.equals(cleaned))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(timezoneIndicator)||!timezoneIndicator.equals(cleaned))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
522	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(this.timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(this.timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  TimeZone.isInstance(this.timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    TimeZone.isInstance(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	109	None	replace
523	[BUG]  [BUGGY]  }  else  if(stubbed  ==  null)  {  [CE]  cannot  find  symbol  stubbed  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(stubbed  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(stubbed  ==  null)  {	  }    else    if(hash    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  stubbed	72	None	replace
524	[BUG]  [BUGGY]  }  else  if(dragged  ==  null)  {  [CE]  cannot  find  symbol  dragged  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(dragged  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(dragged  ==  null)  {	  }    else    if(lattice    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  dragged	71	None	replace
525	[BUG]  [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  pos);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  pos);  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "' ",  pos);	  }    else    if(hasT)    {    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
526	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",  given,  resolves  to "  +timezone.getID());  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "',    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	22	None	replace
527	[BUG]  [BUGGY]  }  else  if(!indent.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  indent  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!indent.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!indent.equals(timezoneIndicator))  {	  }    else    if(!hashCode.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indent	48	None	replace
528	[BUG]  [BUGGY]  }  else  if(zoneIndicator.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator.contains(timezoneIndicator))  {	  }    else    if(tz.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	15	None	replace
529	[BUG]  [BUGGY]  }  else  if(indicator.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  indicator  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(indicator.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(indicator.contains(timezoneIndicator))  {	  }    else    if(tz.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indicator	15	None	replace
530	[BUG]  [BUGGY]  }  else  if(stubbed.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  stubbed  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(stubbed.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(stubbed.equals(timezoneIndicator))  {	  }    else    if(hash.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  stubbed	12	None	replace
531	[BUG]  [BUGGY]  }  else  if(stubbed.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  stubbed  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(stubbed.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(stubbed.contains(timezoneIndicator))  {	  }    else    if(seen.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  stubbed	86	None	replace
532	[BUG]  [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  Cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator  ==  null  ||  Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator  ==  null  ||  Cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator    ==    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	115	None	replace
533	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneSecond))  {  [CE]  cannot  find  symbol  timezoneSecond  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneSecond))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneSecond))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneSecond	10	None	replace
534	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.equals(timezoneOutdicator))  {	  }    else    if(timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	10	None	replace
535	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",'.   ");  }  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",'.   ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",'.   ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	23	None	replace
536	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  timezone  indicator  does  not  exist. ");  }  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  timezone  indicator  does  not  exist. ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  timezone  indicator  does  not  exist. ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	23	None	replace
537	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  [CE]  unreachable  statement  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.   ");	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  unreachable  statement	23	None	replace
538	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  timezone  indicator  is  not  valid. ");  }  [CE]  cannot  find  symbol  cleaned  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  timezone  indicator  is  not  valid. ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "'.  Please  check  that  the  timezone  indicator  is  not  valid. ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	23	None	replace
539	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
540	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
541	[BUG]  [BUGGY]  }  else  if(!hasT  &&  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!hasT  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!hasT  &&  cleaned.equals(timezoneIndicator))  {	  }    else    if(!hasT)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	55	None	replace
542	[BUG]  [BUGGY]  }  else  if(!indicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  indicator  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!indicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!indicator.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  }    else    if(!indicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indicator	111	None	replace
543	[BUG]  [BUGGY]  }  else  if(!indicator.equals(timezoneIndicator)&&!indicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  indicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!indicator.equals(timezoneIndicator)&&!indicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!indicator.equals(timezoneIndicator)&&!indicator.equals(timezoneIndicator))  {	  }    else    if(!indicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indicator	111	None	replace
544	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!hashCode.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!hashCode.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!hashCode.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
545	[BUG]  [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!indent.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaned  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned.equals(timezoneIndicator)&&!indent.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned.equals(timezoneIndicator)&&!indent.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!removed.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	96	None	replace
546	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  hasT);  }  [CE]  cannot  find  symbol  cleaned  [FE]        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  hasT);  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ",  hasT);  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	19	None	replace
547	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ ",' ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	19	None	replace
548	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  }  [CE]  cannot  find  symbol  cleaned  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "': ");  }	          if(!cleaned.equals(timezoneIndicator))    {    throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'   ");    }    	non-compiled	[CE]  cannot  find  symbol  cleaned	19	None	replace
549	[BUG]  [BUGGY]  }  else  if(calendar  ==  null  ||  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  calendar  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(calendar  ==  null  ||  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(calendar  ==  null  ||  timezoneIndicator!=  null)  {	  }    else    if(calendar    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  calendar	103	None	replace
550	[BUG]  [BUGGY]  }  else  if(!indicator.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  indicator  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!indicator.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!indicator.contains(timezoneIndicator))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indicator	16	None	replace
551	[BUG]  [BUGGY]  }  else  if(!seen.contains(timezoneIndicator))  {  [CE]  cannot  find  symbol  seen  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!seen.contains(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!seen.contains(timezoneIndicator))  {	  }    else    if(!cleaned.contains(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  seen	16	None	replace
552	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||  clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||  clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||  clean.equals(timezoneIndicator))  {	  }    else    if(priority    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	70	None	replace
553	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator.equals(priority))  {  [CE]  cannot  find  symbol  priority  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator.equals(priority))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||  timezoneIndicator.equals(priority))  {	  }    else    if(priority    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	70	None	replace
554	[BUG]  [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator  >=  null)  {  [CE]  cannot  find  symbol  priority  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority  ==  null  ||  timezoneIndicator  >=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority  ==  null  ||  timezoneIndicator  >=  null)  {	  }    else    if(priority    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	70	None	replace
555	[BUG]  [BUGGY]  }  else  if(hasT  ||  hasT)  {  if(timezoneIndicator!=  null)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [CE]  incomparable  types:  char  and  <null>  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  hasT)  {  if(timezoneIndicator!=  null)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}    else    if(hasT    ||    hasT)    {    if(timezoneIndicator!=  null)  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+   "' ");  }	  	non-compiled	[CE]  incomparable  types:  char  and  <null>	52	None	add
556	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.trim().length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.trim().length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.trim().length()  >  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
557	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  date.length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  date.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  date.length()  >  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
558	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  period.length()  >  0)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  period.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  period.length()  >  0)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
559	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  >  1)  {  [CE]  incomparable  types:  char  and  <null>  [FE]                                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  >  1)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.length()  >  1)  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.length()    >    0)    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	110	None	replace
560	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
561	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(date))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  timezoneIndicator.equals(date))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(   "   "))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	107	None	replace
562	[BUG]  [BUGGY]  }  else  if(hashCode.equals(timezoneIndicator)&&!hashCode.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  hashCode  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hashCode.equals(timezoneIndicator)&&!hashCode.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hashCode.equals(timezoneIndicator)&&!hashCode.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	95	None	replace
563	[BUG]  [BUGGY]  }  else  if(color.equals(timezoneIndicator)&&!color.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  color  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(color.equals(timezoneIndicator)&&!color.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(color.equals(timezoneIndicator)&&!color.equals(timezoneIndicator))  {	  }    else    if(cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  color	95	None	replace
564	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  <  =  null)  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  <  =  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator  <  =  null)  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
565	[BUG]  [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  <  null)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  &&  timezoneIndicator  <  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  &&  timezoneIndicator  <  null)  {	  }    else    if(hasT    &&    timezoneIndicator    >=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	100	None	replace
566	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	76	None	replace
567	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	76	None	replace
568	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  chronoIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  chronoIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  chronoIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	3	None	replace
569	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  style.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  style.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  style.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	3	None	replace
570	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  calendar.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  calendar.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  calendar.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	3	None	replace
571	[BUG]  [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(priority!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	61	None	replace
572	[BUG]  [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator!=  null)  {  [CE]  cannot  find  symbol  priority  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority!=  null  &&  timezoneIndicator!=  null)  {	  }    else    if(priority!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	61	None	replace
573	[BUG]  [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator.equals( " "))  {  [CE]  cannot  find  symbol  priority  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator.equals( " "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority!=  null  &&  timezoneIndicator.equals( " "))  {	  }    else    if(priority!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	61	None	replace
574	[BUG]  [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator.equals( "timezone "))  {  [CE]  cannot  find  symbol  priority  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(priority!=  null  &&  timezoneIndicator.equals( "timezone "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(priority!=  null  &&  timezoneIndicator.equals( "timezone "))  {	  }    else    if(priority!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	61	None	replace
575	[BUG]  [BUGGY]  }  else  if(!cleaned.equals(tempZoneIndicator))  {  [CE]  cannot  find  symbol  tempZoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!cleaned.equals(tempZoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!cleaned.equals(tempZoneIndicator))  {	  }    else    if(!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  tempZoneIndicator	44	None	replace
576	[BUG]  [BUGGY]  }  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator+ "'   "))  {  [CE]  cannot  find  symbol  cleaned  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator+ "'   "))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator+ "'   "))  {	  }    else    if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator+   "'   "))    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	7	None	replace
577	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	81	None	replace
578	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'catch'  without  'try'  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.setTime(calendar.get(i),  calendar.get(i).getTime());  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.setTime(calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'catch'  without  'try'	81	None	replace
579	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  Cleaned.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  Cleaned.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    &&    timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	105	None	replace
580	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(date))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(date))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&!timezoneIndicator.equals(date))  {	  }    else    if(timezoneIndicator!=    null    &&!timezoneIndicator.equals(cleaned))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	108	None	replace
581	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + ",'.   ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + ",'.   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + ",'.   ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
582	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  date+ "'.   ");  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  date+ "'.   ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  date+ "'.   ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
583	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Check  that  the  timezone  indicator  is  not  valid. ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Check  that  the  timezone  indicator  is  not  valid. ");  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator  + "'.  Check  that  the  timezone  indicator  is  not  valid. ");	          JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+   "'.   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
584	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]    JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    if(cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	non-compiled	[CE]  cannot  find  symbol  cleaned	37	None	add
585	[BUG]  [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [CE]  cannot  find  symbol  cleaned  [FE]      JsonSyntaxException    [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }    else    if(hasT)    {    throw  new  IndexOutOfBoundsException(   "Invalid  time  zone  indicator  '   "  +  timezoneIndicator+     "'   ");  if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}        else        if(hasT)        {        throw    new    IndexOutOfBoundsException(   "Invalid    time    zone    indicator    '   "    +    timezoneIndicator+       "'   ");    if(!cleaned.equals(timezoneIndicator))  {  throw  new  IndexOutOfBoundsException( "Invalid  time  zone  indicator  ' "  +  timezoneIndicator+ "' ");  }	  	non-compiled	[CE]  cannot  find  symbol  cleaned	37	None	add
586	[BUG]  [BUGGY]  }  else  if(indicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  indicator  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(indicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(indicator.equals(timezoneIndicator))  {	  }    else    if(tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  indicator	11	None	replace
587	[BUG]  [BUGGY]  }  else  if(dragged.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  dragged  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(dragged.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(dragged.equals(timezoneIndicator))  {	  }    else    if(tz.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  dragged	11	None	replace
588	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.remove(calendar.get(i),  calendar.get(i));  }	          if(timezoneIndicator!=    null)    {    for(int    i    =    0;    i    <    timezoneIndicator.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.remove(calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	77	None	replace
589	[BUG]  [BUGGY]  }  else  if(date.getMessage()!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getMessage()!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getMessage()!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
590	[BUG]  [BUGGY]  }  else  if(datezoneIndicator.getMessage()!=  null)  {  [CE]  cannot  find  symbol  datezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(datezoneIndicator.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(datezoneIndicator.getMessage()!=  null)  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  datezoneIndicator	29	None	replace
591	[BUG]  [BUGGY]  }  else  if(date.getMessage()!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(date.getMessage()!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(date.getMessage()!=  null  &&!timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(date.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
592	[BUG]  [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||  timezoneIndicator.getMessage()!=  null)  {  [CE]  char  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator.getMessage()  ==  null  ||  timezoneIndicator.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator.getMessage()  ==  null  ||  timezoneIndicator.getMessage()!=  null)  {	  }    else    if(timezoneIndicator.getMessage()    ==    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	30	None	replace
593	[BUG]  [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  periodIndicator.equals(timezoneIndicator))  {  [CE]  incomparable  types:  char  and  <null>  [FE]                      JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(timezoneIndicator!=  null  &&  periodIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(timezoneIndicator!=  null  &&  periodIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  incomparable  types:  char  and  <null>	83	None	replace
594	[BUG]  [BUGGY]  }  else  if(zoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  zoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(zoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(zoneIndicator!=  null  &&  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(timezoneIndicator!=    null    ||    timezoneIndicator.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  zoneIndicator	83	None	replace
595	[BUG]  [BUGGY]  }  else  if(hasT  ||  timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  timezoneIndicator.equals(timezoneIndicator))  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	57	None	replace
596	[BUG]  [BUGGY]  }  else  if(hasT  ||  periodIndicator!=  null)  {  [CE]  cannot  find  symbol  periodIndicator  [FE]                JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  periodIndicator!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  periodIndicator!=  null)  {	  }    else    if(hasT    ||    timezoneIndicator!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  periodIndicator	57	None	replace
597	[BUG]  [BUGGY]  }  else  if(temp.getMessage()!=  null)  {  [CE]  cannot  find  symbol  temp  [FE]              JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(temp.getMessage()!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(temp.getMessage()!=  null)  {	  }    else    if(cleaned.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  temp	26	None	replace
598	[BUG]  [BUGGY]  }  else  if(hasT  ||  cleaned)  {  [CE]  cannot  find  symbol  cleaned  [FE]                  JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(hasT  ||  cleaned)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(hasT  ||  cleaned)  {	  }    else    if(hasT    ||    hasCleaned)    {    	non-compiled	[CE]  cannot  find  symbol  cleaned	59	None	replace
599	[BUG]  [BUGGY]  }  else  if(!preferred.equals(TimeZone.UTC))  {  [CE]  cannot  find  symbol  UTC  [FE]                        JsonSyntaxException      [CONTEXT]          String  cleaned  =  act.replace(     ":     ",       "     ");  if  (!cleaned.equals(timezoneId))  {  throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }      [BUGGY]  }  else  if(!preferred.equals(TimeZone.UTC))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Invalid  time  zone  indicator  '     "  +  timezoneIndicator+     "'     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	}  else  if(!preferred.equals(TimeZone.UTC))  {	  }    else    if(!cleaned.equals(TimeZone.UTC))    {    	non-compiled	[CE]  cannot  find  symbol  UTC	64	None	replace
