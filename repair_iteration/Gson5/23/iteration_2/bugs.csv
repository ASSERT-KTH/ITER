bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
2	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
4	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( " ");	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  While(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  While(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(!hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  pos.setTime(date);  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(date);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  timezoneOffset);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  pos.setTime(timezoneId);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(timezoneId);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneId);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  date);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(timezoneIndicator,  date);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  date);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(timezoneIndicator,  timezoneId);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  timezoneId);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  pos.setStartTime(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setStartTime(timezoneIndicator);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartTime(timezoneIndicator);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  date);  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  date);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  date);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    date);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    date);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    date);    }    	non-compiled	[CE]  	14	None	replace
16	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  String  date  =(date!=  null)?  null  :  date.getClass().getName();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date!=  null)?  null  :  date.getClass().getName();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date!=  null)?  null  :  date.getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getSimpleName();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getSimpleName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getClass().getName();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "n ";  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "n ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ", ";  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ", ";  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ", ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  	13	None	replace
25	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
34	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  pos.setTime(date);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(date);  return  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date);  return  calendar.getTime();	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  pos.setTime(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(offset);  return  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(offset);  return  calendar.getTime();	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getTime();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getTime();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  pos.setIndex(offset);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setIndex(offset);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(offset);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  Date  date  =  pos.getTime();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  pos.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toString();  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toString();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.toString();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getIndex();  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  ParsePosition  date  =  pos.getIndex();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getIndex();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getType();  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getType();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getType();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
69	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  pos.setStartIndex(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setStartIndex(offset);  return  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartIndex(offset);  return  calendar.getTime();	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  Date  date  =  parseDate(date);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  parseDate(date);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex());  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getIndex());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  parseDate(timezoneIndicator);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  timezoneIndicator.getClass().getName();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date  ==  null)?  null  :  timezoneIndicator.getClass().getName();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  timezoneIndicator.getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    date);    }    	non-compiled	[CE]  	14	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
88	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
89	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
90	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
91	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
92	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
95	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
96	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
97	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos);  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  ParsePosition  date  =  parsePosition(pos);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos);	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  ParsePosition  date  =  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  ParsePosition  date  =  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  calendar.getTime();	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  not  a  statement  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	12	None	replace
101	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
106	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
110	[BUG]  [BUGGY]  Tag  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Tag  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
112	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTimeZone(timezoneIndicator);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
113	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneIndicator);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
114	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  tz);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTime(timezoneIndicator,  tz);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  tz);	  pos.setTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
116	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  pos.setIndex(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
118	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  date);  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  date);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  date);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    date);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ".equals(date));  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ".equals(date));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( " ".equals(date));  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
120	[BUG]  [BUGGY]  if(date!=  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
121	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
122	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
123	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
125	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();	  pos.setTime(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
126	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
130	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                    JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
133	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(timezoneIndicator!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  timezoneIndicator);  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  timezoneIndicator);  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
134	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  TimeZone  date  =  calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  TimeZone  date  =  calendar.getTimeZone();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  calendar.getTimeZone();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(timezoneIndicator);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator);  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;    [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName();  [BUGGY]    String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
