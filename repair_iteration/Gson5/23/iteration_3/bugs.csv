bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
2	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  	90	None	replace
3	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
4	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  	90	None	replace
5	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  null);  }  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  null);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  null);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
6	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",   ");  }  [CE]  unclosed  string  literal  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",   ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
8	[BUG]  [BUGGY]  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
11	[BUG]  [BUGGY]  Date  date  =  pos.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getDate();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
15	[BUG]  [BUGGY]  Date  date  =  this.calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
17	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  ';'  expected	87	None	replace
18	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.getDefault();  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.getDefault();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.getDefault();	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
19	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException(e)  {  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException(e)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException(e)  {	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  ')'  expected	87	None	replace
20	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  &&(f  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  &&(f  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  &&(f	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
21	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException(e)  {  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException(e)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException(e)  {	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  ')'  expected	87	None	replace
22	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  &&(  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  &&(  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  &&(	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
23	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
24	[BUG]  [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
26	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
27	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
28	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(date);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(date);	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
30	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos.getIndex());	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
31	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(offset);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(offset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(offset);	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
32	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(pos,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos,  pos.getIndex());	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
33	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos,  pos);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(pos,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos,  pos);	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
34	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(pos,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos,  timezoneIndicator);	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
35	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos,  pos.getStartOffset());  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(pos,  pos.getStartOffset());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos,  pos.getStartOffset());	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
36	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failerUneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failerUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failerUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	34	None	replace
38	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  	89	None	replace
39	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
40	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  	89	None	replace
41	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
42	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IndexOutOfBoundsException( " ");	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
43	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
44	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
45	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:       "    +    date);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
46	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:       "    +    date);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
47	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    c,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
48	[BUG]  [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [CE]  not  a  statement  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    c,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	126	None	replace
49	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    c,    pos.getIndex());    }    	non-compiled	[CE]  	126	None	replace
50	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
51	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
52	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
53	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
54	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
55	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTime(date);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
56	[BUG]  [BUGGY]  pos.setIndex(offset  +  1);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(offset  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(offset  +  1);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
57	[BUG]  [BUGGY]  pos.setStartIndex(offset);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartIndex(offset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartIndex(offset);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
58	[BUG]  [BUGGY]  pos.setIndex(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(timezoneIndicator);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
59	[BUG]  [BUGGY]  pos.setIndex(date);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(date);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
60	[BUG]  [BUGGY]  pos.setIndex(-1);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(-1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(-1);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
61	[BUG]  [BUGGY]  pos.setIndex(index);  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(index);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(index);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
62	[BUG]  [BUGGY]  if(failed)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(failed)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(failed)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
63	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
64	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  returned  calendar.getTime();  }  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset);  returned  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(offset);  returned  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  ';'  expected	73	None	replace
65	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	43	None	replace
66	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	43	None	replace
67	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  >  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	43	None	replace
68	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  >  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	43	None	replace
69	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	43	None	replace
70	[BUG]  [BUGGY]  While(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  While(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
71	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  While(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
73	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
74	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
75	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
76	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getInput());  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getInput());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getInput());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
77	[BUG]  [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  calendar.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  calendar.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  calendar.getIndex());  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
78	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
79	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act,  pos.getIndex());  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
80	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
82	[BUG]  [BUGGY]  While(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  	25	None	replace
83	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
85	[BUG]  [BUGGY]  parent  ==  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent  ==  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent  ==  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  parent!=    null    &&!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	100	None	replace
86	[BUG]  [BUGGY]  parent!=  null  &&  hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent!=  null  &&  hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent!=  null  &&  hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  parent!=    null    &&!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	100	None	replace
87	[BUG]  [BUGGY]  parent  ==  null  &&  hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  not  a  statement  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent  ==  null  &&  hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent  ==  null  &&  hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  parent!=    null    &&!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	100	None	replace
88	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	111	None	replace
89	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
90	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	111	None	replace
91	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	111	None	replace
92	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "... ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "... ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ".);  }  [CE]  unclosed  string  literal  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
97	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  For(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	44	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
99	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getTime();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getTime();	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
100	[BUG]  [BUGGY]  ParsePosition  date  =  this.timezoneIndicator.getTime();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  this.timezoneIndicator.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  this.timezoneIndicator.getTime();	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
101	[BUG]  [BUGGY]  ParsePosition  date  =  this.calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  this.calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  this.calendar.getTime();	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
102	[BUG]  [BUGGY]  ParsePosition  date  =  timezoneIndicator.getTime();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  timezoneIndicator.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  timezoneIndicator.getTime();	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
103	[BUG]  [BUGGY]  ParsePosition  date  =  this.date.getTime();  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  this.date.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  this.date.getTime();	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
104	[BUG]  [BUGGY]  ParsePosition  date  =  calendar.getTime()  -  1;  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  calendar.getTime()  -  1;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  calendar.getTime()  -  1;	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
105	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(timezoneIndicator    ==    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
106	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(timezoneIndicator    ==    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
107	[BUG]  [BUGGY]  pos.setIndex(date);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(date);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(date);  return  calendar.getTime();	  if(timezoneIndicator    ==    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
108	[BUG]  [BUGGY]  reason(false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(false)  {  throw  new  IllegalArgumentException( " ");  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
109	[BUG]  [BUGGY]  reason(true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(true)  {  throw  new  IllegalArgumentException( " ");  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
110	[BUG]  [BUGGY]  reason(failed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(failed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(failed)  {  throw  new  IllegalArgumentException( " ");  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
111	[BUG]  [BUGGY]  reason(e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(e)  {  throw  new  IllegalArgumentException( " ");  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
112	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
113	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(failerUneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(failerUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(failerUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  ')'  expected	121	None	replace
114	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori();	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
115	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  :UneoriUneori  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  :UneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failingException  :UneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	121	None	replace
116	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failer  =UneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failer  =UneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(failer  =UneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  ')'  expected	121	None	replace
117	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ". ";  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ". ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ". ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
118	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "_ ";  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "_ ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "_ ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
119	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "' ";  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "' ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "' ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
120	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",  hasT ";  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",  hasT ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",  hasT ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
121	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getValue();  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getValue();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getValue();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
122	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStartOffset();  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStartOffset();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getStartOffset();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
123	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getCode();  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getCode();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getCode();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
124	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getFieldType();  [CE]  illegal  start  of  expression  [FE]                                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getFieldType();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getFieldType();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
125	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStartType();  [CE]  illegal  start  of  expression  [FE]                                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStartType();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getStartType();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
126	[BUG]  [BUGGY]  pos.setStartOffset(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartOffset(offset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartOffset(offset);  return  calendar.getTime();	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
127	[BUG]  [BUGGY]  pos.setOffset(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setOffset(offset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setOffset(offset);  return  calendar.getTime();	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
128	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  pos);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator,  pos);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
129	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(date);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(date);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
130	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator,  timezoneOffset);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
131	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(TimeZone.UTC,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(TimeZone.UTC,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(TimeZone.UTC,  timezoneIndicator);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
132	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneId);  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneId);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
133	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(TimeZone.UTC);  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(TimeZone.UTC);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(TimeZone.UTC);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
134	[BUG]  [BUGGY]  if(hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
135	[BUG]  [BUGGY]  if(!hasT)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
136	[BUG]  [BUGGY]  while(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
137	[BUG]  [BUGGY]  if(!hasT)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setTime(date);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
138	[BUG]  [BUGGY]  if(hasT)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setTime(date);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
139	[BUG]  [BUGGY]  pos.setTimeZone(timezoneId);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneId);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
140	[BUG]  [BUGGY]  pos.setTimeZone(timezone);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezone);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezone);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
141	[BUG]  [BUGGY]  pos.setTimeZone(timezoneOutOfBoundsException);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneOutOfBoundsException);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneOutOfBoundsException);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
142	[BUG]  [BUGGY]  pos.setTimeZone(timezoneOutOfBounds);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneOutOfBounds);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneOutOfBounds);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
143	[BUG]  [BUGGY]  pos.setTimezone(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezone(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezone(timezoneIndicator);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
144	[BUG]  [BUGGY]  reason()  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason()  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason()  {  throw  new  IllegalArgumentException( " ");  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
145	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
146	[BUG]  [BUGGY]  reason(fail)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(fail)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(fail)  {  throw  new  IllegalArgumentException( " ");  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
147	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IllegalArgumentException( " ");	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
148	[BUG]  [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT  &&  date!=  null)  {  throw  new  IllegalArgumentException( " ");	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
149	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalStateException( " ");	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
150	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalSyntaxException( " ");  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalSyntaxException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalSyntaxException( " ");	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
151	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalStateException( " ");  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	97	None	replace
152	[BUG]  [BUGGY]  While(hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(hasT)  {  throw  new  IllegalStateException( " ");  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	97	None	replace
153	[BUG]  [BUGGY]  bucket  ==  null  &&  hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  bucket  ==  null  &&  hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	bucket  ==  null  &&  hasT)  {  throw  new  IllegalStateException( " ");  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	97	None	replace
154	[BUG]  [BUGGY]  bucket!=  null  &&  hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  bucket!=  null  &&  hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	bucket!=  null  &&  hasT)  {  throw  new  IllegalStateException( " ");  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	97	None	replace
155	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalStateException( " ");  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
156	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IllegalStateException( " ");  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
157	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getClass().getName();	  String    date    =(date!=    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
158	[BUG]  [BUGGY]  String  date  =(date  >=  null)?  null  :  date.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  >=  null)?  null  :  date.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  >=  null)?  null  :  date.getClass().getName();	  String    date    =(date!=    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
159	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
160	[BUG]  [BUGGY]  Date  date  =  pos.getTime()  +  1;  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getTime()  +  1;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime()  +  1;	  Date    date    =    pos.getTime();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
161	[BUG]  [BUGGY]  Date  date  =  pos.getDate();  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getDate();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getDate();	  Date    date    =    pos.getTime();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
162	[BUG]  [BUGGY]  Date  date  =  pos.getChronology();  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getChronology();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getChronology();	  Date    date    =    pos.getTime();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
163	[BUG]  [BUGGY]  Date  date  =  this.date.getTime();  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.date.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.date.getTime();	  Date    date    =    pos.getTime();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
164	[BUG]  [BUGGY]  Date  date  =  pos.getStartTime();  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getStartTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getStartTime();	  Date    date    =    pos.getTime();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }	  if(date    ==    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
167	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  IllegalStateException    e    =    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
168	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  uTC_ID,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  uTC_ID,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  uTC_ID,  pos.getIndex());	  IllegalStateException    e    =    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
169	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());	  IllegalStateException    e    =    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
170	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());	  IllegalStateException    e    =    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
171	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  	105	None	replace
172	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date  ==  null  &&UneoriUneoriUneori  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date  ==  null  &&UneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date  ==  null  &&UneoriUneoriUneori	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ')'  expected	101	None	replace
173	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date  ==  null  &&UneoriUneori  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date  ==  null  &&UneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date  ==  null  &&UneoriUneori	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ')'  expected	101	None	replace
174	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date!=  null  &&UneoriUneoriUneori  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date!=  null  &&UneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(date!=  null  &&UneoriUneoriUneori	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ')'  expected	101	None	replace
175	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
176	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  >  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
177	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  >  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
178	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
185	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
186	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  timezoneIndicator);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
187	[BUG]  [BUGGY]  Date  date  =  parseTimeZone(date);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseTimeZone(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseTimeZone(date);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
188	[BUG]  [BUGGY]  Date  date  =  parseDate(date.getTime());  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date.getTime());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date.getTime());	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
189	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getStartOffset());  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getStartOffset());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getStartOffset());	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
190	[BUG]  [BUGGY]  Date  date  =(date!=  null)?  null  :  date.toString();  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date!=  null)?  null  :  date.toString();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date!=  null)?  null  :  date.toString();	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
191	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toLowerCase();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.toLowerCase();	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
192	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  1);	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
193	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  2);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  2);	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
194	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
195	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
196	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
197	[BUG]  [BUGGY]  pos.setTime(date,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(date,  timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date,  timezoneOffset);	  pos.setTime(timezoneIndicator,    timezoneOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
198	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset  +  1);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  timezoneOffset  +  1);	  pos.setTime(timezoneIndicator,    timezoneOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
199	[BUG]  [BUGGY]  pos.setTime(date,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(date,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date,  timezoneIndicator);	  pos.setTime(timezoneIndicator,    timezoneOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
200	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset  +  3);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset  +  3);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  timezoneOffset  +  3);	  pos.setTime(timezoneIndicator,    timezoneOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
201	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset  +  2);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  timezoneOffset  +  2);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  timezoneOffset  +  2);	  pos.setTime(timezoneIndicator,    timezoneOffset);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
202	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneId);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneId);	  pos.setTimezoneIndicator(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
203	[BUG]  [BUGGY]  pos.setTimeZoneIndicator(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZoneIndicator(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZoneIndicator(timezoneIndicator);	  pos.setTimezoneIndicator(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
204	[BUG]  [BUGGY]  pos.setTimezoneIndicator(date);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(date);	  pos.setTimezoneIndicator(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
205	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneOutdicator);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(timezoneOutdicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneOutdicator);	  pos.setTimezoneIndicator(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
206	[BUG]  [BUGGY]  pos.setTimezoneIndicator(false);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(false);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(false);	  pos.setTimezoneIndicator(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
207	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
208	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  pos  =  new  ParsePosition(date,  pos.getIndex());	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "... ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "... ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
210	[BUG]  [BUGGY]  pos.setTime(date,  tz);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(date,  tz);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date,  tz);	  pos.setTime(timezoneIndicator,    tz);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
211	[BUG]  [BUGGY]  pos.setTime(tz,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(tz,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(tz,  timezoneIndicator);	  pos.setTime(timezoneIndicator,    tz);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
212	[BUG]  [BUGGY]  String  date  =(calendar  ==  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(calendar  ==  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(calendar  ==  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
213	[BUG]  [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(timezoneIndicator  ==  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
214	[BUG]  [BUGGY]  String  date  =(date!=  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date!=  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date!=  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
215	[BUG]  [BUGGY]  String  date  =(calendar!=  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(calendar!=  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(calendar!=  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
216	[BUG]  [BUGGY]  String  date  =(fail  ==  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(fail  ==  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(fail  ==  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
217	[BUG]  [BUGGY]  String  date  =(year  ==  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(year  ==  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(year  ==  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
218	[BUG]  [BUGGY]  pos.setStartTime(date);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartTime(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartTime(date);	  pos.setStartTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
219	[BUG]  [BUGGY]  pos.setEndTime(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setEndTime(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setEndTime(timezoneIndicator);	  pos.setStartTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
220	[BUG]  [BUGGY]  pos.setStartTime(false);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartTime(false);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartTime(false);	  pos.setStartTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
221	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    tz,    pos.getIndex());    }    	non-compiled	[CE]  	107	None	replace
222	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    tz,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
223	[BUG]  [BUGGY]  while(true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(true)  {  throw  new  IllegalArgumentException( " ");  }	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
224	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( " ".equals(fail.getMessage()));  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( " ".equals(fail.getMessage()));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( " ".equals(fail.getMessage()));  }	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
225	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  	88	None	replace
226	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getRawClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getRawClass().getSimpleName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getRawClass().getSimpleName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
227	[BUG]  [BUGGY]  String  date  =(date!=  null)?  null  :  date.getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date!=  null)?  null  :  date.getClass().getSimpleName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date!=  null)?  null  :  date.getClass().getSimpleName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
228	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getCode();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getCode();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getCode();	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
229	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getMillis();  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getMillis();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getMillis();	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
230	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator);  return  calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneIndicator);  return  calendar.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator);  return  calendar.getTimeZone();	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
231	[BUG]  [BUGGY]  if(!hasT)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
232	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
233	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator);  return  calendar.getTimeZone(0);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneIndicator);  return  calendar.getTimeZone(0);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator);  return  calendar.getTimeZone(0);	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
234	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
235	[BUG]  [BUGGY]  Date  date  =  this.calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
236	[BUG]  [BUGGY]  Date  date  =  this.date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
237	[BUG]  [BUGGY]  if(date  ==  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
238	[BUG]  [BUGGY]  if(date!=  null)  {  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
239	[BUG]  [BUGGY]  pos.setTime(date,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(date,  timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date,  timezoneId);	  pos.setTime(timezoneIndicator,    timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
240	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  act);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  act);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  act);	  pos.setTime(timezoneIndicator,    timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
241	[BUG]  [BUGGY]  pos.setTime(timezoneId,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneId,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneId,  timezoneIndicator);	  pos.setTime(timezoneIndicator,    timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
242	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getTime();	  Date    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
243	[BUG]  [BUGGY]  Date  date  =  this.calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.calendar.getTime();	  Date    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
244	[BUG]  [BUGGY]  Date  date  =  timezoneIndicator.getTime();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  timezoneIndicator.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  timezoneIndicator.getTime();	  Date    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
245	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getDate();	  Date    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
246	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimezoneIndicator(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
247	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTimeZone();	  pos.setTimezoneIndicator(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
248	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getStartTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getStartTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getStartTime();	  pos.setTimezoneIndicator(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
249	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	106	None	replace
250	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	106	None	replace
251	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.warning(hasT)  {  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.warning(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.warning(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	106	None	replace
252	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
253	[BUG]  [BUGGY]  pos.setTime(offset);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(offset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(offset);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
254	[BUG]  [BUGGY]  pos.setTime(fail);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(fail);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(fail);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
255	[BUG]  [BUGGY]  pos.setTime(timezoneId  +  1);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneId  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneId  +  1);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
256	[BUG]  [BUGGY]  pos.setTime(timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneOffset);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
257	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  hasT);  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  hasT);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  hasT);  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
258	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
259	[BUG]  [BUGGY]  reason(e)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(e)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(e)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
260	[BUG]  [BUGGY]  reason(failed)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(failed)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(failed)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
261	[BUG]  [BUGGY]  reason()  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason()  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason()  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
262	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  	15	None	replace
263	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
264	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  	15	None	replace
265	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
266	[BUG]  [BUGGY]  aught(IndexOutOfBoundsException.class)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(IndexOutOfBoundsException.class)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(IndexOutOfBoundsException.class)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  	130	None	replace
267	[BUG]  [BUGGY]  bucket  ==  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  not  a  statement  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  bucket  ==  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	bucket  ==  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
268	[BUG]  [BUGGY]  bucket  ==  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  not  a  statement  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  bucket  ==  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	bucket  ==  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
269	[BUG]  [BUGGY]  bucket!=  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  not  a  statement  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  bucket!=  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	bucket!=  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
270	[BUG]  [BUGGY]  bucket!=  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  not  a  statement  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  bucket!=  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	bucket!=  null  &&  hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
271	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
272	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
273	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
274	[BUG]  [BUGGY]  TimeZone  date  =  pos.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  pos.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  pos.getTimeZone();	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
275	[BUG]  [BUGGY]  TimeZone  date  =  this.timezoneIndicator.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  this.timezoneIndicator.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  this.timezoneIndicator.getTimeZone();	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
276	[BUG]  [BUGGY]  TimeZone  date  =  tz.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  tz.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  tz.getTimeZone();	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
277	[BUG]  [BUGGY]  TimeZone  date  =  this.calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  this.calendar.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  this.calendar.getTimeZone();	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
278	[BUG]  [BUGGY]  TimeZone  date  =  timezoneIndicator.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  timezoneIndicator.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  timezoneIndicator.getTimeZone();	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
279	[BUG]  [BUGGY]  TimeZone  date  =  calendar.getTimeZone(offset);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  calendar.getTimeZone(offset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  calendar.getTimeZone(offset);	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
280	[BUG]  [BUGGY]  Date  date  =(date!=  null)?  null  :  date.getTime();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date!=  null)?  null  :  date.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date!=  null)?  null  :  date.getTime();	  Date    date    =(date    ==    null)?    null    :    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
281	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStartTime();  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStartTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getStartTime();	  Date    date    =(date    ==    null)?    null    :    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
282	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getResult();  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getResult();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getResult();	  Date    date    =(date    ==    null)?    null    :    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
283	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  pos);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(timezoneIndicator,  pos);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
284	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(date);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(date);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
285	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(TimeZone.UTC,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(TimeZone.UTC,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(TimeZone.UTC,  timezoneIndicator);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
286	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(TimeZone.UTC);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(TimeZone.UTC);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(TimeZone.UTC);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
287	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(timezoneIndicator,  timezoneOffset);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
288	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(date,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(date,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(date,  timezoneIndicator);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
289	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(timezoneId);  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(timezoneId);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	62	None	replace
291	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ". "));  }  [CE]  unclosed  string  literal  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ". "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ". "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	62	None	replace
293	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	62	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "... ");  }  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "... ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
295	[BUG]  [BUGGY]  int  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  int  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	int  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.size();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	132	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.size();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
297	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  for(int    i    =    0,    len    =    date.size();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
298	[BUG]  [BUGGY]  aught(IndexOutOfBoundsException.class))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(IndexOutOfBoundsException.class))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(IndexOutOfBoundsException.class))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	28	None	replace
299	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.warning(hasT)  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.warning(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.warning(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  ';'  expected	119	None	replace
300	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  ';'  expected	119	None	replace
301	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  throw  new  IllegalArg  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  throw  new  IllegalArg  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  throw  new  IllegalArg	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
302	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  throw  new  IllegalS  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  throw  new  IllegalS  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(hasT)  {  throw  new  IllegalS	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
303	[BUG]  [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  timezoneIndicator.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  timezoneIndicator.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(timezoneIndicator  ==  null)?  null  :  timezoneIndicator.getClass().getName();	  String    date    =(date    ==    null)?    null    :    timezoneIndicator.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
304	[BUG]  [BUGGY]  String  date  =(timezoneIndicator!=  null)?  null  :  timezoneIndicator.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(timezoneIndicator!=  null)?  null  :  timezoneIndicator.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(timezoneIndicator!=  null)?  null  :  timezoneIndicator.getClass().getName();	  String    date    =(date    ==    null)?    null    :    timezoneIndicator.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
305	[BUG]  [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  date.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  date.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(timezoneIndicator  ==  null)?  null  :  date.getClass().getName();	  String    date    =(date    ==    null)?    null    :    timezoneIndicator.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
306	[BUG]  [BUGGY]  aught(IndexOutOfBoundsException.class))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(IndexOutOfBoundsException.class))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(IndexOutOfBoundsException.class))  {  throw  new  IllegalArgumentException( " ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  	129	None	replace
307	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  	129	None	replace
308	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  	131	None	replace
309	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  	131	None	replace
310	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " "));	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  	131	None	replace
311	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
312	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
313	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
314	[BUG]  [BUGGY]  pos.setTime(date  +  1);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(date  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date  +  1);	  pos.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
315	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
316	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
317	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getStartOffset();  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getStartOffset();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getStartOffset();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
318	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getIndex()  -  1;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getIndex()  -  1;	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
319	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getIndex()  +  1;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getIndex()  +  1;	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
320	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getStartIndex();  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getStartIndex();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getStartIndex();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
321	[BUG]  [BUGGY]  ParsePosition  date  =  calendar.getIndex();  [CE]  illegal  start  of  expression  [FE]                                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  calendar.getIndex();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  calendar.getIndex();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
322	[BUG]  [BUGGY]  if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
323	[BUG]  [BUGGY]  while(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();	  if(!hasT)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
324	[BUG]  [BUGGY]  if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
325	[BUG]  [BUGGY]  if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
326	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	128	None	replace
327	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
328	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
330	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". "));  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( ". "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
334	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
335	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
336	[BUG]  [BUGGY]  il.setTime(timezoneIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  il.setTime(timezoneIndicator);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	il.setTime(timezoneIndicator);  return  calendar.getTime();	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
337	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setTime(date);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
338	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  date  +  1);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  date  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  date  +  1);	  pos.setTime(timezoneIndicator,    date);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
339	[BUG]  [BUGGY]  pos.setTime(date,  TimeZone.UTC);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(date,  TimeZone.UTC);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(date,  TimeZone.UTC);	  pos.setTime(timezoneIndicator,    date);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
340	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex(),  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex(),  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getIndex(),  timezoneIndicator);	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
341	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex()  -  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getIndex()  -  1);	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
342	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex()  +  1);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getIndex()  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getIndex()  +  1);	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
343	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getStartIndex());  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getStartIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getStartIndex());	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
344	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getEndIndex());  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getEndIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getEndIndex());	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
345	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getOffset());  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getOffset());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getOffset());	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
346	[BUG]  [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
347	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
348	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
349	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
350	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    fail,    pos.getIndex());    }    	non-compiled	[CE]  	108	None	replace
351	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    fail,    pos.getIndex());    }    	non-compiled	[CE]  	108	None	replace
352	[BUG]  [BUGGY]  reason(false)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(false)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(false)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
353	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  reason(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
354	[BUG]  [BUGGY]  reason(true)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(true)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(true)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
355	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
356	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
357	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
358	[BUG]  [BUGGY]  String  date  =(date!=  null)?  null  :  date.toString().getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date!=  null)?  null  :  date.toString().getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date!=  null)?  null  :  date.toString().getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
359	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getSimpleName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.toString().getClass().getSimpleName();	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
360	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.toString().getClass().getName();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.toString().getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  calendar.toString().getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
361	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName()  + "n ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName()  + "n ";	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
362	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName()  + ", ";  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName()  + ", ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.toString().getClass().getName()  + ", ";	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
364	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
365	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  For(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	40	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
367	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getLineno());    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
368	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getLineno());    }    	non-compiled	[CE]  	134	None	replace
369	[BUG]  [BUGGY]  while(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	76	None	replace
370	[BUG]  [BUGGY]  Tag  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
371	[BUG]  [BUGGY]  Tag  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
372	[BUG]  [BUGGY]  Tag  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
373	[BUG]  [BUGGY]  Tag  date  =  this.calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  this.calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  this.calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
374	[BUG]  [BUGGY]  Tag  date  =  calendar.getTimeZone();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  calendar.getTimeZone();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  calendar.getTimeZone();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
375	[BUG]  [BUGGY]  Tag  date  =  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  calendar.getTime();	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
376	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",  null ";  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",  null ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",  null ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
377	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",' ";  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",' ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + ",' ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
378	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  timezoneIndicator,  pos);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  timezoneIndicator,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  timezoneIndicator,  pos);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
379	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  null);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  null);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos,  null);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
380	[BUG]  [BUGGY]  Date  date  =  parseDate(calendar,  timezoneIndicator,  pos);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(calendar,  timezoneIndicator,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(calendar,  timezoneIndicator,  pos);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
381	[BUG]  [BUGGY]  Date  date  =  parseDate(calendar,  pos);  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(calendar,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(calendar,  pos);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
382	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  false);  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  false);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos,  false);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
383	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
384	[BUG]  [BUGGY]  Date  date  =  pos.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
385	[BUG]  [BUGGY]  Date  date  =  calendar.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
386	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  pos);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  pos);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
387	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  calendar);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  calendar);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  calendar);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
388	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
389	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  null);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  null);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  null);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
390	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  Calendar.DATE);  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  Calendar.DATE);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  Calendar.DATE);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
391	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(null);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
392	[BUG]  [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
393	[BUG]  [BUGGY]  Date  date  =  timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
394	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  timezoneIndicator);  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
395	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	84	None	replace
396	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
397	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
398	[BUG]  [BUGGY]  Date  date  =  parseTimeZone(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseTimeZone(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseTimeZone(timezoneIndicator);	  Date    date    =    parseDate(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
399	[BUG]  [BUGGY]  Date  date  =  parseDate(calendar,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(calendar,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(calendar,  timezoneIndicator);	  Date    date    =    parseDate(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
400	[BUG]  [BUGGY]  Date  date  =  parseTimezone(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseTimezone(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseTimezone(timezoneIndicator);	  Date    date    =    parseDate(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
401	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
403	[BUG]  [BUGGY]  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
404	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
405	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  >=  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  >=  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  >=  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
406	[BUG]  [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  pos.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
407	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  act);  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
408	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(timezoneIndicator!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
409	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
410	[BUG]  [BUGGY]  if(!hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
411	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
412	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(offset);  return  Calendar.getInstance();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
413	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
414	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
415	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
416	[BUG]  [BUGGY]  ||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.length()  >  0))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.length()  >  0))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.length()  >  0))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
417	[BUG]  [BUGGY]  ||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.charAt(date.length()  -  1)!=  '/')))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.charAt(date.length()  -  1)!=  '/')))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.charAt(date.length()  -  1)!=  '/')))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
418	[BUG]  [BUGGY]  ||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.charAt(date.length()  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.charAt(date.length()  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	||(date  ==  null  &&  date.length()  >  0)||(date!=  null  &&  date.charAt(date.length()  -  1)!=  '/'))  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
419	[BUG]  [BUGGY]  pos.setEndIndex(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setEndIndex(offset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setEndIndex(offset);  return  calendar.getTime();	  pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
420	[BUG]  [BUGGY]  pos.setStartIndex(startOffset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartIndex(startOffset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartIndex(startOffset);  return  calendar.getTime();	  pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
421	[BUG]  [BUGGY]  pos.setSecondIndex(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setSecondIndex(offset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setSecondIndex(offset);  return  calendar.getTime();	  pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
422	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  data.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  data.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  data.getClass().getName();	  String    date    =(date!=    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
423	[BUG]  [BUGGY]  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
424	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
425	[BUG]  [BUGGY]  if(fail!=  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
426	[BUG]  [BUGGY]  if(fail  ==  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
428	[BUG]  [BUGGY]  int  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  int  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	int  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	128	None	replace
429	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.size();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	132	None	replace
430	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
431	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartOffset());  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartOffset());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartOffset());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
432	[BUG]  [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());	  while(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
433	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getTime());  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getTime());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getTime());	  Date    date    =    pos.getTime();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
434	[BUG]  [BUGGY]  pos.setIndex(timezoneIndicator);  return  this.calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(timezoneIndicator);  return  this.calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(timezoneIndicator);  return  this.calendar.getTime();	  if(timezoneIndicator    ==    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
435	[BUG]  [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  period.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(timezoneIndicator  ==  null)?  null  :  period.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(timezoneIndicator  ==  null)?  null  :  period.getClass().getName();	  String    date    =(date    ==    null)?    null    :    timezoneIndicator.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
436	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
437	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator);  return  this.calendar.getTime();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator);  return  this.calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator);  return  this.calendar.getTime();	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
438	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator);  return  calendar.getSecond();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator);  return  calendar.getSecond();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator);  return  calendar.getSecond();	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
439	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator);  return  calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator);  return  calendar.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator);  return  calendar.getTimeZone();	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
440	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  calendar.getTime();	  Date    date    =(date    ==    null)?    null    :    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
441	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	111	None	replace
442	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
443	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()).getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()).getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()).getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
444	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
445	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  c,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    c,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
446	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  false);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  false);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  false);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
447	[BUG]  [BUGGY]  Date  date  =  parseDate(date  +  1);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date  +  1);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
448	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  null);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  null);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  null);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
449	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  date);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  date);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
450	[BUG]  [BUGGY]  While(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  	29	None	replace
451	[BUG]  [BUGGY]  While(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(hasT)  {  throw  new  IndexOutOfBoundsException( " ");	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  	29	None	replace
452	[BUG]  [BUGGY]  while(!hasT)  {  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT)  {	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
453	[BUG]  [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
454	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
455	[BUG]  [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date    ==    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
456	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getChronology();  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getChronology();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getChronology();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
457	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getDate();  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getDate();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getDate();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
458	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "/null ";  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "/null ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "/null ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
459	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
460	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
461	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
462	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
463	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  date);  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  date);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
464	[BUG]  [BUGGY]  ParsePosition  pos  =  parsePosition(date);  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  pos  =  parsePosition(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  pos  =  parsePosition(date);	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
465	[BUG]  [BUGGY]  ParsePosition  pos  =  calendar.getParsePosition();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  pos  =  calendar.getParsePosition();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  pos  =  calendar.getParsePosition();	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
466	[BUG]  [BUGGY]  ParsePosition  pos  =  calendar.getPosition();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  pos  =  calendar.getPosition();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  pos  =  calendar.getPosition();	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
467	[BUG]  [BUGGY]  ParsePosition  date  =  parsePosition(pos.getStartOffset());  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  parsePosition(pos.getStartOffset());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  parsePosition(pos.getStartOffset());	  ParsePosition    date    =    parsePosition(pos);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
468	[BUG]  [BUGGY]  ParsePosition  date  =  calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  calendar.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  calendar.getTimeZone();	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
469	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
470	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail.getMessage());  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail.getMessage());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail.getMessage());	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
471	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
472	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
473	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(timezoneIndicator!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(timezoneIndicator!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(timezoneIndicator!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    timezoneIndicator);    }    	non-compiled	[CE]  	133	None	replace
474	[BUG]  [BUGGY]  While(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
475	[BUG]  [BUGGY]  While(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	30	None	replace
476	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " ".equals(date));  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " ".equals(date));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalStateException( " ".equals(date));  }	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
477	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
478	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
479	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
480	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
481	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
482	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  pos);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  pos);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
483	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
484	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos  + ", ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos  + ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  pos  + ", ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
485	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
486	[BUG]  [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT  &&  date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT  &&  date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
487	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
488	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( ". "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
489	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
490	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
491	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  e,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  e,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  e,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    fail,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
492	[BUG]  [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }  [CE]  not  a  statement  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  fail,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    fail,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	108	None	replace
493	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  e,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  e,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  e,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    fail,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
494	[BUG]  [BUGGY]  pos.setTime(timezoneOutOfBoundsException);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneOutOfBoundsException);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneOutOfBoundsException);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
495	[BUG]  [BUGGY]  pos.setTime(timezoneOutOfBounds);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneOutOfBounds);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneOutOfBounds);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
496	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStart();  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getStart();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getStart();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
497	[BUG]  [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
498	[BUG]  [BUGGY]  Date  date  =  calendar.getTimeZone();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTimeZone();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTimeZone();	  Date    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
499	[BUG]  [BUGGY]  Date  date  =  calendar.getTime()  -  1;  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime()  -  1;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime()  -  1;	  Date    date    =    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
500	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
501	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  pos  =  new  ParsePosition(date,  timezoneIndicator);	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
502	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  pos  =  new  ParsePosition(date);	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
503	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
504	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
505	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	59	None	replace
506	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  TimeZone.UTC);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  TimeZone.UTC);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  TimeZone.UTC);	  pos.setTime(timezoneIndicator,    date);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
507	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  TimeZone.getDefault());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  TimeZone.getDefault());	  pos.setTime(timezoneIndicator,    date);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
508	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  data.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  data.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
509	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
510	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  	82	None	replace
511	[BUG]  [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  ['  +  date  +  [CE]  unclosed  string  literal  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  ['  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  ['  +  date  +	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
512	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  pos);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
513	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
514	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	MutableFormatException  e  =  new  MutableFormatException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
515	[BUG]  [BUGGY]  MutableFormatException.println( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  MutableFormatException.println( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	MutableFormatException.println( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
516	[BUG]  [BUGGY]  if(fail!=  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
517	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getTime().getName();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getTime().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  calendar.getTime().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
518	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getClass().getName()  + ", ";  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getClass().getName()  + ", ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  calendar.getClass().getName()  + ", ";	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
519	[BUG]  [BUGGY]  reason(!hasTimeZone)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasTimeZone)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasTimeZone)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
520	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	43	None	replace
521	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
522	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
523	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().interrupt();	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
524	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getReturnType());  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getReturnType());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(getClass().getReturnType());	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
525	[BUG]  [BUGGY]  Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException ");  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException ");	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
526	[BUG]  [BUGGY]  Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException: "+e.getMessage());  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException: "+e.getMessage());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException: "+e.getMessage());	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
527	[BUG]  [BUGGY]  Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException: "  +  e);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException: "  +  e);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Parchet.getInstance().addToDebugLog( "Unexpected  IndexOutOfBoundsException: "  +  e);	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
528	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  TimeZone.getDefault());  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  TimeZone.getDefault());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  TimeZone.getDefault());	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
529	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().setContextClassLoader(this,  DateTimeConstants.MILLIS_PER_SECOND);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
530	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setTime(date);  return  calendar.getTime();  }	  pos.setTime(date);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
531	[BUG]  [BUGGY]  Date  date  =  parseDate(date,  pos.getEndOffset());  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(date,  pos.getEndOffset());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(date,  pos.getEndOffset());	  Date    date    =    parseDate(date,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
532	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  10);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  10);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.substring(0,  date.length()  -  10);	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
533	[BUG]  [BUGGY]  TimeZone  date  =  calendar.getTimeZone(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  TimeZone  date  =  calendar.getTimeZone(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	TimeZone  date  =  calendar.getTimeZone(timezoneIndicator);	  TimeZone    date    =    calendar.getTimeZone();    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
534	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  e);  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  e);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
535	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  e);  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  date,  e);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
536	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( " ");	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
537	[BUG]  [BUGGY]  if(fail!=  null)  {  if(!hasT)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  if(!hasT)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  if(!hasT)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
538	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos,  timezoneOffset);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
539	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos.getIndex());	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
540	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos  +  1);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
541	[BUG]  [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
542	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  null);  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  null);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  null);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
543	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  false);  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  false);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ",  false);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
544	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(fail  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(fail  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(fail	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
545	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  ';'  expected	87	None	replace
546	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(e  =Uneori  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(e  =Uneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(e  =Uneori	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
547	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(e)  {  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(e)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failingException(e)  {	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  ')'  expected	87	None	replace
548	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failer(failing  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failer(failing  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(failer(failing	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
549	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
550	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  tz,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    tz,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
551	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneIndicator,  timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator,  timezoneOffset);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
552	[BUG]  [BUGGY]  pos.setTimeZone(timezoneOutdicator);  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneOutdicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneOutdicator);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
553	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator,  tz);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneIndicator,  tz);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator,  tz);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
554	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneIndicator,  timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator,  timezoneId);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
555	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  	62	None	replace
556	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  ';'  expected	121	None	replace
557	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().add(failerUneoriUneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().add(failerUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().add(failerUneoriUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  ')'  expected	121	None	replace
558	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  if(failerUneoriUneoriUneoriUneoriUneoriUneori  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  if(failerUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  if(failerUneoriUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	121	None	replace
559	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(failerUneoriUneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(failerUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(failerUneoriUneoriUneoriUneoriUneoriUneori	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  ')'  expected	121	None	replace
560	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  tz);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  tz);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator,  tz);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
561	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalState  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalState  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalState	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
562	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalArgu  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalArgu  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalArgu	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
563	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  Throwables.add(  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  Throwables.add(  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  Throwables.add(	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
564	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalStati  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalStati  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  throw  new  IllegalStati	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
565	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  Throwables.checkNot  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  Throwables.checkNot  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(hasT)  {  Throwables.checkNot	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
566	[BUG]  [BUGGY]  if(fail!=  null)  {  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
567	[BUG]  [BUGGY]  if(fail  ==  null)  {  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  if(!hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
568	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator,  timezoneId  +  1);  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator,  timezoneId  +  1);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator,  timezoneId  +  1);	  pos.setTime(timezoneIndicator,    timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
569	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
570	[BUG]  [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    act);    }    	non-compiled	[CE]  	102	None	replace
571	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    act);    }    	non-compiled	[CE]  	102	None	replace
572	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  timezoneOffset);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  timezoneOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  timezoneOffset);	  Date    date    =    parseDate(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
573	[BUG]  [BUGGY]  reason(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
574	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( " ",  pos);  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( " ",  pos);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IllegalArgumentException( " ",  pos);  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
575	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
576	[BUG]  [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getLineno());    }    	non-compiled	[CE]  not  a  statement	134	None	replace
577	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getLineno());    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
578	[BUG]  [BUGGY]  if(fail!=  null)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
579	[BUG]  [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act);  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
580	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  calendar.getClass().getSimpleName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  calendar.getClass().getSimpleName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
581	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getSimpleName()  + ", ";  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getSimpleName()  + ", ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getSimpleName()  + ", ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
582	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
583	[BUG]  [BUGGY]  if(!hasT)  {  pos.setTime(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setTime(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setTime(offset);  return  calendar.getTime();  }	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
584	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTime(offset);  return  calendar.getTime();  }	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
585	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
586	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTime(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  pos.setTime(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
587	[BUG]  [BUGGY]  pos.setTime(timezoneIndicator);  return  calendar.getSeconds();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(timezoneIndicator);  return  calendar.getSeconds();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(timezoneIndicator);  return  calendar.getSeconds();	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
588	[BUG]  [BUGGY]  pos.setTime(new  Date(date));  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(new  Date(date));  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(new  Date(date));	  pos.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
589	[BUG]  [BUGGY]  pos.setTime(new  Date());  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(new  Date());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(new  Date());	  pos.setTime(date);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
590	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  UTC_ID,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
591	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  date);  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  date);  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:       "    +    date);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
592	[BUG]  [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  act,  pos.getIndex());  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
593	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.MILLIS_PER_SECOND,  e);  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.MILLIS_PER_SECOND,  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.MILLIS_PER_SECOND,  e);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
594	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.MILLIS_PER_DAY,  e);  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.MILLIS_PER_DAY,  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.MILLIS_PER_DAY,  e);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
595	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.SHORT_DESCRIPTOR,  e);  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.SHORT_DESCRIPTOR,  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " "  +  DateTimeConstants.SHORT_DESCRIPTOR,  e);  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
596	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
597	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
598	[BUG]  [BUGGY]  While(!hasT)  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  While(!hasT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	While(!hasT)  {  throw  new  IllegalArgumentException( " ");	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	4	None	replace
599	[BUG]  [BUGGY]  Parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  parent!=    null    &&!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	100	None	replace
600	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoritables.add(hasT)  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoritables.add(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoritables.add(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	23	None	replace
601	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger().add(hasT)  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger().add(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger().add(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	23	None	replace
602	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(hasT)  {  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	23	None	replace
603	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger.log(hasT)  {  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger.log(hasT)  {  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger.log(hasT)  {	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	23	None	replace
604	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  tz);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  tz);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(timezoneIndicator,  tz);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
605	[BUG]  [BUGGY]  if(fail!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
606	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ".equals(date));  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ".equals(date));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalStateException( " ".equals(date));  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
607	[BUG]  [BUGGY]  if(!hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
608	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
609	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTime(timezoneOutOfBounds);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTime(timezoneOutOfBounds);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTime(timezoneOutOfBounds);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
610	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
611	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
612	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
613	[BUG]  [BUGGY]  if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
614	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setIndex(date);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
615	[BUG]  [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
616	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
617	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLongIndex());  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
618	[BUG]  [BUGGY]  reason(!hasTimeZone())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasTimeZone())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasTimeZone())  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	27	None	replace
619	[BUG]  [BUGGY]  Date  date  =  calendar.getTimeZone();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  calendar.getTimeZone();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  calendar.getTimeZone();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
620	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
621	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
622	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	127	None	replace
623	[BUG]  [BUGGY]  if(hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
624	[BUG]  [BUGGY]  if(hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
625	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
626	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	51	None	replace
627	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
628	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
629	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
630	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
631	[BUG]  [BUGGY]  pos.setStartTime(fail);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartTime(fail);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartTime(fail);	  pos.setStartTime(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
632	[BUG]  [BUGGY]  reason(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
633	[BUG]  [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(!hasT)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(!hasT)  {  throw  new  IllegalArgumentException( " "));  }	  reason(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
634	[BUG]  [BUGGY]  while(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
635	[BUG]  [BUGGY]  while(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
636	[BUG]  [BUGGY]  while(fail!=  null  &&!fail.hasMore())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(fail!=  null  &&!fail.hasMore())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(fail!=  null  &&!fail.hasMore())  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
637	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "[null] ";  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "[null] ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.getClass().getName()  + "[null] ";	  String    date    =(date    ==    null)?    null    :    date.getClass().getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
638	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  timezoneIndicator.getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  timezoneIndicator.getClass().getSimpleName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  timezoneIndicator.getClass().getSimpleName();	  String    date    =(date    ==    null)?    null    :    date.getClass().getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
639	[BUG]  [BUGGY]  pos.setIndex(indicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(indicator);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(indicator);  return  calendar.getTime();	  if(timezoneIndicator    ==    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
640	[BUG]  [BUGGY]  pos.setIndex(dateIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setIndex(dateIndicator);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setIndex(dateIndicator);  return  calendar.getTime();	  if(timezoneIndicator    ==    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
641	[BUG]  [BUGGY]  String  date  =(date!=  null)?  null  :  timezoneIndicator.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date!=  null)?  null  :  timezoneIndicator.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date!=  null)?  null  :  timezoneIndicator.getClass().getName();	  String    date    =(date    ==    null)?    null    :    timezoneIndicator.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
642	[BUG]  [BUGGY]  if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	43	None	replace
643	[BUG]  [BUGGY]  if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	43	None	replace
644	[BUG]  [BUGGY]  if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	43	None	replace
645	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
646	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
647	[BUG]  [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
648	[BUG]  [BUGGY]  while(hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();	  if(!hasT)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
649	[BUG]  [BUGGY]  reason(hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
650	[BUG]  [BUGGY]  reason(hasT),  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT),  throw  new  IllegalArgumentException( " ");  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT),  throw  new  IllegalArgumentException( " ");	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
651	[BUG]  [BUGGY]  because(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  because(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	because(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
652	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " "));  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
653	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ",  e);  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " ",  e);  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
654	[BUG]  [BUGGY]  if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
655	[BUG]  [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
656	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toFormat();  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toFormat();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.toFormat();	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
657	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.toString()  + "n ";  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.toString()  + "n ";	  Date    date    =(date    ==    null)?    null    :    date.toString();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
658	[BUG]  [BUGGY]  if(fail!=  null)  {  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
659	[BUG]  [BUGGY]  if(date  ==  null  ||  date.length()  ==  0)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null  ||  date.length()  ==  0)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null  ||  date.length()  ==  0)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
660	[BUG]  [BUGGY]  if(date  ==  null  ||  date.isEmpty())  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null  ||  date.isEmpty())  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null  ||  date.isEmpty())  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(date    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
661	[BUG]  [BUGGY]  if(date  ==  null  ||  date.length()  ==  0)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null  ||  date.length()  ==  0)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null  ||  date.length()  ==  0)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
662	[BUG]  [BUGGY]  if(date  ==  null  ||  date.equals(timezoneIndicator))  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null  ||  date.equals(timezoneIndicator))  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null  ||  date.equals(timezoneIndicator))  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
663	[BUG]  [BUGGY]  if(date  ==  null  ||  date.isEmpty())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null  ||  date.isEmpty())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null  ||  date.isEmpty())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
664	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getLineno();  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getLineno();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getLineno();	  Date    date    =(date    ==    null)?    null    :    date.getType();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
665	[BUG]  [BUGGY]  pos.setZone(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setZone(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setZone(timezoneIndicator);	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
666	[BUG]  [BUGGY]  pos.setTimeZone(timezoneIndicator;  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimeZone(timezoneIndicator;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimeZone(timezoneIndicator;	  pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  ')'  expected	112	None	replace
667	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
668	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(timezoneIndicator!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
669	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  e);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  e);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(ioConstants.MILLIS_PER_SECOND,  e);	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
670	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND));  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND));  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(ioConstants.MILLIS_PER_SECOND));	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	97	None	replace
671	[BUG]  [BUGGY]  Iterator  <  Date>  date  =  this.timezoneIndicator.getDate();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Iterator  <  Date>  date  =  this.timezoneIndicator.getDate();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Iterator  <  Date>  date  =  this.timezoneIndicator.getDate();	  if(hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
672	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
673	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + ", ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + ", ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + ", ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
674	[BUG]  [BUGGY]  reason(hasTimeZone)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasTimeZone)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasTimeZone)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
675	[BUG]  [BUGGY]  because(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  because(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	because(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  reason(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	26	None	replace
676	[BUG]  [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getMessage();  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =(date  ==  null)?  null  :  date.getMessage();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =(date  ==  null)?  null  :  date.getMessage();	  Date    date    =(date    ==    null)?    null    :    date.getTime();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
677	[BUG]  [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getIndex());	  if(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
678	[BUG]  [BUGGY]  if(!hasT)  {  pos.setStartIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  pos.setStartIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  pos.setStartIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(!hasT)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
679	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
680	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  hasT);  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  hasT);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  hasT);  }	  if(!hasT)    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
681	[BUG]  [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().trim().getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)?  null  :  date.toString().trim().getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)?  null  :  date.toString().trim().getClass().getName();	  String    date    =(date    ==    null)?    null    :    date.toString().getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
682	[BUG]  [BUGGY]  if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
683	[BUG]  [BUGGY]  while(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
684	[BUG]  [BUGGY]  while(fail!=  null  &&!fail.isEmpty())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(fail!=  null  &&!fail.isEmpty())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(fail!=  null  &&!fail.isEmpty())  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
685	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
686	[BUG]  [BUGGY]  while(fail!=  null  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(fail!=  null  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(fail!=  null  &&  date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
687	[BUG]  [BUGGY]  if(date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(fail!=    null)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
688	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND);  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(ioConstants.MILLIS_PER_SECOND);	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
689	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
690	[BUG]  [BUGGY]  pos.setTimezoneId(timezoneId);  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneId(timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneId(timezoneId);	  pos.setTime(timezoneId);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
691	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.size();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.size();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
692	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  ++i)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.size();  i  <  len;  ++i)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.size();  i  <  len;  ++i)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.size();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
693	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ").equals(date));  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ").equals(date));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " ").equals(date));  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
694	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " "  +  date);  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " "  +  date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " "  +  date);  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
695	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ".equals(date));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ".equals(date));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " ".equals(date));  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
696	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ").equals(date);  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " ").equals(date);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " ").equals(date);  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
697	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(fail);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(fail);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	aught(new  IllegalArgumentException( " ")).initCause(fail);	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
698	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }	  if(hasT)    {    throw    new    IllegalArgumentException(   "   ".equals(date));    }    	non-compiled	[CE]  	119	None	replace
699	[BUG]  [BUGGY]  pos.setStartIndex(startOffset);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartIndex(startOffset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartIndex(startOffset);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
700	[BUG]  [BUGGY]  pos.setStartOffset(offset);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartOffset(offset);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartOffset(offset);	  pos.setIndex(offset);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
701	[BUG]  [BUGGY]  String  date  =(this.timezoneIndicator  ==  null)?  null  :  calendar.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(this.timezoneIndicator  ==  null)?  null  :  calendar.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(this.timezoneIndicator  ==  null)?  null  :  calendar.getClass().getName();	  String    date    =(date    ==    null)?    null    :    calendar.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
702	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
703	[BUG]  [BUGGY]  if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
704	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.hasMessage())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.hasMessage())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.hasMessage())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
705	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.hasMore())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.hasMore())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.hasMore())  {  pos.setTime(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
706	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
707	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
708	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  calendar.size();  i  <  len;  i++)  {  Calendar  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
709	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    calendar    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
710	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getLineno());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getLineno());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  UTC_ID,  pos.getLineno());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    UTC_ID,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
711	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
712	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
713	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
714	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
715	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  }	  if(date    ==    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
716	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  	129	None	replace
717	[BUG]  [BUGGY]  Iterator  <  Date>  it  =  calendar.getTime().iterator();  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Iterator  <  Date>  it  =  calendar.getTime().iterator();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Iterator  <  Date>  it  =  calendar.getTime().iterator();	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
718	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getStart();  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getStart();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getStart();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
719	[BUG]  [BUGGY]  ParsePosition  date  =  pos.getSecond();  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  pos.getSecond();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  pos.getSecond();	  ParsePosition    date    =    pos.getIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
720	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
721	[BUG]  [BUGGY]  Date  date  =  parseTime(date);  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseTime(date);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseTime(date);	  Date    date    =    parseDate(date);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
722	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  pos,  timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  pos,  timezoneId);	  Date    date    =    parseDate(timezoneIndicator,    pos);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
723	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setIndex(offset  +  1);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
724	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setStartIndex(offset);  return  calendar.getTime();  }	  if(date    ==    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
725	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	128	None	replace
726	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
727	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator,  timezoneId);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
728	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  this.day);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  this.day);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator,  this.day);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
729	[BUG]  [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  calendar);  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  Calendar.getInstance(timezoneIndicator,  calendar);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  Calendar.getInstance(timezoneIndicator,  calendar);	  Tag    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
730	[BUG]  [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(hasT)  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  while(!hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
731	[BUG]  [BUGGY]  if(date!=  null)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
732	[BUG]  [BUGGY]  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT  ||  hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(hasT)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
733	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
734	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
735	[BUG]  [BUGGY]  if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
736	[BUG]  [BUGGY]  if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&  timezoneIndicator!=  null)  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
737	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.hasMessage())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.hasMessage())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.hasMessage())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
738	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	111	None	replace
739	[BUG]  [BUGGY]  pos.setTime(datetimezoneIndicator,  timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTime(datetimezoneIndicator,  timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTime(datetimezoneIndicator,  timezoneIndicator);	  pos.setTime(timezoneIndicator,    date);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
740	[BUG]  [BUGGY]  Parent  <?>  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Parent  <?>  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Parent  <?>  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  parent!=    null    &&!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	100	None	replace
741	[BUG]  [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	parent!=  null  &&!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getName());  }	  parent!=    null    &&!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	100	None	replace
742	[BUG]  [BUGGY]  this.timezoneIndicator  =  pos.setTime(timezoneIndicator);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  this.timezoneIndicator  =  pos.setTime(timezoneIndicator);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	this.timezoneIndicator  =  pos.setTime(timezoneIndicator);  return  calendar.getTime();	  if(timezoneIndicator!=    null)    {    pos.setTime(timezoneIndicator);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
743	[BUG]  [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  Calendar.getInstance(timezoneIndicator,  timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  Calendar.getInstance(timezoneIndicator,  timezoneId);	  Date    date    =    Calendar.getInstance(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
744	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
745	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ",  +  date  +  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
746	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ".  +  date  +  }  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ".  +  date  +  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ ".  +  date  +  }	  if(date!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +    	non-compiled	[CE]  <identifier>  expected	15	None	replace
747	[BUG]  [BUGGY]  String  date  =(date  ==  null)? "null "  :  date.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  String  date  =(date  ==  null)? "null "  :  date.getClass().getName();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	String  date  =(date  ==  null)? "null "  :  date.getClass().getName();	  String    date    =(date!=    null)?    null    :    date.getClass().getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
748	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
749	[BUG]  [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  utf8,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  utf8,  pos.getIndex());  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	IllegalStateException  e  =  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  utf8,  pos.getIndex());	  IllegalStateException    e    =    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    act,    pos.getIndex());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
750	[BUG]  [BUGGY]  if(date  ==  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  if(!hasT)  {  pos.setIndex(offset);  return  calendar.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    pos.setIndex(offset);    return    calendar.getTime();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
751	[BUG]  [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	121	None	replace
752	[BUG]  [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  Date  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  if(fail!=    null)    {    Date    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	121	None	replace
753	[BUG]  [BUGGY]  Date  date  =  parse(timezoneIndicator);  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parse(timezoneIndicator);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parse(timezoneIndicator);	  Date    date    =    parseDate(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
754	[BUG]  [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  timezoneId);  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Date  date  =  parseDate(timezoneIndicator,  timezoneId);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Date  date  =  parseDate(timezoneIndicator,  timezoneId);	  Date    date    =    parseDate(timezoneIndicator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
755	[BUG]  [BUGGY]  if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
756	[BUG]  [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
757	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
758	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
759	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  calendar.setTime(date);  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	124	None	replace
760	[BUG]  [BUGGY]  if(fail!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimezoneIndicator(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
761	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setTimezoneIndicator(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimezoneIndicator(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
762	[BUG]  [BUGGY]  ParsePosition  date  =  calendar.getTime(),  pos);  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  ParsePosition  date  =  calendar.getTime(),  pos);  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	ParsePosition  date  =  calendar.getTime(),  pos);	  ParsePosition    date    =    calendar.getTime();    	non-compiled	[CE]  ';'  expected	99	None	replace
763	[BUG]  [BUGGY]  int  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  int  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	int  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
764	[BUG]  [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  >  expected  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Integer  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  For(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
765	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " "));  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   "));    }    	non-compiled	[CE]  	83	None	replace
766	[BUG]  [BUGGY]  pos.setStartIndex(offset  +  1);  return  calendar.getTime();  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setStartIndex(offset  +  1);  return  calendar.getTime();  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setStartIndex(offset  +  1);  return  calendar.getTime();	  pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
767	[BUG]  [BUGGY]  Tag  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  Tag  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	Tag  date  =  this.timezoneIndicator.getDate();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Tag    date    =    calendar.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
768	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  this.date.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    this.date.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
769	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " "));  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " "));  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(hasT)  {  throw  new  IllegalStateException( " "));  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
770	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator;  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator;  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	pos.setTimezoneIndicator(timezoneIndicator;	  pos.setTimezoneIndicator(timezoneIndicator);    	non-compiled	[CE]  ')'  expected	113	None	replace
771	[BUG]  [BUGGY]  if(date  ==  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  pos.setTimeZone(timezoneIndicator);  return  calendar.getTime();  }	  pos.setTimeZone(timezoneIndicator);    return    calendar.getTime();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
772	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date  ==  null)  {  for(int  i  =  0,  len  =  calendar.length();  i  <  len;  i++)  {  Calendar  date  =  calendar.getTime();  if(date  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    calendar.length();    i    <    len;    i++)    {    Calendar    date    =    calendar.getTime();    if(date    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
773	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
774	[BUG]  [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(date!=  null)  {  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(fail!=    null)    {    pos.setIndex(timezoneIndicator);    return    calendar.getTime();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
775	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
776	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.hasMessage())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.hasMessage())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.hasMessage())  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
777	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.hasMoreElements())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(fail!=  null  &&!fail.hasMoreElements())  {  pos.setIndex(offset);  return  calendar.getTime();  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(fail!=  null  &&!fail.hasMoreElements())  {  pos.setIndex(offset);  return  calendar.getTime();  }	  if(fail!=    null)    {    pos.setIndex(offset);    return    calendar.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
778	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getMessage());  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getMessage());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getMessage());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
779	[BUG]  [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getResult());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getResult());  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	reason(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getResult());  }	  reason(hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	24	None	replace
780	[BUG]  [BUGGY]  if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	if(!hasT)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  Date  date  =  date.getTime();  if(date!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(date!=    null)    {    for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    Date    date    =    date.getTime();    if(date!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
781	[BUG]  [BUGGY]  while(!hasT  &&  DateTimeUtils.currentTimeMillis()  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;      [BUGGY]  while(!hasT  &&  DateTimeUtils.currentTimeMillis()  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	while(!hasT  &&  DateTimeUtils.currentTimeMillis()  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  while(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
