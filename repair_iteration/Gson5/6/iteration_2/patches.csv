bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
2	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
3	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	80	None	add
4	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  'catch'  without  'try'	80	None	add
5	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  minuteseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  minuteseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    minuteseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	80	None	add
6	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	171	None	replace
7	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	171	None	replace
8	[BUG]  [BUGGY]  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	171	None	replace
9	[BUG]  [BUGGY]  milliseconds  =  DateTimeZone.getInstance(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	171	None	replace
10	[BUG]  [BUGGY]  timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	171	None	replace
11	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  tz);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  tz);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  tz);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	171	None	replace
12	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getInstance(date,  offset);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getInstance(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getInstance(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
13	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	73	None	replace
14	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getMillis(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getMillis(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getMillis(date);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	73	None	replace
15	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getMillis(date,  offset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getMillis(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getMillis(date,  offset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	73	None	replace
16	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseInt(date,  offset));  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseInt(date,  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseInt(date,  offset));	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	73	None	replace
17	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  fraction  -  offset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
18	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction  -  offset);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  fraction  -  offset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
19	[BUG]  [BUGGY]  parseFloat(date,  offset,  endOffset);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseFloat(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseFloat(date,  offset,  endOffset);	  parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
20	[BUG]  [BUGGY]  parseInt(date,  offset,  pos);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos);	  parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	90	None	replace
21	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  milliseconds);	  parseInt(date,    offset,    endOffset);    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
22	[BUG]  [BUGGY]  parseInt(date,  offset,  milliseconds);  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  milliseconds);	  parseInt(date,    offset,    endOffset);    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
23	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset,  milliseconds);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset,  milliseconds);	  parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	90	None	replace
24	[BUG]  [BUGGY]  milliseconds  =  UTC_ID  +  1;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID  +  1;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  incompatible  types	141	None	replace
25	[BUG]  [BUGGY]  milliseconds  =  UTC_ID  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID  -  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID  -  1;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	141	None	replace
26	[BUG]  [BUGGY]  milliseconds  =  UTC_ID.toCharArray();  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID.toCharArray();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID.toCharArray();	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  incompatible  types	141	None	replace
27	[BUG]  [BUGGY]  milliseconds  =  UTC_ID.substring(0,  offset);  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID.substring(0,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID.substring(0,  offset);	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  incompatible  types	141	None	replace
28	[BUG]  [BUGGY]  milliseconds  -=  UTC_ID;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  UTC_ID;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  UTC_ID;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	141	None	replace
29	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  10;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
30	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  10;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
31	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  100;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
32	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  100;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  100;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
33	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  Milliseconds  =  offset  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  Milliseconds  =  offset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    Milliseconds  =  offset  *  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	154	None	add
34	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  minuteseconds  =  offset  *  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  minuteseconds  =  offset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    minuteseconds  =  offset  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	154	None	add
35	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  9;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  9;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
36	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  9;  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  9;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  9;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
37	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  minuteiseconds  =  offset  *  10;  [CE]  cannot  find  symbol  minuteiseconds  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  minuteiseconds  =  offset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    minuteiseconds  =  offset  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	154	None	add
38	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  off  *  10;  [CE]  cannot  find  symbol  off  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  off  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  off  *  10;	  	non-compiled	[CE]  cannot  find  symbol  off	154	None	add
39	[BUG]  [BUGGY]  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
40	[BUG]  [BUGGY]  milliseconds  =  1;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  pos  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
41	[BUG]  [BUGGY]  milliseconds  =  0;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  pos  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
42	[BUG]  [BUGGY]  milliseconds  =  100;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  pos  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
43	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
44	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
45	[BUG]  [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
46	[BUG]  [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  endOffset);  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  pos  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
47	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    fraction);    milliseconds  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
48	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    milliseconds  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
49	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  Milliseconds  =  Math.min(milliseconds,  fraction);  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  Milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    Milliseconds  =  Math.min(milliseconds,  fraction);	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	16	None	add
50	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  int  milliseconds  =  Math.min(milliseconds,  fraction);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  int  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    int  milliseconds  =  Math.min(milliseconds,  fraction);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	16	None	add
51	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minuteseconds  =  Math.min(milliseconds,  fraction);  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minuteseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    minuteseconds  =  Math.min(milliseconds,  fraction);	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	16	None	add
52	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
53	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
54	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minutes  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    fraction);    minutes  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
55	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minutes  =  Math.min(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minutes  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    minutes  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
56	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction));  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    milliseconds  =  Math.min(milliseconds,  fraction));	  	non-compiled	[CE]  ';'  expected	16	None	add
57	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	7	1	add
58	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	7	1	add
59	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    int  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	7	None	add
60	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  minuteseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  minuteseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  minuteseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    minuteseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	7	None	add
61	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    Milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	7	None	add
62	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  byseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  byseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  byseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
63	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	7	1	add
64	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	7	1	add
65	[BUG]  [BUGGY]  int  milliseconds  =  1000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  1000;	  milliseconds    =    1000;    int    milliseconds    =    1000;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	58	None	replace
66	[BUG]  [BUGGY]  int  milliseconds  =  0;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  0;	  milliseconds    =    1000;    int    milliseconds    =    1000;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	58	None	replace
67	[BUG]  [BUGGY]  int  milliseconds  =  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  10;	  milliseconds    =    1000;    int    milliseconds    =    1000;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	58	None	replace
68	[BUG]  [BUGGY]  int  milliseconds  =  100;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  100;	  milliseconds    =    1000;    int    milliseconds    =    1000;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	58	None	replace
69	[BUG]  [BUGGY]  milliseconds  =  value  *  10;  [CE]  cannot  find  symbol  value  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  value  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  value  *  10;	  milliseconds    =    length    *    10;    	non-compiled	[CE]  cannot  find  symbol  value	192	None	replace
70	[BUG]  [BUGGY]  milliseconds  =  minute  *  10;  [CE]  cannot  find  symbol  minute  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  minute  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  minute  *  10;	  milliseconds    =    length    *    10;    	non-compiled	[CE]  cannot  find  symbol  minute	192	None	replace
71	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  10;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
72	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  10;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  10;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
73	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  100;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
74	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  100;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  100;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
75	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  Milliseconds  =  endOffset  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  Milliseconds  =  endOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    Milliseconds  =  endOffset  *  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	152	None	add
76	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  startOffset  *  10;  [CE]  cannot  find  symbol  startOffset  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  startOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  startOffset  *  10;	  	non-compiled	[CE]  cannot  find  symbol  startOffset	152	None	add
77	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  minuteseconds  =  endOffset  *  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  minuteseconds  =  endOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    minuteseconds  =  endOffset  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	152	None	add
78	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  9;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  9;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
79	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  9;  [FE]  JsonSyntaxException  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  9;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  9;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
80	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
81	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  1000;  [FE]  JsonSyntaxException  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
82	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  999;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
83	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
84	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
85	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
86	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
87	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
88	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
89	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
90	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
91	[BUG]  [BUGGY]  int  milliseconds  =  fraction  *  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
92	[BUG]  [BUGGY]  int  milliseconds  =  fraction  /  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  /  10;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
93	[BUG]  [BUGGY]  int  milliseconds  =  fraction  *  100;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
94	[BUG]  [BUGGY]  int  milliseconds  =  fraction  *  2;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  *  2;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
95	[BUG]  [BUGGY]  int  milliseconds  =  fraction  *  1;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  *  1;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
96	[BUG]  [BUGGY]  int  milliseconds  =  fraction  *  1000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
97	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	161	None	replace
98	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
99	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
100	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset,  parseEndOffset));  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
101	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset));  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset));	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
102	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
103	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
104	[BUG]  [BUGGY]  minuteSeconds  =  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteSeconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteSeconds  =  1000;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
105	[BUG]  [BUGGY]  milliseconds  =  0;  minuteSeconds  =  0;  [CE]  cannot  find  symbol  minuteSeconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  minuteSeconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  minuteSeconds  =  0;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
106	[BUG]  [BUGGY]  milliseconds  =  2;  minuteSeconds  =  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  minuteSeconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  minuteSeconds  =  1000;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
107	[BUG]  [BUGGY]  milliseconds  =  10;  minuteSeconds  =  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  minuteSeconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  minuteSeconds  =  1000;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
108	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	195	None	replace
109	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
110	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
111	[BUG]  [BUGGY]  milliseconds  =  DateTimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	195	None	replace
112	[BUG]  [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
113	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator.getTimeInstance(date,  10);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneIndicator.getTimeInstance(date,  10);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator.getTimeInstance(date,  10);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	195	None	replace
114	[BUG]  [BUGGY]  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
115	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
116	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
117	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  parseStartOffset);	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	11	None	add
118	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  byseEndOffset);  [CE]  cannot  find  symbol  byseEndOffset  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  byseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  byseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	11	None	add
119	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  pos);  [CE]  no  suitable  method  found  for  max(int,ParsePosition)  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  pos);	  	non-compiled	[CE]  no  suitable  method  found  for  max(int,ParsePosition)	11	None	add
120	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  Milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [CE]  cannot  find  symbol  Milliseconds  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  Milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    Milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	11	None	add
121	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
122	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
123	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  parseEndOffset));	  	non-compiled	[CE]  ';'  expected	11	None	add
124	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  parseEndOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  0,  parseEndOffset);	          int    endOffset    =    parseInt(date,    offset,    0);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	118	None	replace
125	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds  -  1);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  milliseconds  -  1);	          int    endOffset    =    parseInt(date,    offset,    0);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	118	None	replace
126	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1000);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1000);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  1000);	          int    endOffset    =    parseInt(date,    offset,    0);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	118	None	replace
127	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  10000;	  milliseconds    =    999;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
128	[BUG]  [BUGGY]  milliseconds  =  10000;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10000;	  milliseconds    =    999;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  500;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  500;	  milliseconds    =    999;    	compilable	  [FE]  AssertionFailedError  	94	1	replace
130	[BUG]  [BUGGY]  milliseconds  =  500;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  500;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  500;	  milliseconds    =    999;    	compilable	  [FE]  AssertionFailedError  	94	1	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  200;	  milliseconds    =    999;    	compilable	  [FE]  AssertionFailedError  	94	1	replace
132	[BUG]  [BUGGY]  milliseconds  =  200;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  200;	  milliseconds    =    999;    	compilable	  [FE]  AssertionFailedError  	94	1	replace
133	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  2000;	  milliseconds    =    999;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
134	[BUG]  [BUGGY]  milliseconds  =  2000;  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2000;	  milliseconds    =    999;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
135	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset));  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  endOffset));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
136	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  0));  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  0));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  0));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
137	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos));  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  pos));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
138	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  1);  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  1);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
139	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
140	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
141	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  Milliseconds  -=  fraction;  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  Milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    Milliseconds  -=  fraction;  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	1	None	add
142	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  minuteseconds  -=  fraction;  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  minuteseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  minuteseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    minuteseconds  -=  fraction;  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	1	None	add
143	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    int  milliseconds  -=  fraction;  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	1	None	add
144	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  long  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  long  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    long  milliseconds  -=  fraction;  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	1	None	add
145	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction);  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  -=  fraction);  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	1	None	add
146	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  =  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  =  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
147	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  =  fraction;  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  =  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  =  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  offset;	  milliseconds    =    minute;    	compilable	  [FE]  AssertionFailedError  	143	1	replace
149	[BUG]  [BUGGY]  milliseconds  =  offset;  [FE]  AssertionFailedError  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  offset;	  milliseconds    =    minute;    	compilable	  [FE]  AssertionFailedError  	143	1	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  day;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  day;	  milliseconds    =    minute;    	compilable	  [FE]  AssertionFailedError  	143	1	replace
151	[BUG]  [BUGGY]  milliseconds  =  day;  [FE]  AssertionFailedError  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  day;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  day;	  milliseconds    =    minute;    	compilable	  [FE]  AssertionFailedError  	143	1	replace
152	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  endOffset));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  endOffset));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
153	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
154	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  0));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  0));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  0));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
155	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  pos));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  pos));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  pos));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
156	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
157	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
158	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break;  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
159	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	145	None	replace
160	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
161	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(milliseconds)  {  case  1:  milliseconds  =  0;  break;  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(milliseconds)  {  case  1:  milliseconds  =  0;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(milliseconds)  {  case  1:  milliseconds  =  0;  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
162	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(milliseconds)  {  case  1:  milliseconds  =  0;  break;  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(milliseconds)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(milliseconds)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	145	None	replace
163	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
164	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  2:  milliseconds  =  0;  break;  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  2:  milliseconds  =  0;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  2:  milliseconds  =  0;  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
165	[BUG]  [BUGGY]  minuteSeconds  =  100;  [CE]  cannot  find  symbol  minuteSeconds  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteSeconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteSeconds  =  100;	  milliseconds    =    100;    minuteiseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	204	None	replace
166	[BUG]  [BUGGY]  minuteiseconds  =  100;  [CE]  cannot  find  symbol  minuteiseconds  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteiseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteiseconds  =  100;	  milliseconds    =    100;    minuteiseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	204	None	replace
167	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  4;	  milliseconds    -=    1000;    	compilable	  [FE]  JsonSyntaxException  	49	1	replace
168	[BUG]  [BUGGY]  milliseconds  -=  4;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  4;	  milliseconds    -=    1000;    	compilable	  [FE]  JsonSyntaxException  	49	1	replace
169	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    3;    milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
170	[BUG]  [BUGGY]  milliseconds  -=  3;  milliseconds  -=  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
171	[BUG]  [BUGGY]  milliseconds  -=  3;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  3;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  3;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	52	None	add
172	[BUG]  [BUGGY]  milliseconds  -=  3;  Milliseconds  -=  3;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  Milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    Milliseconds  -=  3;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	52	None	add
173	[BUG]  [BUGGY]  milliseconds  -=  3;  int  milliseconds  -=  3;  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  int  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    int  milliseconds  -=  3;	  	non-compiled	[CE]  ';'  expected	52	None	add
174	[BUG]  [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  pos);  milliseconds  -=  3;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  pos);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseInt(date,  offset,  pos);  milliseconds  -=  3;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	52	None	add
175	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  endOffset);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    3;    parseInt(date,  offset,  endOffset);  milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
176	[BUG]  [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  endOffset);  milliseconds  -=  3;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  endOffset);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseInt(date,  offset,  endOffset);  milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
177	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  3);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    3;    parseInt(date,  offset,  3);  milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
178	[BUG]  [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  3);  milliseconds  -=  3;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  3);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseInt(date,  offset,  3);  milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
179	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  /  10;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
180	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  /  10;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
181	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  Milliseconds  =  fraction  /  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  Milliseconds  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    Milliseconds  =  fraction  /  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	105	None	add
182	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  minuteseconds  =  fraction  /  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  minuteseconds  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    minuteseconds  =  fraction  /  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	105	None	add
183	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  int  milliseconds  =  fraction  /  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  int  milliseconds  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    int  milliseconds  =  fraction  /  10;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	105	None	add
184	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  /  100;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
185	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  /  100;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
186	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  %  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  %  10;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
187	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  %  10;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  %  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  %  10;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
188	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  percentage  /  10;  [CE]  cannot  find  symbol  percentage  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  percentage  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    milliseconds  =  percentage  /  10;	  	non-compiled	[CE]  cannot  find  symbol  percentage	105	None	add
189	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	193	None	replace
190	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  tz);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  tz);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  tz);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	193	None	replace
191	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator.getTimeZone();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneIndicator.getTimeZone();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator.getTimeZone();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	193	None	replace
192	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  endOffset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
193	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  endOffset);  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  endOffset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
194	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  offset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
195	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset);  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  offset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.max(milliseconds,  endOffset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
197	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  endOffset);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.max(milliseconds,  endOffset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
198	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  1);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
199	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  1);  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  1);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
200	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  parseEndOffset  +  1);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
201	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  +  1);  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset  +  1);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
202	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  pos);  [CE]  no  suitable  method  found  for  min(int,ParsePosition)  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  pos);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,ParsePosition)	12	None	replace
203	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
204	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
205	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
206	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
207	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
208	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
209	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	76	None	add
210	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	76	None	add
211	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	76	None	add
212	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  milliseconds);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  milliseconds);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
213	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset,  milliseconds);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  endOffset,  milliseconds);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
214	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset,  pos);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  endOffset,  pos);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
215	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset  +  1);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  endOffset  +  1);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
216	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset  -  1);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  endOffset  -  1);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
217	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  0,  endOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  0,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  0,  endOffset);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
218	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  endOffset);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
219	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
220	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  0);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
221	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  pos);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  pos);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
222	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  1);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
223	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset  -  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset  -  1);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
224	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,    endOffset,    milliseconds);    parseInt(date,  endOffset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
225	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  parseInt(date,  endOffset,  milliseconds);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    parseInt(date,  endOffset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
226	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  int  endOffset  =  parseInt(date,  endOffset,  milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  int  endOffset  =  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    int  endOffset  =  parseInt(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	86	None	add
227	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  parseFloat(date,  endOffset,  milliseconds);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  parseFloat(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    parseFloat(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
228	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseUtils.parseInt(date,  endOffset,  milliseconds);  [CE]  cannot  find  symbol  ParseUtils  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseUtils.parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    ParseUtils.parseInt(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol  ParseUtils	86	None	add
229	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseInteger  pos  =  parseInt(date,  endOffset,  milliseconds);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseInteger  pos  =  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    ParseInteger  pos  =  parseInt(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
230	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseUtils.parse(date,  endOffset,  milliseconds);  [CE]  cannot  find  symbol  ParseUtils  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseUtils.parse(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    ParseUtils.parse(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol  ParseUtils	86	None	add
231	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  pos.set(date,  endOffset,  milliseconds);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  pos.set(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    pos.set(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
232	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
233	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
234	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    int  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	5	None	add
235	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  byseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  byseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  byseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
236	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  minuteseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  minuteseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    minuteseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	5	None	add
237	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    Milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	5	None	add
238	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
239	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
240	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction    *    1000;    milliseconds  -=  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
241	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    milliseconds  -=  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
242	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  int  milliseconds  -=  fraction  *  1000;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  int  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    int  milliseconds  -=  fraction  *  1000;	  	non-compiled	[CE]  ';'  expected	54	None	add
243	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  minuteseconds  -=  fraction  *  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  minuteseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    minuteseconds  -=  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	54	None	add
244	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  Milliseconds  -=  fraction  *  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  Milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    Milliseconds  -=  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	54	None	add
245	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction    *    1000;    milliseconds  -=  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
246	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    milliseconds  -=  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
247	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  minuteSeconds  -=  fraction  *  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  minuteSeconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    minuteSeconds  -=  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	54	None	add
248	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction    *    1000;    milliseconds  -=  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
249	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  10;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  milliseconds  -=  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    milliseconds  -=  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
250	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
251	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
252	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
253	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
254	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	147	1	replace
255	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	147	1	replace
256	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	147	1	replace
257	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	147	1	replace
258	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  return  new  IndexOutOfBoundsException( " ");  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  return  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  return  new  IndexOutOfBoundsException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
259	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
260	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  1);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
261	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  milliseconds);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
262	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseStartOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseStartOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseStartOffset);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
263	[BUG]  [BUGGY]  char  endOffset  =  parseInt(date,  offset,  endOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  char  endOffset  =  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	char  endOffset  =  parseInt(date,  offset,  endOffset);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
264	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  	26	None	replace
265	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  	26	None	replace
266	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  	26	None	replace
267	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  	26	None	replace
268	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  	26	None	replace
269	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  	26	None	replace
270	[BUG]  [BUGGY]  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
271	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
272	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  pos);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  pos);	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
273	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
274	[BUG]  [BUGGY]  milliseconds  -=  fraction  +  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  +  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  +  1;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
275	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  3;	  milliseconds    =    fraction    *    4;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
276	[BUG]  [BUGGY]  milliseconds  =  fraction  *  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  3;	  milliseconds    =    fraction    *    4;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
277	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  4;	  milliseconds    =    fraction    *    4;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
278	[BUG]  [BUGGY]  milliseconds  =  fraction  /  4;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  4;	  milliseconds    =    fraction    *    4;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
279	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	112	1	add
280	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	112	1	add
281	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  minuteseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  minuteseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  minuteseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    minuteseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	112	None	add
282	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  int  milliseconds  =  fraction  *  100;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  int  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    int  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	112	None	add
283	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  Milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  Milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    Milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	112	None	add
284	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	112	1	add
285	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	112	1	add
286	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  minuteiseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  minuteiseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  minuteiseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    minuteiseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	112	None	add
287	[BUG]  [BUGGY]  minuteSeconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteSeconds  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteSeconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteSeconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	178	None	replace
288	[BUG]  [BUGGY]  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  Milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	Milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	178	None	replace
289	[BUG]  [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
290	[BUG]  [BUGGY]  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
291	[BUG]  [BUGGY]  parseInt(date,  offset,  1);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  1);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
292	[BUG]  [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
293	[BUG]  [BUGGY]  parseInt(date,  offset,  1000);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1000);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  1000);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
294	[BUG]  [BUGGY]  parseInt(date,  offset,  2);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  2);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  2);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
295	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
296	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
297	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
298	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
299	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  [CE]  cannot  find  symbol  startOffset  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	149	None	replace
300	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
301	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos);  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  pos);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
302	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  0);  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  0);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
303	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset  -  1);  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset  -  1);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	197	None	replace
304	[BUG]  [BUGGY]  minuteseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  minuteseconds	124	None	replace
305	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	134	None	replace
306	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
307	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
308	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
309	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
310	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
311	[BUG]  [BUGGY]  milliseconds  =  TimeZoneUtils.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZoneUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZoneUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	134	None	replace
312	[BUG]  [BUGGY]  milliseconds  =  new  int[Math.min(parseEndOffset,  offset)];  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  new  int[Math.min(parseEndOffset,  offset)];  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  new  int[Math.min(parseEndOffset,  offset)];	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	71	None	replace
313	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
314	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
315	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	68	None	add
316	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
317	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
318	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	68	None	add
319	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  minuteseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  minuteseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    minuteseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	68	None	add
320	[BUG]  [BUGGY]  milliseconds  =  0,  milliseconds  =  0;  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  milliseconds  =  0;	  milliseconds    =    0L;    	non-compiled	[CE]  ';'  expected	39	None	replace
321	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  0L;	  milliseconds    =    0L;    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
322	[BUG]  [BUGGY]  milliseconds  -=  0L;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0L;	  milliseconds    =    0L;    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
323	[BUG]  [BUGGY]  milliseconds  =  0,  milliseconds  =  0L;  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  milliseconds  =  0L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  milliseconds  =  0L;	  milliseconds    =    0L;    	non-compiled	[CE]  ';'  expected	39	None	replace
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  parseEndOffset)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  AssertionFailedError  	180	1	replace
325	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)+  1);  [FE]  AssertionFailedError  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseEndOffset)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  AssertionFailedError  	180	1	replace
326	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  fraction)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  JsonSyntaxException  	180	1	replace
327	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)+  1);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  fraction)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  JsonSyntaxException  	180	1	replace
328	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  date.length())+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  JsonSyntaxException  	180	1	replace
329	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())+  1);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  date.length())+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  JsonSyntaxException  	180	1	replace
330	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)+  1);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  pos)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	180	None	replace
331	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)+  1);  [CE]  cannot  find  symbol  byseEndOffset  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  byseEndOffset)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	180	None	replace
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  endOffset)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  AssertionFailedError  	180	1	replace
333	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)+  1);  [FE]  AssertionFailedError  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  endOffset)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	compilable	  [FE]  AssertionFailedError  	180	1	replace
334	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)+  1);  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)+  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseStartOffset)+  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	180	None	replace
335	[BUG]  [BUGGY]  milliseconds  -=  1;  Milliseconds  -=  1;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  Milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  Milliseconds  -=  1;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
336	[BUG]  [BUGGY]  milliseconds  -=  fraction;  Milliseconds  -=  1;  [CE]  cannot  find  symbol  Milliseconds  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  Milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  Milliseconds  -=  1;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
337	[BUG]  [BUGGY]  milliseconds  -=  fraction;  Milliseconds  -=  2;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  Milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  Milliseconds  -=  2;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
338	[BUG]  [BUGGY]  milliseconds  -=  1;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
339	[BUG]  [BUGGY]  milliseconds  -=  10;  Milliseconds  -=  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  Milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  10;  Milliseconds  -=  10;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
340	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	162	None	replace
341	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	162	None	replace
342	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	162	None	replace
343	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset  +  1);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset  +  1);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	162	None	replace
344	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	162	None	replace
345	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    2;    milliseconds  =  2;	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
346	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
347	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  pos  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	40	None	add
348	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    2;    milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
349	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
350	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
351	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
352	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
353	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
354	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
355	[BUG]  [BUGGY]  minuteseconds  =  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteseconds  =  1000;	  milliseconds    =    1000;    minuteseconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteseconds	61	None	replace
356	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  5000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  5000;	  milliseconds    =    1000;    minuteseconds    =    1000;    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
357	[BUG]  [BUGGY]  milliseconds  =  5000;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  5000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  5000;	  milliseconds    =    1000;    minuteseconds    =    1000;    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
358	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  timezoneIndicator,  pos);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  timezoneIndicator,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  timezoneIndicator,  pos);	          int    endOffset    =    parseInt(date,    offset,    timezoneIndicator);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	132	None	replace
359	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseStartOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseStartOffset);	          int    endOffset    =    parseInt(date,    offset,    timezoneIndicator);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	132	None	replace
360	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  timezoneIndicator);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  0,  timezoneIndicator);	          int    endOffset    =    parseInt(date,    offset,    timezoneIndicator);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	132	None	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  offset  /  10;	  milliseconds    =    offset    *    10;    	compilable	  [FE]  AssertionFailedError  	155	1	replace
362	[BUG]  [BUGGY]  milliseconds  =  offset  /  10;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  offset  /  10;	  milliseconds    =    offset    *    10;    	compilable	  [FE]  AssertionFailedError  	155	1	replace
363	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
364	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  1);  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
365	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)-  1);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  pos)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	184	None	replace
366	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  endOffset)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
367	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)-  1);  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  endOffset)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
368	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)-  1);  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseStartOffset)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	184	None	replace
369	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  date.length())-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
370	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())-  1);  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  date.length())-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
371	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  fraction)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
372	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)-  1);  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  fraction)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	compilable	  [FE]  JsonSyntaxException  	184	1	replace
373	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)-  1);  [CE]  cannot  find  symbol  byseEndOffset  [FE]                            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)-  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  byseEndOffset)-  1);	  milliseconds    =(parseInt(date,    offset)-    1);    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	184	None	replace
374	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
375	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
376	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  2:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  2:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(offset)  {  case  2:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
377	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(date.length()  <  =  offset)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(date.length()  <  =  offset)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
378	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
379	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	146	None	replace
380	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	146	None	replace
381	[BUG]  [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	146	None	replace
382	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	146	None	replace
383	[BUG]  [BUGGY]  milliseconds  =  100L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
384	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	172	None	replace
385	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  offset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	172	None	replace
386	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	172	None	replace
387	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	172	None	replace
388	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	172	None	replace
389	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	172	None	replace
390	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	172	None	replace
391	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1000;    milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	48	1	add
392	[BUG]  [BUGGY]  milliseconds  -=  1000;  milliseconds  -=  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	48	1	add
393	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  1000;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  1000;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	48	None	add
394	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  pos);  milliseconds  -=  1000;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  pos);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  offset,  pos);  milliseconds  -=  1000;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	48	None	add
395	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1000;    parseInt(date,  offset,  endOffset);  milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	48	1	add
396	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  offset,  endOffset);  milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	48	1	add
397	[BUG]  [BUGGY]  milliseconds  -=  1000;  int  milliseconds  -=  1000;  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  int  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    int  milliseconds  -=  1000;	  	non-compiled	[CE]  ';'  expected	48	None	add
398	[BUG]  [BUGGY]  milliseconds  -=  1000;  Milliseconds  -=  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  Milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    Milliseconds  -=  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	48	None	add
399	[BUG]  [BUGGY]  milliseconds  -=  1000;  minuteseconds  -=  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  minuteseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    minuteseconds  -=  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	48	None	add
400	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	127	1	add
401	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	127	1	add
402	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	127	1	add
403	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	127	1	add
404	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	127	None	add
405	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	127	None	add
406	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	127	1	add
407	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	127	1	add
408	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	127	None	add
409	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  1000;  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  ';'  expected	127	None	add
410	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
411	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
412	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  10;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
413	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  10;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  10;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
414	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  Milliseconds  =  100;  milliseconds  =  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  Milliseconds  =  100;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    Milliseconds  =  100;  milliseconds  =  100;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	95	None	add
415	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
416	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
417	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  200;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
418	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  200;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  200;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
419	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	119	1	add
420	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	119	1	add
421	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	119	None	add
422	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	119	None	add
423	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	119	None	add
424	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	119	1	add
425	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	119	1	add
426	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	119	1	add
427	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	119	1	add
428	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  10;  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  ';'  expected	119	None	add
429	[BUG]  [BUGGY]  milliseconds  =  pos;  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  pos;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  pos;	  milliseconds    =    length;    	non-compiled	[CE]  incompatible  types	144	None	replace
430	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
431	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
432	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  Milliseconds  =  1000;  milliseconds  =  1000000;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  Milliseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    Milliseconds  =  1000;  milliseconds  =  1000000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	164	None	add
433	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  int  milliseconds  =  1000;  milliseconds  =  1000000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  int  milliseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    int  milliseconds  =  1000;  milliseconds  =  1000000;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	164	None	add
434	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  10000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000;  milliseconds  =  10000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
435	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  10000000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  10000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000;  milliseconds  =  10000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
436	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  100;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  100;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
437	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  100;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  100;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  100;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
438	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  minuteSeconds  =  1000;  milliseconds  =  1000000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  minuteSeconds  =  1000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    minuteSeconds  =  1000;  milliseconds  =  1000000;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	164	None	add
439	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  minuteseconds  =  1000;  milliseconds  =  1000000;  [CE]  cannot  find  symbol  minuteseconds  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  minuteseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    minuteseconds  =  1000;  milliseconds  =  1000000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	164	None	add
440	[BUG]  [BUGGY]  minuteiseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteiseconds  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteiseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteiseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteiseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	126	None	replace
441	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  1000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  1000;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
442	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  1000;  milliseconds  =  2000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  1000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  1000;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
443	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  Milliseconds  =  1000;  milliseconds  =  2000;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  Milliseconds  =  1000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    Milliseconds  =  1000;  milliseconds  =  2000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	190	None	add
444	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  int  milliseconds  =  1000;  milliseconds  =  2000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  int  milliseconds  =  1000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    int  milliseconds  =  1000;  milliseconds  =  2000;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	190	None	add
445	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  100;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  100;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
446	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  100;  milliseconds  =  2000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  100;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  100;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
447	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  minuteSeconds  =  1000;  milliseconds  =  2000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  minuteSeconds  =  1000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    minuteSeconds  =  1000;  milliseconds  =  2000;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	190	None	add
448	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  minuteseconds  =  1000;  milliseconds  =  2000;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  minuteseconds  =  1000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    minuteseconds  =  1000;  milliseconds  =  2000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	190	None	add
449	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset);  break;  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  endOffset);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
450	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos);  break;  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  pos);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
451	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  0);  break;  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  0);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  0);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
452	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  1);  break;  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  1);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  1);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
453	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	196	None	replace
454	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
455	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
456	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
457	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
458	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
459	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
460	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)>  0);  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseEndOffset)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  incompatible  types	181	None	replace
461	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)>  0);  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseStartOffset)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	181	None	replace
462	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)>  0);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  pos)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	181	None	replace
463	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  0)>  0);  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  0)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  0)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  incompatible  types	181	None	replace
464	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)>  0);  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  fraction)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  incompatible  types	181	None	replace
465	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())>  0);  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  date.length())>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  incompatible  types	181	None	replace
466	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)>  0);  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  endOffset)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  incompatible  types	181	None	replace
467	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  100;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
468	[BUG]  [BUGGY]  milliseconds  =  fraction  /  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  100;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
469	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  2;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
470	[BUG]  [BUGGY]  milliseconds  =  fraction  /  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  2;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
471	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  1000;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
472	[BUG]  [BUGGY]  milliseconds  =  fraction  /  1000;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  1000;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
473	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  1;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
474	[BUG]  [BUGGY]  milliseconds  =  fraction  /  1;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  1;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
475	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
476	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
477	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	137	None	replace
478	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  offset,  endOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(date,  offset,  endOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	137	None	replace
479	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
480	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  endOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
481	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
482	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1;    milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
483	[BUG]  [BUGGY]  milliseconds  -=  1;  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
484	[BUG]  [BUGGY]  milliseconds  -=  1;  int  milliseconds  -=  1;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  int  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    int  milliseconds  -=  1;	  	non-compiled	[CE]  ';'  expected	42	None	add
485	[BUG]  [BUGGY]  milliseconds  -=  1;  minuteseconds  -=  1;  [CE]  cannot  find  symbol  minuteseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  minuteseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    minuteseconds  -=  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	42	None	add
486	[BUG]  [BUGGY]  milliseconds  -=  1;  minuteSeconds  -=  1;  [CE]  cannot  find  symbol  minuteSeconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  minuteSeconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    minuteSeconds  -=  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	42	None	add
487	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1;    milliseconds  -=  2;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
488	[BUG]  [BUGGY]  milliseconds  -=  1;  milliseconds  -=  2;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    milliseconds  -=  2;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
489	[BUG]  [BUGGY]  milliseconds  -=  1;  milliseconds  -=  1);  [CE]  ';'  expected  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  milliseconds  -=  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    milliseconds  -=  1);	  	non-compiled	[CE]  ';'  expected	42	None	add
490	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  1000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
491	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  1000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
492	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  Milliseconds  =  1000;  milliseconds  =  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  Milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    Milliseconds  =  1000;  milliseconds  =  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	64	None	add
493	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
494	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
495	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  int  milliseconds  =  1000;  milliseconds  =  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  int  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    int  milliseconds  =  1000;  milliseconds  =  10;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	64	None	add
496	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
497	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
498	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  minuteSeconds  =  1000;  milliseconds  =  10;  [CE]  cannot  find  symbol  minuteSeconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  minuteSeconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    minuteSeconds  =  1000;  milliseconds  =  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	64	None	add
499	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  minuteseconds  =  1000;  milliseconds  =  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  minuteseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    minuteseconds  =  1000;  milliseconds  =  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	64	None	add
500	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos.length());  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos.length());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos.length());	  int    endOffset    =    parseInt(date,    offset,    1);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	85	None	replace
501	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  2);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  2);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  2);	  int    endOffset    =    parseInt(date,    offset,    1);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	85	None	replace
502	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseStartOffset);	  milliseconds    =    Math.min(milliseconds,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	14	None	replace
503	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  break;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  endOffset);  break;	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	36	None	replace
504	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  break;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  break;	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	36	None	replace
505	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  0);  break;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  0);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  0);  break;	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	36	None	replace
506	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  pos);  break;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  pos);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  pos);  break;	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	36	None	replace
507	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  2  +  1;	  milliseconds    =    fraction    *    2;    	compilable	  [FE]  AssertionFailedError  	108	1	replace
508	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2  +  1;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  2  +  1;	  milliseconds    =    fraction    *    2;    	compilable	  [FE]  AssertionFailedError  	108	1	replace
509	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  0;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	159	1	replace
510	[BUG]  [BUGGY]  milliseconds  =  0;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	159	1	replace
511	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  parseInt(date,  offset,  0);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	159	1	replace
512	[BUG]  [BUGGY]  milliseconds  =  1;  parseInt(date,  offset,  0);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  parseInt(date,  offset,  0);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	159	1	replace
513	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	159	1	replace
514	[BUG]  [BUGGY]  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	159	1	replace
515	[BUG]  [BUGGY]  milliseconds  =  1;  parseInt(date,  offset,  pos);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  parseInt(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  parseInt(date,  offset,  pos);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	159	None	replace
516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  /  10;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
517	[BUG]  [BUGGY]  milliseconds  =  endOffset  /  10;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  /  10;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
518	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  100;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  JsonSyntaxException  	153	1	replace
519	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  100;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  100;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  JsonSyntaxException  	153	1	replace
520	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  1000;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  JsonSyntaxException  	153	1	replace
521	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  1000;  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  1000;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  JsonSyntaxException  	153	1	replace
522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  1;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
523	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  1;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
524	[BUG]  [BUGGY]  milliseconds  =  timezoneOffset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneOffset;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneOffset;	  milliseconds    =    timezoneIndicator;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	142	None	replace
525	[BUG]  [BUGGY]  milliseconds  =  tz;  [CE]  cannot  find  symbol  tz  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  tz;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  tz;	  milliseconds    =    timezoneIndicator;    	non-compiled	[CE]  cannot  find  symbol  tz	142	None	replace
526	[BUG]  [BUGGY]  milliseconds  =  timezone.timezoneIndicator;  [CE]  cannot  find  symbol  timezone  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezone.timezoneIndicator;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezone.timezoneIndicator;	  milliseconds    =    timezoneIndicator;    	non-compiled	[CE]  cannot  find  symbol  timezone	142	None	replace
527	[BUG]  [BUGGY]  milliseconds  =  tz.timezoneIndicator;  [CE]  cannot  find  symbol  tz  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  tz.timezoneIndicator;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  tz.timezoneIndicator;	  milliseconds    =    timezoneIndicator;    	non-compiled	[CE]  cannot  find  symbol  tz	142	None	replace
528	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
529	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
530	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  Milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  Milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    Milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	23	None	add
531	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  int  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  int  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    int  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	23	None	add
532	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseStartOffset));  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseStartOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseStartOffset));	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	23	None	add
533	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  byseEndOffset));  [CE]  cannot  find  symbol  byseEndOffset  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  byseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  byseEndOffset));	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	23	None	add
534	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setColumnIndex(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setColumnIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  1;  pos.setColumnIndex(parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
535	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
536	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
537	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,    offset,    endOffset);    parseInt(date,  offset,  endOffset);	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
538	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  offset,  endOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseInt(date,  offset,  endOffset);	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
539	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  int  endOffset  =  parseInt(date,  offset,  endOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  int  endOffset  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    int  endOffset  =  parseInt(date,  offset,  endOffset);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	89	None	add
540	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseFloat(date,  offset,  endOffset);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseFloat(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseFloat(date,  offset,  endOffset);	  	non-compiled	[CE]  cannot  find  symbol	89	None	add
541	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  endOffset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,    offset,    endOffset);    parseInt(date,  endOffset,  endOffset);	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
542	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  endOffset,  endOffset);  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  endOffset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseInt(date,  endOffset,  endOffset);	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
543	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  startOffset,  endOffset);  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  startOffset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseInt(date,  startOffset,  endOffset);	  	non-compiled	[CE]  cannot  find  symbol  startOffset	89	None	add
544	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  0,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,    offset,    endOffset);    parseInt(date,  0,  endOffset);	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
545	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  0,  endOffset);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  0,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseInt(date,  0,  endOffset);	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
546	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  offset,  endOffset)+  1;  [CE]  not  a  statement  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  offset,  endOffset)+  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseInt(date,  offset,  endOffset)+  1;	  	non-compiled	[CE]  not  a  statement	89	None	add
547	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  parseEndOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  parseEndOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  0,  parseEndOffset);  break;	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
548	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  2);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  2);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  2);  break;	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
549	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  0);  break;	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
550	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
551	[BUG]  [BUGGY]  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  endOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
553	[BUG]  [BUGGY]  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  endOffset));  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  endOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
554	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  10;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
555	[BUG]  [BUGGY]  milliseconds  =  10;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  AssertionFailedError  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
556	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	pos.setIndex(parseInt(date,  offset,  endOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
557	[BUG]  [BUGGY]  pos.setIndex(parseInt(date,  offset,  endOffset));  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setIndex(parseInt(date,  offset,  endOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
558	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
559	[BUG]  [BUGGY]  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  AssertionFailedError  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
560	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  0));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	pos.setIndex(parseInt(date,  offset,  0));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
561	[BUG]  [BUGGY]  pos.setIndex(parseInt(date,  offset,  0));  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  0));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setIndex(parseInt(date,  offset,  0));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
562	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  1));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	pos.setIndex(parseInt(date,  offset,  1));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
563	[BUG]  [BUGGY]  pos.setIndex(parseInt(date,  offset,  1));  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setIndex(parseInt(date,  offset,  1));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setIndex(parseInt(date,  offset,  1));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
564	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  50;	  milliseconds    =    100;    milliseconds    =    50;    	compilable	  [FE]  AssertionFailedError  	206	1	replace
565	[BUG]  [BUGGY]  milliseconds  =  50;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  50;	  milliseconds    =    100;    milliseconds    =    50;    	compilable	  [FE]  AssertionFailedError  	206	1	replace
566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  30;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  30;	  milliseconds    =    100;    milliseconds    =    50;    	compilable	  [FE]  AssertionFailedError  	206	1	replace
567	[BUG]  [BUGGY]  milliseconds  =  30;  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  30;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  30;	  milliseconds    =    100;    milliseconds    =    50;    	compilable	  [FE]  AssertionFailedError  	206	1	replace
568	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    0);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	188	1	replace
569	[BUG]  [BUGGY]  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    0);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	188	1	replace
570	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  1);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    0);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	188	1	replace
571	[BUG]  [BUGGY]  parseInt(date,  offset,  1);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  1);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    0);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	188	1	replace
572	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  +  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    0);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	188	1	replace
573	[BUG]  [BUGGY]  milliseconds  -=  fraction  +  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  +  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    0);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	188	1	replace
574	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  3;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
575	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
576	[BUG]  [BUGGY]  milliseconds  =  3;  timezoneIndicator  =  DateUtils.timezoneIndicator(date,  pos);  milliseconds  =  3;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  timezoneIndicator  =  DateUtils.timezoneIndicator(date,  pos);  milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    timezoneIndicator  =  DateUtils.timezoneIndicator(date,  pos);  milliseconds  =  3;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	91	None	add
577	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
578	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
579	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
580	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
581	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
582	[BUG]  [BUGGY]  milliseconds  =  3;  timezoneIndicator  =  DateUtils.getTimeZone(date,  pos);  milliseconds  =  3;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  timezoneIndicator  =  DateUtils.getTimeZone(date,  pos);  milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    timezoneIndicator  =  DateUtils.getTimeZone(date,  pos);  milliseconds  =  3;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	91	None	add
583	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
584	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
585	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
586	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
587	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  int  milliseconds  =  fraction  *  1000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  int  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    int  milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	114	None	add
588	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  Milliseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  Milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    Milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	114	None	add
589	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  minuteseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  minuteseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    minuteseconds  =  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	114	None	add
590	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  minuteiseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  minuteiseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  minuteiseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    minuteiseconds  =  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	114	None	add
591	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
592	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
593	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	163	None	replace
594	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	163	None	replace
595	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	163	None	replace
596	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	163	None	replace
597	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	163	None	replace
598	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	163	None	replace
599	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getInt(date,  offset,  endOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getInt(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	163	None	replace
600	[BUG]  [BUGGY]  milliseconds  =  TimeZone.UTC;  [CE]  cannot  find  symbol  UTC  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.UTC;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.UTC;	  milliseconds    =    this.timezoneIndicator;    	non-compiled	[CE]  cannot  find  symbol  UTC	175	None	replace
601	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  2;	  milliseconds    -=    fraction;    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
602	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  2;	  milliseconds    -=    fraction;    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
603	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
604	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
605	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	74	None	add
606	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  'catch'  without  'try'	74	None	add
607	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
608	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
609	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    0;    milliseconds  -=  0;	  	compilable	  [FE]  JsonSyntaxException  	182	1	add
610	[BUG]  [BUGGY]  milliseconds  -=  0;  milliseconds  -=  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    milliseconds  -=  0;	  	compilable	  [FE]  JsonSyntaxException  	182	1	add
611	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  case,  default,  or  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  case,  default,  or  	182	None	add
612	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  2:  milliseconds  -=  0;  break  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  2:  milliseconds  -=  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  2:  milliseconds  -=  0;  break	  	non-compiled	[CE]  ';'  expected	182	None	add
613	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  3:  milliseconds  -=  0;  break  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  3:  milliseconds  -=  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  3:  milliseconds  -=  0;  break	  	non-compiled	[CE]  ';'  expected	182	None	add
614	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  4:  milliseconds  -=  0;  break  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  4:  milliseconds  -=  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  4:  milliseconds  -=  0;  break	  	non-compiled	[CE]  ';'  expected	182	None	add
615	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  break;  }  [CE]  case,  default,  or  '}'  expected  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  break;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	182	None	add
616	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  1:  milliseconds  -=  0;  break  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  1:  milliseconds  -=  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  1:  milliseconds  -=  0;  break	  	non-compiled	[CE]  ';'  expected	182	None	add
617	[BUG]  [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  1:  milliseconds  =  fraction  *  100;  break  [CE]  ';'  expected  [FE]                  JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  1:  milliseconds  =  fraction  *  100;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    if(offset  <  0)  {  milliseconds  -=  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  switch(parseInt(date,  offset,  parseEndOffset))  {  case  1:  milliseconds  =  fraction  *  100;  break	  	non-compiled	[CE]  ';'  expected	182	None	add
618	[BUG]  [BUGGY]  minuteseconds  =  100;  [CE]  cannot  find  symbol  minuteseconds  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  minuteseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	minuteseconds  =  100;	  milliseconds    =    100;    minuteseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  minuteseconds	102	None	replace
619	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
620	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
621	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  10;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
622	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  10;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  10;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
623	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  Milliseconds  =  100;  milliseconds  =  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  Milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    1000;    Milliseconds  =  100;  milliseconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	100	None	add
624	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
625	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
626	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
627	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
628	[BUG]  [BUGGY]  parseInt(date,  offset,  1);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  1);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
629	[BUG]  [BUGGY]  parseInt(date,  offset,  2);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  2);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  2);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
630	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
631	[BUG]  [BUGGY]  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
632	[BUG]  [BUGGY]  parseInt(date,  offset,  0);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  0);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  0);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
633	[BUG]  [BUGGY]  parseInt(date,  offset,  digits);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  digits  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  digits);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  digits);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol  digits	4	None	replace
634	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  	29	None	replace
635	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  	29	None	replace
636	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  	29	None	replace
637	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  	29	None	replace
638	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  	29	None	replace
639	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
640	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
641	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  byseInt(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  byseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  byseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
642	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
643	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
644	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  Milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  Milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    Milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	158	None	add
645	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseStartOffset);	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	158	None	add
646	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseFloat(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseFloat(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  parseFloat(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
647	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  100;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
648	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;  milliseconds  =  200;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  100;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
649	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  Milliseconds  =  100;  milliseconds  =  200;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  Milliseconds  =  100;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    Milliseconds  =  100;  milliseconds  =  200;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	103	None	add
650	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  10;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  10;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
651	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  10;  milliseconds  =  200;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  10;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  10;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
652	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  200;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  200;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
653	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  200;  milliseconds  =  200;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  200;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  200;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
654	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  minuteseconds  =  100;  milliseconds  =  200;  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  minuteseconds  =  100;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    minuteseconds  =  100;  milliseconds  =  200;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	103	None	add
655	[BUG]  [BUGGY]  pos.setTimeZone(timezone);  [CE]  cannot  find  symbol  timezone  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timezone);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timezone);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezone	131	None	replace
656	[BUG]  [BUGGY]  pos.setTimeZone(date);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(date);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
657	[BUG]  [BUGGY]  pos.setTimeZone(timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timezoneId);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timezoneId);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	131	None	replace
658	[BUG]  [BUGGY]  pos.setTimeZone(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timezoneOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timezoneOffset);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	131	None	replace
659	[BUG]  [BUGGY]  pos.setTimeZone(timezoneSecond);  [CE]  cannot  find  symbol  timezoneSecond  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timezoneSecond);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timezoneSecond);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneSecond	131	None	replace
660	[BUG]  [BUGGY]  pos.setTimeZone(timezoneStandard);  [CE]  cannot  find  symbol  timezoneStandard  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timezoneStandard);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timezoneStandard);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneStandard	131	None	replace
661	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
662	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
663	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
664	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
665	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  2;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  2;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
666	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  2;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  2;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  2;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
667	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
668	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	81	1	replace
669	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  parseStartOffset);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	38	None	replace
670	[BUG]  [BUGGY]  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
671	[BUG]  [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  endOffset;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
672	[BUG]  [BUGGY]  milliseconds  -=  fraction  +  1;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  +  1;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  +  1;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
673	[BUG]  [BUGGY]  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction  +  1;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction  +  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
674	[BUG]  [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  pos.getOffset());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  endOffset;  parseInt(date,  offset,  pos.getOffset());	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
675	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	156	None	replace
676	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset),  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset),  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset),  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	156	None	replace
677	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
678	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
679	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	72	None	add
680	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
681	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
682	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	72	None	add
683	[BUG]  [BUGGY]  parseFloat(date,  offset,  milliseconds);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseFloat(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseFloat(date,  offset,  milliseconds);	  parseInt(date,    endOffset,    milliseconds);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
684	[BUG]  [BUGGY]  parseDouble(date,  offset,  milliseconds);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseDouble(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseDouble(date,  offset,  milliseconds);	  parseInt(date,    endOffset,    milliseconds);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
685	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytesPerPosition);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytesPerPosition);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  bytesPerPosition);	          int    endOffset    =    parseInt(date,    offset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	130	None	replace
686	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    100;    milliseconds  -=  100;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
687	[BUG]  [BUGGY]  milliseconds  -=  100;  milliseconds  -=  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    milliseconds  -=  100;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
688	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseInt(date,  offset,  endOffset);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    100;    parseInt(date,  offset,  endOffset);  milliseconds  -=  100;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
689	[BUG]  [BUGGY]  milliseconds  -=  100;  parseInt(date,  offset,  endOffset);  milliseconds  -=  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseInt(date,  offset,  endOffset);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    parseInt(date,  offset,  endOffset);  milliseconds  -=  100;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
690	[BUG]  [BUGGY]  milliseconds  -=  100;  parseInt(date,  offset,  pos);  milliseconds  -=  100;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseInt(date,  offset,  pos);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    parseInt(date,  offset,  pos);  milliseconds  -=  100;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	50	None	add
691	[BUG]  [BUGGY]  milliseconds  -=  100;  Milliseconds  -=  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  Milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    Milliseconds  -=  100;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	50	None	add
692	[BUG]  [BUGGY]  milliseconds  -=  100;  int  milliseconds  -=  100;  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  int  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    int  milliseconds  -=  100;	  	non-compiled	[CE]  ';'  expected	50	None	add
693	[BUG]  [BUGGY]  milliseconds  -=  100;  minuteseconds  -=  100;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  minuteseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    minuteseconds  -=  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	50	None	add
694	[BUG]  [BUGGY]  milliseconds  -=  100;  parseInt(date,  endOffset,  pos);  milliseconds  -=  100;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseInt(date,  endOffset,  pos);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    parseInt(date,  endOffset,  pos);  milliseconds  -=  100;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	50	None	add
695	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
696	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
697	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	78	None	add
698	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
699	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
700	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	non-compiled	[CE]  'catch'  without  'try'	78	None	add
701	[BUG]  [BUGGY]  milliseconds  =  DateUtils.parseDate(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateUtils  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateUtils.parseDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateUtils.parseDate(date,  offset,  parseEndOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateUtils	69	None	replace
702	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getMillis(parseStartOffset(date,  offset));  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getMillis(parseStartOffset(date,  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getMillis(parseStartOffset(date,  offset));	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
703	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	174	None	replace
704	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	37	None	replace
705	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	37	None	replace
706	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset));  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(parseInt(date,  offset));	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	37	None	replace
707	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	37	None	replace
708	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
709	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
710	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
711	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
712	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  Milliseconds  =  1000;  milliseconds  =  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  Milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    Milliseconds  =  1000;  milliseconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	56	None	add
713	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  int  milliseconds  =  1000;  milliseconds  =  1000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  int  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    int  milliseconds  =  1000;  milliseconds  =  1000;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
714	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
715	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
716	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  minuteseconds  =  1000;  milliseconds  =  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  minuteseconds  =  1000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    minuteseconds  =  1000;  milliseconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	56	None	add
717	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  10;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
718	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  10;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  10;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
719	[BUG]  [BUGGY]  milliseconds  =  digits  *  100;  [CE]  cannot  find  symbol  digits  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  100;	  milliseconds    =    fraction    *    100;    	non-compiled	[CE]  cannot  find  symbol  digits	113	None	replace
720	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
721	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0;  milliseconds  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
722	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  int  milliseconds  =  0;  milliseconds  =  0;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  int  milliseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    int  milliseconds  =  0;  milliseconds  =  0;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	66	None	add
723	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  Milliseconds  =  0;  milliseconds  =  0;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  Milliseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    Milliseconds  =  0;  milliseconds  =  0;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	66	None	add
724	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minuteseconds  =  0;  milliseconds  =  0;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minuteseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    minuteseconds  =  0;  milliseconds  =  0;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	66	None	add
725	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minuteSeconds  =  0;  milliseconds  =  0;  [CE]  cannot  find  symbol  minuteSeconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minuteSeconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    minuteSeconds  =  0;  milliseconds  =  0;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	66	None	add
726	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minutes  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        milliseconds    =    0;    minutes  =  0;  milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
727	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minutes  =  0;  milliseconds  =  0;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minutes  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    minutes  =  0;  milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
728	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0.0;  milliseconds  =  0;  [CE]  possible  loss  of  precision  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0.0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    milliseconds  =  0.0;  milliseconds  =  0;	  	non-compiled	[CE]  possible  loss  of  precision	66	None	add
729	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
730	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getDate(date,  offset,  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getDate(date,  offset,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getDate(date,  offset,  1);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	135	None	replace
731	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
732	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	135	None	replace
733	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  case  1:  milliseconds  =  fraction  *  10;  [CE]  duplicate  case  label  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  case  1:  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  case  1:  milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	non-compiled	[CE]  duplicate  case  label	166	None	replace
734	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  case  2:  milliseconds  =  fraction  *  10;  [CE]  duplicate  case  label  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  case  2:  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  case  2:  milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	non-compiled	[CE]  duplicate  case  label	166	None	replace
735	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  this.minuteS  =  fraction  *  10;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  this.minuteS  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  this.minuteS  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	166	None	replace
736	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  this.milliseconds  =  fraction  *  10;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  this.milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  this.milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	166	None	replace
737	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	157	None	replace
738	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	157	None	replace
739	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	157	None	replace
740	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	157	None	replace
741	[BUG]  [BUGGY]  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
742	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  1;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
743	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
744	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  2;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
745	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
746	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
747	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  Milliseconds  =  Math.max(milliseconds,  fraction);  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  Milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    Milliseconds  =  Math.max(milliseconds,  fraction);	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	18	None	add
748	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  int  milliseconds  =  Math.max(milliseconds,  fraction);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  int  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    int  milliseconds  =  Math.max(milliseconds,  fraction);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	18	None	add
749	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  minuteseconds  =  Math.max(milliseconds,  fraction);  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  minuteseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    minuteseconds  =  Math.max(milliseconds,  fraction);	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	18	None	add
750	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
751	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
752	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  minutes  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    fraction);    minutes  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
753	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  minutes  =  Math.max(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  minutes  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    minutes  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
754	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction));  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction));	  	non-compiled	[CE]  ';'  expected	18	None	add
755	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
756	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
757	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
758	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
759	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  10;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
760	[BUG]  [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  10;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
761	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
762	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
763	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  	27	None	replace
764	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  	27	None	replace
765	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  	27	None	replace
766	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  	27	None	replace
767	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  	27	None	replace
768	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    4;    milliseconds  =  fraction  *  4;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
769	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  4;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    milliseconds  =  fraction  *  4;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
770	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  Milliseconds  =  fraction  *  4;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  Milliseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    Milliseconds  =  fraction  *  4;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	116	None	add
771	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  int  milliseconds  =  fraction  *  4;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  int  milliseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    int  milliseconds  =  fraction  *  4;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
772	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  minuteseconds  =  fraction  *  4;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  minuteseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    minuteseconds  =  fraction  *  4;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	116	None	add
773	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  minuteSeconds  =  fraction  *  4;  [CE]  cannot  find  symbol  minuteSeconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  minuteSeconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    minuteSeconds  =  fraction  *  4;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	116	None	add
774	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  5;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    4;    milliseconds  =  fraction  *  5;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
775	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  5;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  5;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    milliseconds  =  fraction  *  5;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
776	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    4;    milliseconds  =  fraction  *  3;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
777	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  3;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    milliseconds  =  fraction  *  3;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
778	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
779	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
780	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
781	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
782	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  Milliseconds  =  100;  milliseconds  =  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  Milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    Milliseconds  =  100;  milliseconds  =  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	97	None	add
783	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  1000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
784	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  1000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
785	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  9;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  9;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
786	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  9;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  9;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  9;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
787	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  minuteseconds  =  100;  milliseconds  =  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  minuteseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    minuteseconds  =  100;  milliseconds  =  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	97	None	add
788	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
789	[BUG]  [BUGGY]  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
790	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	173	None	replace
791	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	173	None	replace
792	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	173	None	replace
793	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	173	None	replace
794	[BUG]  [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.length();  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	173	None	replace
795	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	173	None	replace
796	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    10;    milliseconds  -=  10;	  	compilable	  [FE]  JsonSyntaxException  	44	1	add
797	[BUG]  [BUGGY]  milliseconds  -=  10;  milliseconds  -=  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    milliseconds  -=  10;	  	compilable	  [FE]  JsonSyntaxException  	44	1	add
798	[BUG]  [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  pos);  milliseconds  -=  10;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  pos);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    parseInt(date,  offset,  pos);  milliseconds  -=  10;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	44	None	add
799	[BUG]  [BUGGY]  milliseconds  -=  10;  int  milliseconds  -=  10;  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  int  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    int  milliseconds  -=  10;	  	non-compiled	[CE]  ';'  expected	44	None	add
800	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    10;    milliseconds  -=  100;	  	compilable	  [FE]  JsonSyntaxException  	44	1	add
801	[BUG]  [BUGGY]  milliseconds  -=  10;  milliseconds  -=  100;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    milliseconds  -=  100;	  	compilable	  [FE]  JsonSyntaxException  	44	1	add
802	[BUG]  [BUGGY]  milliseconds  -=  10;  minuteseconds  -=  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  minuteseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    minuteseconds  -=  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	44	None	add
803	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  parseEndOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
804	[BUG]  [BUGGY]  parseInt(date,  offset,  parseEndOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  parseEndOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
805	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
806	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
807	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  10;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  10;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
808	[BUG]  [BUGGY]  milliseconds  -=  10;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  10;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  10;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
809	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
810	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
811	[BUG]  [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	9	None	replace
812	[BUG]  [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction.length;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction.length;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos);  milliseconds  -=  fraction.length;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	9	None	replace
813	[BUG]  [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  +  1;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos);  milliseconds  -=  fraction  +  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	9	None	replace
814	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  fraction);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  fraction);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
815	[BUG]  [BUGGY]  parseInt(date,  offset,  fraction);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  fraction);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  fraction);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
816	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
817	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
818	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  Milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  Milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    Milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	13	None	add
819	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  int  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  int  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    int  milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	13	None	add
820	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  parseStartOffset);	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	13	None	add
821	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  minuteseconds  =  Math.min(milliseconds,  parseEndOffset);  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  minuteseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    minuteseconds  =  Math.min(milliseconds,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	13	None	add
822	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  minutes  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    minutes  =  Math.min(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
823	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  minutes  =  Math.min(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  minutes  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    minutes  =  Math.min(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
824	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  byseEndOffset);  [CE]  cannot  find  symbol  byseEndOffset  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  byseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  byseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	13	None	add
825	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  fraction  -  1);	  milliseconds    =    Math.max(milliseconds,    fraction);    	compilable	  [FE]  JsonSyntaxException  	19	1	replace
826	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction  -  1);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  fraction  -  1);	  milliseconds    =    Math.max(milliseconds,    fraction);    	compilable	  [FE]  JsonSyntaxException  	19	1	replace
827	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos  +  1);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos  +  1);	  int    endOffset    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	82	None	replace
828	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos,  milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos,  milliseconds);	  int    endOffset    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	82	None	replace
829	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos  -  1);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos  -  1);	  int    endOffset    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	82	None	replace
830	[BUG]  [BUGGY]  milliseconds  =  digits  *  1000;  [CE]  cannot  find  symbol  digits  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  1000;	  milliseconds    =    fraction    *    1000;    	non-compiled	[CE]  cannot  find  symbol  digits	115	None	replace
831	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
832	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset  -  1);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset  -  1);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
833	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  parseStartOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
834	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  pos);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  pos);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
835	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset  +  1);  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset  +  1);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
836	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  endOffset);  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  endOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
837	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  1;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
838	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  1;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
839	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  int  milliseconds  =  fraction  *  1;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  int  milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    int  milliseconds  =  fraction  *  1;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	109	None	add
840	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  Milliseconds  =  fraction  *  1;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  Milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    Milliseconds  =  fraction  *  1;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	109	None	add
841	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  minuteseconds  =  fraction  *  1;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  minuteseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    minuteseconds  =  fraction  *  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	109	None	add
842	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  2;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
843	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  2;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  2;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
844	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  minuteiseconds  =  fraction  *  1;  [CE]  cannot  find  symbol  minuteiseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  minuteiseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    minuteiseconds  =  fraction  *  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	109	None	add
845	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  percentage  *  1;  [CE]  cannot  find  symbol  percentage  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  percentage  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    milliseconds  =  percentage  *  1;	  	non-compiled	[CE]  cannot  find  symbol  percentage	109	None	add
846	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  pos  +  1);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  pos  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  pos  +  1);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
847	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  pos,  endOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  pos,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  pos,  endOffset);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
848	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  pos,  milliseconds);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  pos,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  pos,  milliseconds);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
849	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  0);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  0);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
850	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset));    milliseconds    -=    fraction;    	non-compiled	[CE]  ';'  expected	170	None	replace
851	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10  +(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  10  +(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset));    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	170	1	replace
852	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10  +(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10  +(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10  +(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset));    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	170	1	replace
853	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10  +  Math.min(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [CE]  no  suitable  method  found  for  min(int)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10  +  Math.min(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10  +  Math.min(parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset));    milliseconds    -=    fraction;    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	170	None	replace
854	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
855	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  50;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
856	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  Milliseconds  =  100;  milliseconds  =  50;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  Milliseconds  =  100;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    Milliseconds  =  100;  milliseconds  =  50;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	205	None	add
857	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  10;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  10;  milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
858	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  10;  milliseconds  =  50;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  10;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  10;  milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
859	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  500;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  500;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
860	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  500;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  500;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  500;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
861	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  40;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  40;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
862	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  40;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  40;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  40;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
863	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  10;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
864	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
865	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  100;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
866	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  100;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
867	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  1;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
868	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  1;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
869	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
870	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  0);  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseEndOffset)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
871	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)-  0);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  pos)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  pos)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	179	None	replace
872	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)-  0);  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseStartOffset)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseStartOffset)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	179	None	replace
873	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  endOffset)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
874	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)-  0);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  endOffset)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  endOffset)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
875	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  date.length())-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
876	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())-  0);  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  date.length())-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  date.length())-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
877	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =(parseInt(date,  offset,  fraction)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
878	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)-  0);  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  fraction)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  fraction)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	compilable	  [FE]  JsonSyntaxException  	179	1	replace
879	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
880	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
881	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	70	None	add
882	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  Milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  Milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    Milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	70	None	add
883	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
884	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
885	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  4;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
886	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
887	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
888	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
889	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  pos  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	150	None	add
890	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
891	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
892	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
893	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  endOffset));	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
894	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  endOffset));  [FE]  JsonSyntaxException  [FE]                AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  pos.setIndex(parseInt(date,  offset,  endOffset));	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
895	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
896	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
897	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
898	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10,  milliseconds  =  10;  milliseconds  =  10;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10,  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10,  milliseconds  =  10;  milliseconds  =  10;	  	non-compiled	[CE]  ';'  expected	30	None	add
899	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
900	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
901	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
902	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
903	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	30	None	add
904	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  Milliseconds  =  10;  milliseconds  =  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  Milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    Milliseconds  =  10;  milliseconds  =  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	30	None	add
905	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	30	None	add
906	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  0,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  0,  milliseconds);	  int    endOffset    =    parseInt(date,    offset,    milliseconds);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
907	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds,  pos);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  milliseconds,  pos);	  int    endOffset    =    parseInt(date,    offset,    milliseconds);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
908	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1,  milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  1,  milliseconds);	  int    endOffset    =    parseInt(date,    offset,    milliseconds);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
909	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	121	1	add
910	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	121	1	add
911	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	121	1	add
912	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	121	1	add
913	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    int  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	121	None	add
914	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    Milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	121	None	add
915	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    minuteseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	121	None	add
916	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  100;  [CE]  ';'  expected  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  10,  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  ';'  expected	121	None	add
917	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  endOffset));  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  endOffset));	  milliseconds    =    Math.min(milliseconds,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	15	None	replace
918	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset));  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  offset));	  milliseconds    =    Math.min(milliseconds,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	15	None	replace
919	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  endOffset));  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.max(milliseconds,  endOffset));	  milliseconds    =    Math.min(milliseconds,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	15	None	replace
920	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset  +  1));  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  offset  +  1));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  offset  +  1));	  milliseconds    =    Math.min(milliseconds,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	15	None	replace
921	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset  -  offset);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  endOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  endOffset  -  offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
922	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  fraction  -  offset);  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  fraction  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  fraction  -  offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
923	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos.length  -  offset);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos.length  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  pos.length  -  offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
924	[BUG]  [BUGGY]  milliseconds  =  secondOffset  *  10;  [CE]  cannot  find  symbol  secondOffset  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  secondOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  secondOffset  *  10;	  milliseconds    =    digits    *    10;    	non-compiled	[CE]  cannot  find  symbol  secondOffset	111	None	replace
925	[BUG]  [BUGGY]  milliseconds  =  pos  *  10;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  pos  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  pos  *  10;	  milliseconds    =    digits    *    10;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	111	None	replace
926	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
927	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
928	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  Milliseconds  =  1;  milliseconds  =  1;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  Milliseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    Milliseconds  =  1;  milliseconds  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	20	None	add
929	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  2;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  2;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
930	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  2;  milliseconds  =  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  2;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  2;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
931	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  int  milliseconds  =  1;  milliseconds  =  1;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  int  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    int  milliseconds  =  1;  milliseconds  =  1;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	20	None	add
932	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  2;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
933	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  2;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  2;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
934	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  minuteseconds  =  1;  milliseconds  =  1;  [CE]  cannot  find  symbol  minuteseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  minuteseconds  =  1;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    minuteseconds  =  1;  milliseconds  =  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	20	None	add
935	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	add
936	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    2;    milliseconds  -=  2;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
937	[BUG]  [BUGGY]  milliseconds  -=  2;  milliseconds  -=  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    milliseconds  -=  2;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
938	[BUG]  [BUGGY]  milliseconds  -=  2;  Milliseconds  -=  2;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  Milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    Milliseconds  -=  2;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	46	None	add
939	[BUG]  [BUGGY]  milliseconds  -=  2;  int  milliseconds  -=  2;  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  int  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    int  milliseconds  -=  2;	  	non-compiled	[CE]  ';'  expected	46	None	add
940	[BUG]  [BUGGY]  milliseconds  -=  2;  minuteseconds  -=  2;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  minuteseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    minuteseconds  -=  2;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	46	None	add
941	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    2;    milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
942	[BUG]  [BUGGY]  milliseconds  -=  2;  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
943	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    2;    milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
944	[BUG]  [BUGGY]  milliseconds  -=  2;  milliseconds  -=  3;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    milliseconds  -=  3;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
945	[BUG]  [BUGGY]  milliseconds  -=  2;  timezoneIndicator  -=  2;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  timezoneIndicator  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    timezoneIndicator  -=  2;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	46	None	add
946	[BUG]  [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
947	[BUG]  [BUGGY]  parseInt(date,  offset,  1);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  1);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
948	[BUG]  [BUGGY]  parseInt(date,  offset,  2);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  2);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  2);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
949	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
950	[BUG]  [BUGGY]  parseInt(date,  offset,  0);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  0);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  0);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
951	[BUG]  [BUGGY]  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
952	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  date.length());  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  date.length());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  date.length());	          int    endOffset    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	129	None	replace
953	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  startOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  startOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  startOffset);	          int    endOffset    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	129	None	replace
954	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytesOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytesOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  bytesOffset);	          int    endOffset    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	129	None	replace
955	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	136	None	replace
956	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    12;    milliseconds  -=  12;	  	compilable	  [FE]  JsonSyntaxException  	139	1	add
957	[BUG]  [BUGGY]  milliseconds  -=  12;  milliseconds  -=  12;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    milliseconds  -=  12;	  	compilable	  [FE]  JsonSyntaxException  	139	1	add
958	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  12;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  12;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	139	None	add
959	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  pos);  milliseconds  -=  12;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  pos);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  offset,  pos);  milliseconds  -=  12;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	139	None	add
960	[BUG]  [BUGGY]  milliseconds  -=  12;  Milliseconds  -=  12;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  Milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    Milliseconds  -=  12;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	139	None	add
961	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  endOffset);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    12;    parseInt(date,  offset,  endOffset);  milliseconds  -=  12;	  	compilable	  [FE]  JsonSyntaxException  	139	1	add
962	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  endOffset);  milliseconds  -=  12;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  endOffset);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  offset,  endOffset);  milliseconds  -=  12;	  	compilable	  [FE]  JsonSyntaxException  	139	1	add
963	[BUG]  [BUGGY]  milliseconds  -=  12;  int  milliseconds  -=  12;  [CE]  ';'  expected  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  int  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    int  milliseconds  -=  12;	  	non-compiled	[CE]  ';'  expected	139	None	add
964	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  endOffset,  pos);  milliseconds  -=  12;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  endOffset,  pos);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  endOffset,  pos);  milliseconds  -=  12;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	139	None	add
965	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  offset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	194	None	replace
966	[BUG]  [BUGGY]  int  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    int    milliseconds    -=    fraction;    	non-compiled	[CE]  ';'  expected	169	None	replace
967	[BUG]  [BUGGY]  int  milliseconds  -=  fraction  +  1;  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  -=  fraction  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  -=  fraction  +  1;	  milliseconds    -=    fraction;    int    milliseconds    -=    fraction;    	non-compiled	[CE]  ';'  expected	169	None	replace
968	[BUG]  [BUGGY]  int  milliseconds  -=  fraction  *  10;  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  -=  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  -=  fraction  *  10;	  milliseconds    -=    fraction;    int    milliseconds    -=    fraction;    	non-compiled	[CE]  ';'  expected	169	None	replace
969	[BUG]  [BUGGY]  int  milliseconds  -=  fraction  *  2;  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  -=  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  -=  fraction  *  2;	  milliseconds    -=    fraction;    int    milliseconds    -=    fraction;    	non-compiled	[CE]  ';'  expected	169	None	replace
970	[BUG]  [BUGGY]  int  milliseconds  -=  fraction  *  100;  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  -=  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  -=  fraction  *  100;	  milliseconds    -=    fraction;    int    milliseconds    -=    fraction;    	non-compiled	[CE]  ';'  expected	169	None	replace
971	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  endOffset);  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
972	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset  -  1);  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset  -  1);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
973	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  pos);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  pos);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
974	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset  +  1);  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset  +  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset  +  1);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
975	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  parseStartOffset);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
976	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
977	[BUG]  [BUGGY]  milliseconds  -=  this.milliseconds;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  this.milliseconds;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  this.milliseconds;	  milliseconds    =    this.milliseconds;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	176	None	replace
978	[BUG]  [BUGGY]  milliseconds  =  this.milliseconds  -  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  this.milliseconds  -  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.milliseconds  -  1;	  milliseconds    =    this.milliseconds;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	176	None	replace
979	[BUG]  [BUGGY]  milliseconds  =  digits  *  1;  [CE]  cannot  find  symbol  digits  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  1;	  milliseconds    =    fraction    *    1;    	non-compiled	[CE]  cannot  find  symbol  digits	110	None	replace
980	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
981	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
982	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  Milliseconds  =  1000;  milliseconds  =  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  Milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    Milliseconds  =  1000;  milliseconds  =  100;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	62	None	add
983	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
984	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
985	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  int  milliseconds  =  1000;  milliseconds  =  100;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  int  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    int  milliseconds  =  1000;  milliseconds  =  100;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	62	None	add
986	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  minuteseconds  =  1000;  milliseconds  =  100;  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  minuteseconds  =  1000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    minuteseconds  =  1000;  milliseconds  =  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	62	None	add
987	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
988	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
989	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
990	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
991	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.. ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
992	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.. ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.. ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.. ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
993	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ".);  }  [CE]  <identifier>  expected  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ".);  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ".);  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
994	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.... ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.... ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
995	[BUG]  [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.... ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.... ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.... ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
996	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  2;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
997	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  2;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
998	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  int  milliseconds  =  fraction  *  2;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  int  milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    int  milliseconds  =  fraction  *  2;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	107	None	add
999	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  Milliseconds  =  fraction  *  2;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  Milliseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    Milliseconds  =  fraction  *  2;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	107	None	add
1000	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  minuteseconds  =  fraction  *  2;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  minuteseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    minuteseconds  =  fraction  *  2;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	107	None	add
1001	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  3;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1002	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  3;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  3;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1003	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  1;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1004	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  1;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  1;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1005	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  minuteiseconds  =  fraction  *  2;  [CE]  cannot  find  symbol  minuteiseconds  [FE]                JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  minuteiseconds  =  fraction  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    minuteiseconds  =  fraction  *  2;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	107	None	add
1006	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	160	None	replace
1007	[BUG]  [BUGGY]  milliseconds  =  date.getTime();  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date.getTime();  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date.getTime();  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1008	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	160	None	replace
1009	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	187	1	add
1010	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	187	1	add
1011	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    int  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	187	None	add
1012	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  minuteseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  minuteseconds  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  minuteseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    minuteseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	187	None	add
1013	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    Milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	187	None	add
1014	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  byseInt(date,  offset,  0);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  byseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  byseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	187	None	add
1015	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	187	1	add
1016	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	187	1	add
1017	[BUG]  [BUGGY]  milliseconds  =  999;  minuteSeconds  =  999;  [CE]  cannot  find  symbol  minuteSeconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  minuteSeconds  =  999;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  999;  minuteSeconds  =  999;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
1018	[BUG]  [BUGGY]  milliseconds  =  1000;  timezoneSeconds  =  1000;  [CE]  cannot  find  symbol  timezoneSeconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  timezoneSeconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  timezoneSeconds  =  1000;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  timezoneSeconds	60	None	replace
1019	[BUG]  [BUGGY]  milliseconds  =  1000;  timeZone  =  TimeZone.getDefault();  [CE]  cannot  find  symbol  timeZone  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  timeZone  =  TimeZone.getDefault();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  timeZone  =  TimeZone.getDefault();	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  timeZone	60	None	replace
1020	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)-  0);  [CE]  cannot  find  symbol  byseEndOffset  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)-  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  byseEndOffset)-  0);	  milliseconds    =(parseInt(date,    offset)-    0);    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	179	None	replace
1021	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  50;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  50;  milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
1022	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  50;  milliseconds  =  50;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  50;  milliseconds  =  50;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  50;  milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
1023	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  60;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  60;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
1024	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  60;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;  milliseconds  =  60;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    50;    milliseconds  =  100;  milliseconds  =  60;	  	compilable	  [FE]  JsonSyntaxException  	205	1	add
1025	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  10;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
1026	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  10;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  10;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
1027	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  2000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  2000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
1028	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  2000;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  100;  milliseconds  =  2000;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    100;    milliseconds  =  2000;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	62	1	add
1029	[BUG]  [BUGGY]  milliseconds  =  length  *  100;  [CE]  cannot  find  symbol  length  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  length  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  100;	  milliseconds    =    fraction    *    100;    	non-compiled	[CE]  cannot  find  symbol  length	113	None	replace
1030	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  offset  *  100;	  milliseconds    =    fraction    *    100;    	compilable	  [FE]  JsonSyntaxException  	113	1	replace
1031	[BUG]  [BUGGY]  milliseconds  =  offset  *  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  offset  *  100;	  milliseconds    =    fraction    *    100;    	compilable	  [FE]  JsonSyntaxException  	113	1	replace
1032	[BUG]  [BUGGY]  milliseconds  =  value  *  100;  [CE]  cannot  find  symbol  value  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  value  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  value  *  100;	  milliseconds    =    fraction    *    100;    	non-compiled	[CE]  cannot  find  symbol  value	113	None	replace
1033	[BUG]  [BUGGY]  milliseconds  =  digits  *  2;  [CE]  cannot  find  symbol  digits  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  2;	  milliseconds    =    fraction    *    2;    	non-compiled	[CE]  cannot  find  symbol  digits	108	None	replace
1034	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.max(milliseconds,  offset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
1035	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  offset);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.max(milliseconds,  offset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
1036	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
1037	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset);  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
1038	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  timezoneId);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  timezoneId);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  timezoneId);	          int    endOffset    =    parseInt(date,    offset,    timezoneIndicator);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	132	None	replace
1039	[BUG]  [BUGGY]  char  endOffset  =  parseInt(date,  offset,  timezoneIndicator);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  char  endOffset  =  parseInt(date,  offset,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	char  endOffset  =  parseInt(date,  offset,  timezoneIndicator);	          int    endOffset    =    parseInt(date,    offset,    timezoneIndicator);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	132	None	replace
1040	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)/  1);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset)/  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)/  1);	  milliseconds    =(parseInt(date,    offset)+    1);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	180	None	replace
1041	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	38	None	replace
1042	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  2;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  2;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
1043	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  2;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  2;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  2;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
1044	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setSize(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  1;  pos.setSize(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  1;  pos.setSize(parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
1045	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	193	None	replace
1046	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getInstance(timezoneIndicator,  date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getInstance(timezoneIndicator,  date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getInstance(timezoneIndicator,  date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	193	None	replace
1047	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getInstance(timezoneIndicator,  timezone);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getInstance(timezoneIndicator,  timezone);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getInstance(timezoneIndicator,  timezone);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	193	None	replace
1048	[BUG]  [BUGGY]  milliseconds  -=  10;  parseInt(date,  pos,  offset);  milliseconds  -=  10;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  pos,  offset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    parseInt(date,  pos,  offset);  milliseconds  -=  10;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	44	None	add
1049	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  400;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  400;	  milliseconds    =    999;    	compilable	  [FE]  AssertionFailedError  	94	1	replace
1050	[BUG]  [BUGGY]  milliseconds  =  400;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  400;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  400;	  milliseconds    =    999;    	compilable	  [FE]  AssertionFailedError  	94	1	replace
1051	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  startOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  startOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  startOffset);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
1052	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytesOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytesOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  bytesOffset);  break;	          int    endOffset    =    parseInt(date,    offset,    endOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	133	None	replace
1053	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
1054	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
1055	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	163	None	replace
1056	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	163	None	replace
1057	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getDayOfMonth(date,  offset,  endOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getDayOfMonth(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getDayOfMonth(date,  offset,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	163	None	replace
1058	[BUG]  [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
1059	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
1060	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	13	1	add
1061	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -offset));  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  -offset));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
1062	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  startOffset));  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  startOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  startOffset));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
1063	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	72	None	add
1064	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  10  +  1;	  milliseconds    =    fraction    *    10;    minuteseconds    =    fraction    *    10;    	compilable	  [FE]  AssertionFailedError  	124	1	replace
1065	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10  +  1;  [FE]  AssertionFailedError  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10  +  1;	  milliseconds    =    fraction    *    10;    minuteseconds    =    fraction    *    10;    	compilable	  [FE]  AssertionFailedError  	124	1	replace
1066	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  1);	  milliseconds    =    Math.min(milliseconds,    fraction);    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
1067	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  1);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  1);	  milliseconds    =    Math.min(milliseconds,    fraction);    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
1068	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  digits);  [CE]  cannot  find  symbol  digits  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  digits);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  digits);	  milliseconds    =    Math.min(milliseconds,    fraction);    	non-compiled	[CE]  cannot  find  symbol  digits	17	None	replace
1069	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  50;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
1070	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  50;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  50;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  50;  milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
1071	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
1072	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    100;    milliseconds  =  100;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
1073	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  milliseconds);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  milliseconds);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
1074	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  milliseconds);  break;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  milliseconds);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  milliseconds);  break;	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
1075	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  [CE]  cannot  find  symbol  startOffset  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	149	None	replace
1076	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  startOffset);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  startOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  startOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
1077	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  60;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  60;	  milliseconds    =    100;    milliseconds    =    50;    	compilable	  [FE]  AssertionFailedError  	206	1	replace
1078	[BUG]  [BUGGY]  milliseconds  =  60;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  60;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  60;	  milliseconds    =    100;    milliseconds    =    50;    	compilable	  [FE]  AssertionFailedError  	206	1	replace
1079	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  len);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  len);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  len);  break;	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
1080	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)-  1  -  parseEndOffset);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset)-  1  -  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)-  1  -  parseEndOffset);	  milliseconds    =(parseInt(date,    offset)-    1);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	184	None	replace
1081	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	161	None	replace
1082	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	161	None	replace
1083	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  startOffset  =  parseInt(date,  offset,  startOffset);  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  startOffset  might  not  have  been  initialized  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  startOffset  =  parseInt(date,  offset,  startOffset);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  startOffset  =  parseInt(date,  offset,  startOffset);  throw  new  IllegalArgumentException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  startOffset  might  not  have  been  initialized	146	None	replace
1084	[BUG]  [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	174	None	replace
1085	[BUG]  [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1086	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1087	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset));  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  ';'  expected	4	None	replace
1088	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    2;    milliseconds  -=  4;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
1089	[BUG]  [BUGGY]  milliseconds  -=  2;  milliseconds  -=  4;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  milliseconds  -=  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    2;    milliseconds  -=  4;	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
1090	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  4;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1091	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  4;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  4;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1092	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  200;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  200;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
1093	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  200;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  200;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  200;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
1094	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  10  +  1;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  AssertionFailedError  	106	1	replace
1095	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10  +  1;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  10  +  1;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  AssertionFailedError  	106	1	replace
1096	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
1097	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getInt(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	135	None	replace
1098	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getDayOfMonth(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getDayOfMonth(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getDayOfMonth(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	135	None	replace
1099	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	112	1	add
1100	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  100;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    100;    milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	112	1	add
1101	[BUG]  [BUGGY]  milliseconds  =  1000;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  pos  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
1102	[BUG]  [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  0);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  pos  =  parseInt(date,  offset,  0);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  incompatible  types	33	None	replace
1103	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1104	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1105	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1106	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1107	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  startOffset  =  parseInt(date,  offset,  startOffset);  switch(startOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  startOffset  =  parseInt(date,  offset,  startOffset);  switch(startOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  startOffset  =  parseInt(date,  offset,  startOffset);  switch(startOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1108	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1109	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(date,  offset,  milliseconds);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseAndIgnoreWhitespace(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseAndIgnoreWhitespace(date,  offset,  milliseconds);	  parseInt(date,    endOffset,    milliseconds);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1110	[BUG]  [BUGGY]  parseAndClose(date,  offset,  milliseconds);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseAndClose(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseAndClose(date,  offset,  milliseconds);	  parseInt(date,    endOffset,    milliseconds);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1111	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  int  milliseconds  =  offset  *  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  int  milliseconds  =  offset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    int  milliseconds  =  offset  *  10;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	154	None	add
1112	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  break;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  10;  break;	  	non-compiled	[CE]  unreachable  statement	154	None	add
1113	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  8;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
1114	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  8;  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  8;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
1115	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  10000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  10000;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
1116	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  10000;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  10000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  10000;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
1117	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000000;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
1118	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000000;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000000;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000000;  milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	164	1	add
1119	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  999;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1120	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1121	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
1122	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  999;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  999;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	93	None	add
1123	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)>  0);  [CE]  cannot  find  symbol  byseEndOffset  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  byseEndOffset)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  byseEndOffset)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	181	None	replace
1124	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseSecondOffset)>  0);  [CE]  cannot  find  symbol  parseSecondOffset  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset,  parseSecondOffset)>  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset,  parseSecondOffset)>  0);	  milliseconds    =(parseInt(date,    offset)>    0);    	non-compiled	[CE]  cannot  find  symbol  parseSecondOffset	181	None	replace
1125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  10;  milliseconds  =  100;	  milliseconds    =    100;    milliseconds    =    100L;    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1126	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  100;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  100;	  milliseconds    =    100;    milliseconds    =    100L;    	compilable	  [FE]  AssertionFailedError  	138	1	replace
1127	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0L;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  0L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  0L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
1128	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  100L;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  100L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  100L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
1129	[BUG]  [BUGGY]  milliseconds  =  100;  this.milliseconds  =  100L;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  this.milliseconds  =  100L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  this.milliseconds  =  100L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	138	None	replace
1130	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  8;	  milliseconds    -=    12;    	compilable	  [FE]  JsonSyntaxException  	140	1	replace
1131	[BUG]  [BUGGY]  milliseconds  -=  8;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  8;	  milliseconds    -=    12;    	compilable	  [FE]  JsonSyntaxException  	140	1	replace
1132	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset  -  startOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset  -  startOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  endOffset  -  startOffset);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
1133	[BUG]  [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
1134	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
1135	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  startOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  startOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  startOffset);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
1136	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  pos  -  1);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  pos  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  pos  -  1);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
1137	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  ParseInt(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  ParseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  ParseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol	158	None	add
1138	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	30	None	add
1139	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	68	None	add
1140	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  pos,  parseEndOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  pos,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  pos,  parseEndOffset);	  int    endOffset    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	82	None	replace
1141	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos.length);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos.length);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos.length);	  int    endOffset    =    parseInt(date,    offset,    1);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	85	None	replace
1142	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  3);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  3);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  3);	  int    endOffset    =    parseInt(date,    offset,    1);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	85	None	replace
1143	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseInt(date,  offset),  parseEndOffset);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseInt(date,  offset),  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseInt(date,  offset),  parseEndOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	75	None	replace
1144	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  minutes  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    4;    minutes  =  fraction  *  4;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1145	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  minutes  =  fraction  *  4;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  minutes  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    minutes  =  fraction  *  4;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1146	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteSeconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	119	None	add
1147	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  1;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1148	[BUG]  [BUGGY]  milliseconds  -=  timezoneIndicator;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  timezoneIndicator;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  timezoneIndicator;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	185	None	replace
1149	[BUG]  [BUGGY]  milliseconds  -=  timezoneOffset;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  timezoneOffset  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  timezoneOffset;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  timezoneOffset;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	185	None	replace
1150	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  pos.getOffset());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  parseInt(date,  offset,  pos.getOffset());	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1151	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  pos.getOffset());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  pos.getOffset());	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1152	[BUG]  [BUGGY]  milliseconds  -=  offset;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  offset;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  offset;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1153	[BUG]  [BUGGY]  milliseconds  -=  100;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  100;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1154	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  2;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  2;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  2;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1155	[BUG]  [BUGGY]  milliseconds  -=  1000;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1000;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1156	[BUG]  [BUGGY]  milliseconds  =  TimeZone.UTC;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  UTC  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.UTC;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.UTC;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  UTC	160	None	replace
1157	[BUG]  [BUGGY]  milliseconds  =  timezoneId;  [CE]  cannot  find  symbol  timezoneId  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneId;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneId;	  milliseconds    =    timezoneIndicator;    	non-compiled	[CE]  cannot  find  symbol  timezoneId	142	None	replace
1158	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  2000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1159	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  2000;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  2000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1160	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    fraction);    parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
1161	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	18	1	add
1162	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	add
1163	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	add
1164	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  TimeZone.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  TimeZone.getTimeZone(timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);  this.timezoneIndicator  =  TimeZone.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	add
1165	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	76	None	add
1166	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	76	None	add
1167	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
1168	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
1169	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  unreachable  statement  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  null.   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  	non-compiled	[CE]  unreachable  statement	76	None	add
1170	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  200;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  200;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
1171	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  200;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  1000;  milliseconds  =  200;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    1000;    milliseconds  =  200;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	100	1	add
1172	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  ParseEndOffset);  [CE]  cannot  find  symbol  ParseEndOffset  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  ParseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  ParseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  ParseEndOffset	11	None	add
1173	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
1174	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
1175	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null.   ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
1176	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  minutes  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    minutes  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
1177	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  minutes  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  minutes  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    minutes  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
1178	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  parseEndOffset);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	81	None	replace
1179	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1180	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1181	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  'catch'  without  'try'	74	None	add
1182	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  'catch'  without  'try'	74	None	add
1183	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  break;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  endOffset);  break;	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	36	None	replace
1184	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  pos);  milliseconds  -=  1;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  pos);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    parseInt(date,  offset,  pos);  milliseconds  -=  1;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	42	None	add
1185	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  pos,  offset);  milliseconds  -=  1;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  pos,  offset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    parseInt(date,  pos,  offset);  milliseconds  -=  1;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	42	None	add
1186	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  0);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1;    parseInt(date,  offset,  0);  milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
1187	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  0);  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  0);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    parseInt(date,  offset,  0);  milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
1188	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  3;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1189	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1190	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
1191	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1192	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1193	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
1194	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	91	None	add
1195	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  pos));  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  pos));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  pos));	  milliseconds    =    Math.min(milliseconds,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	15	None	replace
1196	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset));  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset  -  offset));	  milliseconds    =    Math.min(milliseconds,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	15	None	replace
1197	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	70	None	add
1198	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
1199	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
1200	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1201	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1202	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  2000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  2000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1203	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  2000;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  10;  milliseconds  =  2000;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    10;    milliseconds  =  2000;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1204	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  0;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
1205	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  0;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
1206	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  3;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
1207	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  3;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1;  milliseconds  =  fraction  *  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1;    milliseconds  =  fraction  *  3;	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
1208	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  int  milliseconds  =  endOffset  *  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  int  milliseconds  =  endOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    int  milliseconds  =  endOffset  *  10;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	152	None	add
1209	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  long  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  long  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    long  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	7	None	add
1210	[BUG]  [BUGGY]  milliseconds  =  this.timezoneIndicator  +  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  this.timezoneIndicator  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.timezoneIndicator  +  1;	  milliseconds    =    this.timezoneIndicator;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	175	None	replace
1211	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getInteger(date,  offset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getInteger(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getInteger(date,  offset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	69	None	replace
1212	[BUG]  [BUGGY]  milliseconds  =(int)Math.floor(parseInt(date,  offset));  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(int)Math.floor(parseInt(date,  offset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(int)Math.floor(parseInt(date,  offset));	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	69	None	replace
1213	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getInt(parseEndOffset,  offset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getInt(parseEndOffset,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getInt(parseEndOffset,  offset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	69	None	replace
1214	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    fraction);    parseInt(date,  offset,  endOffset);  milliseconds  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
1215	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.min(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    parseInt(date,  offset,  endOffset);  milliseconds  =  Math.min(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
1216	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.min(milliseconds,    fraction);    parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
1217	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    parseInt(date,  offset,  endOffset);  milliseconds  =  Math.max(milliseconds,  fraction);	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
1218	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getInteger(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getInteger(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getInteger(date);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	73	None	replace
1219	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  0);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  0);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	79	None	replace
1220	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -offset);  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  -offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	197	None	replace
1221	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  pos,  offset);  milliseconds  -=  12;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  pos,  offset);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  pos,  offset);  milliseconds  -=  12;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	139	None	add
1222	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  12);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    12;    parseInt(date,  offset,  12);  milliseconds  -=  12;	  	compilable	  [FE]  JsonSyntaxException  	139	1	add
1223	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  12);  milliseconds  -=  12;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  12);  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  offset,  12);  milliseconds  -=  12;	  	compilable	  [FE]  JsonSyntaxException  	139	1	add
1224	[BUG]  [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  3;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseFloat(date,  offset,  endOffset);  milliseconds  -=  3;	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1225	[BUG]  [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset,  pos);  milliseconds  -=  3;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset,  pos);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseFloat(date,  offset,  pos);  milliseconds  -=  3;	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1226	[BUG]  [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset,  3);  milliseconds  -=  3;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset,  3);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseFloat(date,  offset,  3);  milliseconds  -=  3;	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1227	[BUG]  [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset);  milliseconds  -=  3;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseFloat(date,  offset);  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseFloat(date,  offset);  milliseconds  -=  3;	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1228	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  -1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  -1;	  milliseconds    =    0;    milliseconds    =    0;    	compilable	  [FE]  JsonSyntaxException  	67	1	replace
1229	[BUG]  [BUGGY]  milliseconds  =  -1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  -1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  -1;	  milliseconds    =    0;    milliseconds    =    0;    	compilable	  [FE]  JsonSyntaxException  	67	1	replace
1230	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator  *  10;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneIndicator  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator  *  10;	  milliseconds    =    digits    *    10;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	111	None	replace
1231	[BUG]  [BUGGY]  milliseconds  =  date  *  10;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  date  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  date  *  10;	  milliseconds    =    digits    *    10;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	111	None	replace
1232	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  2  *  1000;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
1233	[BUG]  [BUGGY]  milliseconds  -=  2  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  2  *  1000;	  milliseconds    -=    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
1234	[BUG]  [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  -parseEndOffset);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10,  parseInt(date,  offset,  -parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10,  parseInt(date,  offset,  -parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	32	None	replace
1235	[BUG]  [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  0);  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseBoolean(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseBoolean(date,  offset,  0);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
1236	[BUG]  [BUGGY]  milliseconds  =  0,  parseDouble(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseDouble(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseDouble(date,  offset,  parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseBoolean(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	199	None	replace
1237	[BUG]  [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	196	None	replace
1238	[BUG]  [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	173	None	replace
1239	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	173	None	replace
1240	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.getTimezoneIndicator(timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.getTimezoneIndicator(timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	173	None	replace
1241	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1L;	  milliseconds    -=    1;    	compilable	  [FE]  JsonSyntaxException  	43	1	replace
1242	[BUG]  [BUGGY]  milliseconds  -=  1L;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1L;	  milliseconds    -=    1;    	compilable	  [FE]  JsonSyntaxException  	43	1	replace
1243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
1244	[BUG]  [BUGGY]  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
1245	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
1246	[BUG]  [BUGGY]  milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
1247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  100;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
1248	[BUG]  [BUGGY]  milliseconds  =  100;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  AssertionFailedError  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  AssertionFailedError  	24	1	replace
1249	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  endOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
1250	[BUG]  [BUGGY]  milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  endOffset));  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  pos.setIndex(parseInt(date,  offset,  endOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
1251	[BUG]  [BUGGY]  milliseconds  =  0l;  [CE]  possible  loss  of  precision  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0l;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0l;	  milliseconds    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	39	None	replace
1252	[BUG]  [BUGGY]  milliseconds  =  0F;  [CE]  possible  loss  of  precision  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0F;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0F;	  milliseconds    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	39	None	replace
1253	[BUG]  [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
1254	[BUG]  [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
1255	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getTimeInstance(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getTimeInstance(timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getTimeInstance(timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	195	None	replace
1256	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
1257	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  4;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1258	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1259	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  parseInt(date,  offset,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
1260	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	150	None	add
1261	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  minutes  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        milliseconds    -=    fraction;    minutes  -=  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
1262	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  minutes  -=  fraction;  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  minutes  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    minutes  -=  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
1263	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1264	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1265	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	20	None	add
1266	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	20	None	add
1267	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	20	None	add
1268	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	20	None	add
1269	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseSecondOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseSecondOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseSecondOffset);	          int    endOffset    =    parseInt(date,    offset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	130	None	replace
1270	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset  -  offset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseEndOffset  -  offset);	          int    endOffset    =    parseInt(date,    offset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	130	None	replace
1271	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseLenient);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseLenient);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseLenient);	          int    endOffset    =    parseInt(date,    offset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	130	None	replace
1272	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  timezoneSeconds  =  fraction  *  10;  [CE]  cannot  find  symbol  timezoneSeconds  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  timezoneSeconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  timezoneSeconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  timezoneSeconds	178	None	replace
1273	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  minSeconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minSeconds  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  minSeconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  minSeconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  minSeconds	178	None	replace
1274	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	178	None	replace
1275	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  minutes  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  10;  minutes  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	178	1	replace
1276	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  minutes  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  minutes  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  minutes  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	178	1	replace
1277	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  offset  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  10;  offset  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	178	1	replace
1278	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  offset  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  offset  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  offset  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	178	1	replace
1279	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	136	None	replace
1280	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  int  date  =  parseInt(date,  offset,  endOffset);  [CE]  variable  date  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  int  date  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    int  date  =  parseInt(date,  offset,  endOffset);	  	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String,ParsePosition)	89	None	add
1281	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  pos,  endOffset);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseInt(date,  pos,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseInt(date,  pos,  endOffset);	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	89	None	add
1282	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
1283	[BUG]  [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
1284	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytes);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  bytes);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  bytes);	  int    endOffset    =    parseInt(date,    offset,    milliseconds);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
1285	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  endOffset  -  1);	  parseInt(date,    offset,    endOffset);    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
1286	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset  -  1);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset  -  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset  -  1);	  parseInt(date,    offset,    endOffset);    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
1287	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  len);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  len);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  len);	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
1288	[BUG]  [BUGGY]  milliseconds  =  10;  Milliseconds  =  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  Milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  Milliseconds  =  100;	  milliseconds    =    100;    Milliseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	99	None	replace
1289	[BUG]  [BUGGY]  milliseconds  =  0;  Milliseconds  =  0;  [CE]  cannot  find  symbol  Milliseconds  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  Milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  Milliseconds  =  0;	  milliseconds    =    100;    Milliseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	99	None	replace
1290	[BUG]  [BUGGY]  milliseconds  =  999;  Milliseconds  =  999;  [CE]  cannot  find  symbol  Milliseconds  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  Milliseconds  =  999;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  999;  Milliseconds  =  999;	  milliseconds    =    100;    Milliseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	99	None	replace
1291	[BUG]  [BUGGY]  milliseconds  =  1;  Milliseconds  =  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  Milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  Milliseconds  =  100;	  milliseconds    =    100;    Milliseconds    =    100;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	99	None	replace
1292	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  offset;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  offset;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
1293	[BUG]  [BUGGY]  milliseconds  -=  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  offset;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  offset;	  milliseconds    -=    fraction;    parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
1294	[BUG]  [BUGGY]  milliseconds  =  length  *  1000;  [CE]  cannot  find  symbol  length  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  length  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  1000;	  milliseconds    =    fraction    *    1000;    	non-compiled	[CE]  cannot  find  symbol  length	115	None	replace
1295	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	162	None	replace
1296	[BUG]  [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	162	None	replace
1297	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  1000L;  [CE]  possible  loss  of  precision  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  1000;  milliseconds  =  fraction  *  1000L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    1000;    milliseconds  =  fraction  *  1000L;	  	non-compiled	[CE]  possible  loss  of  precision	114	None	add
1298	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -offset);  break;  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -offset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  -offset);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
1299	[BUG]  [BUGGY]  milliseconds  =  this.milliseconds  +  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  this.milliseconds  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.milliseconds  +  1;	  milliseconds    =    this.milliseconds;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	176	None	replace
1300	[BUG]  [BUGGY]  milliseconds  =  JsonNull.createJsonNull();  [CE]  cannot  find  symbol  JsonNull  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  JsonNull.createJsonNull();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  JsonNull.createJsonNull();	  milliseconds    =    this.milliseconds;    	non-compiled	[CE]  cannot  find  symbol  JsonNull	176	None	replace
1301	[BUG]  [BUGGY]  milliseconds  -=  100;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  100;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    parseFloat(date,  offset,  endOffset);  milliseconds  -=  100;	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
1302	[BUG]  [BUGGY]  milliseconds  -=  100;  parseFloat(date,  offset,  pos);  milliseconds  -=  100;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseFloat(date,  offset,  pos);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    parseFloat(date,  offset,  pos);  milliseconds  -=  100;	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
1303	[BUG]  [BUGGY]  milliseconds  -=  100;  parseInt(date,  pos,  offset);  milliseconds  -=  100;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  parseInt(date,  pos,  offset);  milliseconds  -=  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    parseInt(date,  pos,  offset);  milliseconds  -=  100;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	50	None	add
1304	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;  minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    1000;    minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	127	None	add
1305	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1306	[BUG]  [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1307	[BUG]  [BUGGY]  parseInt(date,  offset,  digits);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  digits  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  digits);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  digits);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol  digits	10	None	replace
1308	[BUG]  [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  endOffset;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1309	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1310	[BUG]  [BUGGY]  parseInt(date,  offset,  digits);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  digits  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  digits);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  digits);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol  digits	3	None	replace
1311	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0,  milliseconds  =  0;  milliseconds  =  0;  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  0,  milliseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    milliseconds  =  0,  milliseconds  =  0;  milliseconds  =  0;	  	non-compiled	[CE]  ';'  expected	66	None	add
1312	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  0);  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  0);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
1313	[BUG]  [BUGGY]  milliseconds  =  1,  len  =  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1,  len  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1,  len  =  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
1314	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  -offset);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  parseInt(date,  offset,  -offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  parseInt(date,  offset,  -offset);	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
1315	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos.getOffset());  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  pos.getOffset());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  pos.getOffset());	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
1316	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  startOffset  -  offset);  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  startOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  startOffset  -  offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
1317	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  2;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
1318	[BUG]  [BUGGY]  milliseconds  -=  2;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  2;  parseInt(date,  offset,  endOffset);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
1319	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
1320	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
1321	[BUG]  [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
1322	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  startOffset);  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  startOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  startOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
1323	[BUG]  [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1,  parseInt(date,  offset,  parseStartOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
1324	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  10;  break;	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	166	1	replace
1325	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  break;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  break;	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	166	1	replace
1326	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  minutes  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    /    10;    minutes  =  fraction  /  10;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1327	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  minutes  =  fraction  /  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  minutes  =  fraction  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    minutes  =  fraction  /  10;	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1328	[BUG]  [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	194	None	replace
1329	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    int  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  'catch'  without  'try'	80	None	add
1330	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  'catch'  without  'try'	80	None	add
1331	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
1332	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  digits   ");  }  if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    if(offset  ==  endOffset)  {  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
1333	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseInt(date,  offset),  endOffset);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseInt(date,  offset),  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseInt(date,  offset),  endOffset);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	147	None	replace
1334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  offset  *  2;	  milliseconds    =    offset    *    10;    	compilable	  [FE]  AssertionFailedError  	155	1	replace
1335	[BUG]  [BUGGY]  milliseconds  =  offset  *  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  offset  *  2;	  milliseconds    =    offset    *    10;    	compilable	  [FE]  AssertionFailedError  	155	1	replace
1336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1000;  milliseconds  =  1;	  milliseconds    =    1000;    milliseconds    =    10;    	compilable	  [FE]  AssertionFailedError  	65	1	replace
1337	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  1;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  milliseconds  =  1;	  milliseconds    =    1000;    milliseconds    =    10;    	compilable	  [FE]  AssertionFailedError  	65	1	replace
1338	[BUG]  [BUGGY]  milliseconds  =  length  *  2;  [CE]  cannot  find  symbol  length  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  length  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  2;	  milliseconds    =    length    *    10;    	non-compiled	[CE]  cannot  find  symbol  length	192	None	replace
1339	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseInteger  date  =  parseInt(date,  endOffset,  milliseconds);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  ParseInteger  date  =  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    ParseInteger  date  =  parseInt(date,  endOffset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
1340	[BUG]  [BUGGY]  milliseconds  -=  10;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  10;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  10;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  10;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1341	[BUG]  [BUGGY]  milliseconds  -=  2;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  2;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  2;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1342	[BUG]  [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;  parseFloat(date,  offset,  endOffset);	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1343	[BUG]  [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	156	None	replace
1344	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	156	None	replace
1345	[BUG]  [BUGGY]  milliseconds  =  UTC_ID,  pos;  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID,  pos;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID,  pos;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  ';'  expected	141	None	replace
1346	[BUG]  [BUGGY]  milliseconds  =  UTC_ID,  act;  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID,  act;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID,  act;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  ';'  expected	141	None	replace
1347	[BUG]  [BUGGY]  milliseconds  =  UTC_ID  +  2;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID  +  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID  +  2;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  incompatible  types	141	None	replace
1348	[BUG]  [BUGGY]  pos.setTimeZone(timeZone);  [CE]  cannot  find  symbol  timeZone  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timeZone);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timeZone);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timeZone	131	None	replace
1349	[BUG]  [BUGGY]  pos.setTimeZone(timezone_UTC);  [CE]  cannot  find  symbol  timezone_UTC  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(timezone_UTC);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(timezone_UTC);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezone_UTC	131	None	replace
1350	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  2000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  2000;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
1351	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  2000;  milliseconds  =  2000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  2000;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  2000;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
1352	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  10;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  10;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
1353	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  10;  milliseconds  =  2000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  2000;  milliseconds  =  10;  milliseconds  =  2000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    2000;    milliseconds  =  10;  milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	190	1	add
1354	[BUG]  [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  DateTimeUtils.currentTimeMillis();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	134	None	replace
1355	[BUG]  [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
1356	[BUG]  [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	134	None	replace
1357	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  minuteSeconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    minuteSeconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	121	None	add
1358	[BUG]  [BUGGY]  milliseconds  -=  2;  parseFloat(date,  offset,  pos);  milliseconds  -=  2;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2;  parseFloat(date,  offset,  pos);  milliseconds  -=  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  2;  parseFloat(date,  offset,  pos);  milliseconds  -=  2;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
1359	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  minutes  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    minutes  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	187	1	add
1360	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  minutes  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  minutes  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    minutes  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	187	1	add
1361	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  pos,  offset);  milliseconds  -=  1000;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  pos,  offset);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  pos,  offset);  milliseconds  -=  1000;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	48	None	add
1362	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  0);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1000;    parseInt(date,  offset,  0);  milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	48	1	add
1363	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  0);  milliseconds  -=  1000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  0);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  offset,  0);  milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	48	1	add
1364	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction    *    1000;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
1365	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
1366	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  1000;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  1000;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	54	None	add
1367	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction  *  1000;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
1368	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction  *  1000;  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction  *  1000;	  	non-compiled	[CE]  ';'  expected	54	None	add
1369	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  1000;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  1000;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
1370	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  1000;  milliseconds  =  200;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  1000;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  1000;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
1371	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;  milliseconds  =  20;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  100;  milliseconds  =  20;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
1372	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;  milliseconds  =  20;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  100;  milliseconds  =  20;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  100;  milliseconds  =  20;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
1373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  4  +  1;	  milliseconds    =    fraction    *    4;    	compilable	  [FE]  AssertionFailedError  	117	1	replace
1374	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4  +  1;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  4  +  1;	  milliseconds    =    fraction    *    4;    	compilable	  [FE]  AssertionFailedError  	117	1	replace
1375	[BUG]  [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  pos);  milliseconds  -=  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  pos);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    parseInt(date,  offset,  pos);  milliseconds  -=  0;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	182	None	add
1376	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  0);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    0;    parseInt(date,  offset,  0);  milliseconds  -=  0;	  	compilable	  [FE]  JsonSyntaxException  	182	1	add
1377	[BUG]  [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  0);  milliseconds  -=  0;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  0);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    parseInt(date,  offset,  0);  milliseconds  -=  0;	  	compilable	  [FE]  JsonSyntaxException  	182	1	add
1378	[BUG]  [BUGGY]  milliseconds  -=  0;  int  milliseconds  -=  0;  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  int  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    int  milliseconds  -=  0;	  	non-compiled	[CE]  ';'  expected	182	None	add
1379	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  endOffset);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    0;    parseInt(date,  offset,  endOffset);  milliseconds  -=  0;	  	compilable	  [FE]  JsonSyntaxException  	182	1	add
1380	[BUG]  [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  endOffset);  milliseconds  -=  0;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  offset,  endOffset);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    parseInt(date,  offset,  endOffset);  milliseconds  -=  0;	  	compilable	  [FE]  JsonSyntaxException  	182	1	add
1381	[BUG]  [BUGGY]  milliseconds  -=  0;  parseInt(date,  pos,  offset);  milliseconds  -=  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  pos,  offset);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    parseInt(date,  pos,  offset);  milliseconds  -=  0;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	182	None	add
1382	[BUG]  [BUGGY]  milliseconds  -=  0;  Milliseconds  -=  0;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  Milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    Milliseconds  -=  0;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	182	None	add
1383	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
1384	[BUG]  [BUGGY]  milliseconds  =  1;  Milliseconds  =  1;  [CE]  cannot  find  symbol  Milliseconds  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  Milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  Milliseconds  =  1;	  milliseconds    =    1000;    Milliseconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	59	None	replace
1385	[BUG]  [BUGGY]  milliseconds  =  10;  Milliseconds  =  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  Milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  Milliseconds  =  10;	  milliseconds    =    1000;    Milliseconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	59	None	replace
1386	[BUG]  [BUGGY]  milliseconds  =  2;  Milliseconds  =  3;  [CE]  cannot  find  symbol  Milliseconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  Milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  Milliseconds  =  3;	  milliseconds    =    1000;    Milliseconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	59	None	replace
1387	[BUG]  [BUGGY]  milliseconds  =  2;  Milliseconds  =  2;  [CE]  cannot  find  symbol  Milliseconds  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  Milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  Milliseconds  =  2;	  milliseconds    =    1000;    Milliseconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	59	None	replace
1388	[BUG]  [BUGGY]  milliseconds  =  TimeZone.getInstance(timezoneIndicator,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.getInstance(timezoneIndicator,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.getInstance(timezoneIndicator,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	171	None	replace
1389	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	78	None	add
1390	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	78	None	add
1391	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone  [CE]  unclosed  string  literal  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    int  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone	  	non-compiled	[CE]  unclosed  string  literal	78	None	add
1392	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  2  +  1;	  milliseconds    -=    2;    	compilable	  [FE]  JsonSyntaxException  	47	1	replace
1393	[BUG]  [BUGGY]  milliseconds  -=  2  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  2  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  2  +  1;	  milliseconds    -=    2;    	compilable	  [FE]  JsonSyntaxException  	47	1	replace
1394	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  2;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1395	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  2;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1396	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  10  +  1;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1397	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  10  +  1;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1398	[BUG]  [BUGGY]  milliseconds  =  digits  *  10;  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  digits  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  10;  Milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  10;  Milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    Milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  digits	125	None	replace
1399	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  Milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  10;  Milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    Milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	125	None	replace
1400	[BUG]  [BUGGY]  milliseconds  =  length  *  10;  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  length  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  length  *  10;  Milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  10;  Milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    Milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  length	125	None	replace
1401	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  Milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  2;  Milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    Milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	125	None	replace
1402	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  byseEndOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  byseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  byseEndOffset);	          int    endOffset    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	129	None	replace
1403	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  1000;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  1000;	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
1404	[BUG]  [BUGGY]  milliseconds  -=  1000;  parseInt(date,  pos);  milliseconds  -=  1000;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1000;  parseInt(date,  pos);  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1000;    parseInt(date,  pos);  milliseconds  -=  1000;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	48	None	add
1405	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  10;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  /  10;  milliseconds  =  fraction  /  10;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    /    10;    milliseconds  =  fraction  /  10;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	105	None	add
1406	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2  -  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  2  -  1;	  milliseconds    =    fraction    *    2;    	compilable	  [FE]  JsonSyntaxException  	108	1	replace
1407	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2  -  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  2  -  1;	  milliseconds    =    fraction    *    2;    	compilable	  [FE]  JsonSyntaxException  	108	1	replace
1408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  90;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  90;	  milliseconds    =    100;    minuteseconds    =    100;    	compilable	  [FE]  AssertionFailedError  	102	1	replace
1409	[BUG]  [BUGGY]  milliseconds  =  90;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  90;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  90;	  milliseconds    =    100;    minuteseconds    =    100;    	compilable	  [FE]  AssertionFailedError  	102	1	replace
1410	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  0);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  0);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	163	None	replace
1411	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    endOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	163	None	replace
1412	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
1413	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  0);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  0);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getDate(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
1414	[BUG]  [BUGGY]  parseInt(date,  offset,  pos,  milliseconds);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos,  milliseconds);	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	9	None	replace
1415	[BUG]  [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  10;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  10;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	9	None	replace
1416	[BUG]  [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  100;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  pos);  milliseconds  -=  fraction  *  100;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	9	None	replace
1417	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  this.minuteSeconds  =  fraction  *  10;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  this.minuteSeconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  this.minuteSeconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	178	None	replace
1418	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  pos.setMillis(milliseconds);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  pos.setMillis(milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  pos.setMillis(milliseconds);	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1419	[BUG]  [BUGGY]  milliseconds  =  digits  *  10;  minuteSeconds  =  fraction  *  10;  [CE]  cannot  find  symbol  digits  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  10;  minuteSeconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  10;  minuteSeconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  digits	178	None	replace
1420	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  this.minutes  =  fraction  *  10;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  this.minutes  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  this.minutes  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    minuteSeconds    =    fraction    *    10;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	178	None	replace
1421	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  endOffset);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	172	None	replace
1422	[BUG]  [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset,  pos);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset,  pos);	  milliseconds    =    10;    milliseconds    =    10;    pos    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	33	None	replace
1423	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	146	None	replace
1424	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	146	None	replace
1425	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  ';'  expected	26	None	replace
1426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1427	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)-  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)-  1;	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1429	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)-  1;  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)-  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)-  1;	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)+  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)+  1;	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1431	[BUG]  [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)+  1;  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)+  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(parseEndOffset,  parseEndOffset)+  1;	  milliseconds    =    1;    milliseconds    =    1;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
1432	[BUG]  [BUGGY]  milliseconds  =  10;  minuteSeconds  =  10;  [CE]  cannot  find  symbol  minuteSeconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  minuteSeconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  minuteSeconds  =  10;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
1433	[BUG]  [BUGGY]  milliseconds  =  1;  minuteSeconds  =  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  minuteSeconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  minuteSeconds  =  1000;	  milliseconds    =    1000;    minuteSeconds    =    1000;    	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	60	None	replace
1434	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
1435	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    2;    milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	40	None	add
1436	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  pos);  [CE]  no  suitable  method  found  for  min(int,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  milliseconds  =  Math.min(milliseconds,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    parseEndOffset);    milliseconds  =  Math.min(milliseconds,  pos);	  	non-compiled	[CE]  no  suitable  method  found  for  min(int,ParsePosition)	13	None	add
1437	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  1000000);  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000000;  milliseconds  =  1000;  milliseconds  =  1000000);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000000;    milliseconds  =  1000;  milliseconds  =  1000000);	  	non-compiled	[CE]  ';'  expected	164	None	add
1438	[BUG]  [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  parseInt(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	39	None	replace
1439	[BUG]  [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_DAY)?  0L  :  parseInt(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_DAY)?  0L  :  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_DAY)?  0L  :  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	39	None	replace
1440	[BUG]  [BUGGY]  milliseconds  =(parseEndOffset  -  offset)?  0L  :  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseEndOffset  -  offset)?  0L  :  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseEndOffset  -  offset)?  0L  :  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0L;    	non-compiled	[CE]  incompatible  types	39	None	replace
1441	[BUG]  [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  milliseconds;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  milliseconds;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  milliseconds;	  milliseconds    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	39	None	replace
1442	[BUG]  [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  parseFloat(date,  offset,  parseEndOffset);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  parseFloat(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_SECOND)?  0L  :  parseFloat(date,  offset,  parseEndOffset);	  milliseconds    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	39	None	replace
1443	[BUG]  [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_DAY)?  0L  :  milliseconds;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_DAY)?  0L  :  milliseconds;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseEndOffset  +  DateTimeConstants.MILLIS_PER_DAY)?  0L  :  milliseconds;	  milliseconds    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	39	None	replace
1444	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
1445	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  milliseconds  =  1;  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    milliseconds  =  1;  milliseconds  =  2;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	23	1	add
1446	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  milliseconds  =  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,    endOffset,    milliseconds);    milliseconds  =  parseInt(date,  endOffset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
1447	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  milliseconds  =  parseInt(date,  endOffset,  milliseconds);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  milliseconds  =  parseInt(date,  endOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    milliseconds  =  parseInt(date,  endOffset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
1448	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  pos.setLength(parseInt(date,  endOffset,  milliseconds));  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  pos.setLength(parseInt(date,  endOffset,  milliseconds));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    pos.setLength(parseInt(date,  endOffset,  milliseconds));	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
1449	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  int  endOffset  =  parseInt(date,  startOffset,  milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  int  endOffset  =  parseInt(date,  startOffset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    int  endOffset  =  parseInt(date,  startOffset,  milliseconds);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	86	None	add
1450	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  pos.setLength(parseInt(date,  endOffset));  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  endOffset,  milliseconds);  pos.setLength(parseInt(date,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    endOffset,    milliseconds);    pos.setLength(parseInt(date,  endOffset));	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	86	None	add
1451	[BUG]  [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseStartOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0,  parseInt(date,  offset,  parseStartOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseStartOffset);    	non-compiled	[CE]  ';'  expected	202	None	replace
1452	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  pos.getMillis());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  pos.getMillis());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  pos.getMillis());	  milliseconds    =    this.milliseconds;    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
1453	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset,  pos);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseEndOffset,  pos);	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	88	None	replace
1454	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  pos);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  pos);	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	158	None	add
1455	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  byseEndOffset);  [CE]  cannot  find  symbol  byseEndOffset  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  byseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  byseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	158	None	add
1456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  day  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  day  *  10;	  milliseconds    =    digits    *    10;    	compilable	  [FE]  AssertionFailedError  	111	1	replace
1457	[BUG]  [BUGGY]  milliseconds  =  day  *  10;  [FE]  AssertionFailedError  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  day  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  day  *  10;	  milliseconds    =    digits    *    10;    	compilable	  [FE]  AssertionFailedError  	111	1	replace
1458	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minuteSeconds  =  Math.min(milliseconds,  fraction);  [CE]  cannot  find  symbol  minuteSeconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  minuteSeconds  =  Math.min(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.min(milliseconds,    fraction);    minuteSeconds  =  Math.min(milliseconds,  fraction);	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	16	None	add
1459	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	173	None	replace
1460	[BUG]  [BUGGY]  milliseconds  =  this.hour;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  this.hour;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.hour;	  milliseconds    =    minute;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	143	None	replace
1461	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  milliseconds  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  milliseconds  /  10;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
1462	[BUG]  [BUGGY]  milliseconds  =  milliseconds  /  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  milliseconds  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  milliseconds  /  10;	  milliseconds    =    fraction    /    10;    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
1463	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  period  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  period  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  period  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  period  *  10;  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  period	121	None	add
1464	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  phase  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  phase  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;  milliseconds  =  phase  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    100;    milliseconds  =  phase  *  10;  milliseconds  =  fraction  *  100;	  	non-compiled	[CE]  cannot  find  symbol  phase	121	None	add
1465	[BUG]  [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  tz);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  tz);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  tz);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	156	None	replace
1466	[BUG]  [BUGGY]  milliseconds  =  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	156	None	replace
1467	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  1;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  1;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	42	None	add
1468	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  1);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    1;    parseInt(date,  offset,  1);  milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
1469	[BUG]  [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  1);  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  1;  parseInt(date,  offset,  1);  milliseconds  -=  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    1;    parseInt(date,  offset,  1);  milliseconds  -=  1;	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
1470	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  pos.setMinuteSeconds(milliseconds);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  10;  pos.setMinuteSeconds(milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  10;  pos.setMinuteSeconds(milliseconds);	  milliseconds    =    fraction    *    10;    minuteS    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
1471	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  11;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  11;	  milliseconds    -=    12;    	compilable	  [FE]  JsonSyntaxException  	140	1	replace
1472	[BUG]  [BUGGY]  milliseconds  -=  11;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  11;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  11;	  milliseconds    -=    12;    	compilable	  [FE]  JsonSyntaxException  	140	1	replace
1473	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  minuteiseconds  =  fraction  *  4;  [CE]  cannot  find  symbol  minuteiseconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  4;  minuteiseconds  =  fraction  *  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    4;    minuteiseconds  =  fraction  *  4;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	116	None	add
1474	[BUG]  [BUGGY]  milliseconds  =  numSeconds  *  10;  [CE]  cannot  find  symbol  numSeconds  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  numSeconds  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  numSeconds  *  10;	  milliseconds    =    offset    *    10;    	non-compiled	[CE]  cannot  find  symbol  numSeconds	155	None	replace
1475	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneIndicator;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	134	None	replace
1476	[BUG]  [BUGGY]  milliseconds  =  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	160	None	replace
1477	[BUG]  [BUGGY]  milliseconds  =  1;  pos.setTimezoneIndicator(DateTimeUtils.currentTimeMillis());  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1;  pos.setTimezoneIndicator(DateTimeUtils.currentTimeMillis());  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1;  pos.setTimezoneIndicator(DateTimeUtils.currentTimeMillis());	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	160	None	replace
1478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseEndOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  parseEndOffset  *  10;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1479	[BUG]  [BUGGY]  milliseconds  =  parseEndOffset  *  10;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseEndOffset  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseEndOffset  *  10;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseEndOffset  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  parseEndOffset  /  10;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1481	[BUG]  [BUGGY]  milliseconds  =  parseEndOffset  /  10;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseEndOffset  /  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseEndOffset  /  10;	  milliseconds    =    endOffset    *    10;    	compilable	  [FE]  AssertionFailedError  	153	1	replace
1482	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneIndicator;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	195	None	replace
1483	[BUG]  [BUGGY]  milliseconds  =  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getTimeInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	195	None	replace
1484	[BUG]  [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
1485	[BUG]  [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
1486	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -parseEndOffset));  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  -parseEndOffset));	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	203	None	replace
1487	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1488	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  100;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  100;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  100;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1489	[BUG]  [BUGGY]  milliseconds  -=  fraction  +  1;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  +  1;  Milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  +  1;  Milliseconds  -=  fraction;	  milliseconds    -=    fraction;    Milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	186	None	replace
1490	[BUG]  [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  [CE]  cannot  find  symbol  Milliseconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    Milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone   ");  }	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	78	None	add
1491	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  pseEndOffset);  [CE]  cannot  find  symbol  pseEndOffset  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  pseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  pseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  pseEndOffset	11	None	add
1492	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  0);	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
1493	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  0);  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  milliseconds  =  Math.max(milliseconds,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    parseEndOffset);    milliseconds  =  Math.max(milliseconds,  0);	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
1494	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  byseEndOffset,  pos);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  byseEndOffset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  byseEndOffset,  pos);	  int    endOffset    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
1495	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  period  *  10;  milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  period  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  period  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  period  *  10;  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  period	119	None	add
1496	[BUG]  [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  percentage  *  10;  milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  percentage  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;  milliseconds  =  percentage  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        fraction        *        10;        milliseconds    =    fraction    *    10;    milliseconds  =  percentage  *  10;  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  percentage	119	None	add
1497	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  2  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  2  +  1;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1498	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  2  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  fraction  *  2;  milliseconds  =  fraction  *  2  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    2;    milliseconds  =  fraction  *  2  +  1;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1499	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  this.timezoneIndicator);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  this.timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  this.timezoneIndicator);	          int    endOffset    =    parseInt(date,    offset,    timezoneIndicator);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	132	None	replace
1500	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1501	[BUG]  [BUGGY]  milliseconds  -=  fraction  +  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  +  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  +  1;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    endOffset);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1502	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  1000;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
1503	[BUG]  [BUGGY]  milliseconds  =  1000;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    1;    milliseconds    =    1;    pos.setIndex(parseInt(date,    offset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
1504	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  4;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1505	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  4;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  4;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1506	[BUG]  [BUGGY]  milliseconds  =  3;  Milliseconds  =  3;  [CE]  cannot  find  symbol  Milliseconds  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  Milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    Milliseconds  =  3;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	91	None	add
1507	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  6;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  6;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1508	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  6;  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  6;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  6;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1509	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  5;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  5;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1510	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  5;  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  5;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  5;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1511	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    3;    milliseconds  =  2;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1512	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  2;  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  2;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
1513	[BUG]  [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  milliseconds  =  3;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    3;    milliseconds  =  3;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	91	None	add
1514	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  11;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  11;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
1515	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  11;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  11;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  11;	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
1516	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  milliseconds  =  offset  *  10;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    offset    *    10;    milliseconds  =  offset  *  10;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	154	None	add
1517	[BUG]  [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
1518	[BUG]  [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  0);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  0);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  0);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    offset,    parseEndOffset);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	137	None	replace
1519	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  pos,  parseEndOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  pos,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  pos,  parseEndOffset);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
1520	[BUG]  [BUGGY]  int  day  =  parseInt(date,  pos,  parseEndOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  pos,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  pos,  parseEndOffset);	          int    day    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	207	None	replace
1521	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  10000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  10000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1522	[BUG]  [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  10000;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1000;    milliseconds  =  1000;  milliseconds  =  10000;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1000;        milliseconds    =    1000;    milliseconds  =  10000;  milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1523	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  ParseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  ParseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  ParseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
1524	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    endOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
1525	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  12;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  12;	  	non-compiled	[CE]  cannot  find  symbol	139	None	add
1526	[BUG]  [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  pos.getOffset()));  milliseconds  -=  12;  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  12;  parseInt(date,  offset,  pos.getOffset()));  milliseconds  -=  12;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    12;    parseInt(date,  offset,  pos.getOffset()));  milliseconds  -=  12;	  	non-compiled	[CE]  ';'  expected	139	None	add
1527	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  pos);  [CE]  no  suitable  method  found  for  max(int,ParsePosition)  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.max(milliseconds,  pos);	  milliseconds    =    Math.max(milliseconds,    parseEndOffset);    	non-compiled	[CE]  no  suitable  method  found  for  max(int,ParsePosition)	12	None	replace
1528	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  minuteS  -=  fraction  *  1000;  [CE]  cannot  find  symbol  minuteS  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  1000;  minuteS  -=  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction    *    1000;    minuteS  -=  fraction  *  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteS	54	None	add
1529	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  int  day  =  parseInt(date,  offset,  endOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  int  day  =  parseInt(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    int  day  =  parseInt(date,  offset,  endOffset);	  	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	89	None	add
1530	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  parseAndIgnoreWhitespace(date,  offset,  endOffset);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  endOffset);  parseAndIgnoreWhitespace(date,  offset,  endOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,    offset,    endOffset);    parseAndIgnoreWhitespace(date,  offset,  endOffset);	  	non-compiled	[CE]  cannot  find  symbol	89	None	add
1531	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos,  parseEndOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos,  parseEndOffset);	  int    endOffset    =    parseInt(date,    offset,    pos);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	82	None	replace
1532	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1533	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  date.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  date.getOffset());  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  parseInt(date,  offset,  date.getOffset());  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseInt(date,    offset,    pos.getOffset());    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1534	[BUG]  [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset);  break;  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
1535	[BUG]  [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset);  break;  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset);  break;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset);  break;	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    break;    	non-compiled	[CE]  ';'  expected	201	None	replace
1536	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1537	[BUG]  [BUGGY]  milliseconds  -=  fraction;  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1538	[BUG]  [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  byseEndOffset));  [CE]  cannot  find  symbol  byseEndOffset  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  byseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  byseEndOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	3	None	replace
1539	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	157	None	replace
1540	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setMillis(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setMillis(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1541	[BUG]  [BUGGY]  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1542	[BUG]  [BUGGY]  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  >=  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1543	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  1;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  1;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  1;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1544	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break    	non-compiled	[CE]  ';'  expected	148	None	replace
1545	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  11;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  11;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
1546	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  11;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  11;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  11;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
1547	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  8;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
1548	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  8;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  endOffset  *  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    endOffset    *    10;    milliseconds  =  endOffset  *  8;	  	compilable	  [FE]  JsonSyntaxException  	152	1	add
1549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  c;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  c;	  milliseconds    =    timezoneIndicator;    	compilable	  [FE]  AssertionFailedError  	142	1	replace
1550	[BUG]  [BUGGY]  milliseconds  =  c;  [FE]  AssertionFailedError  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  c;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  c;	  milliseconds    =    timezoneIndicator;    	compilable	  [FE]  AssertionFailedError  	142	1	replace
1551	[BUG]  [BUGGY]  milliseconds  =  c.timezoneIndicator;  [CE]  char  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  c.timezoneIndicator;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  c.timezoneIndicator;	  milliseconds    =    this.timezoneIndicator;    	non-compiled	[CE]  char  cannot  be  dereferenced	175	None	replace
1552	[BUG]  [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  3;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  3;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    3;    parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  3;	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1553	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  ParseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  ParseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  ParseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
1554	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  endOffset,  byseEndOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  byseEndOffset  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  endOffset,  byseEndOffset);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    endOffset,    parseEndOffset);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  endOffset,  byseEndOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	5	None	add
1555	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  0));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  0));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  0));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
1556	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  -parseEndOffset));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  -parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  -parseEndOffset));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
1557	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  pos));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  pos));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  pos));	  milliseconds    =    10;    milliseconds    =    10,    parseInt(date,    offset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	35	None	replace
1558	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  999;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1559	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  999;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1560	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  2;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1561	[BUG]  [BUGGY]  milliseconds  =  2;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1562	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  100;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1563	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  milliseconds  =  1000000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  milliseconds  =  1000000;	  milliseconds    =    1000;    milliseconds    =    1000000;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
1564	[BUG]  [BUGGY]  milliseconds  =  TimeZone.UTC;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  UTC  [FE]              AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  TimeZone.UTC;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  TimeZone.UTC;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  UTC	34	None	replace
1565	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	128	1	replace
1566	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	128	1	replace
1567	[BUG]  [BUGGY]  milliseconds  =  length  *  10;  milliseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  length  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  length  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  10;  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    1000;    	non-compiled	[CE]  cannot  find  symbol  length	128	None	replace
1568	[BUG]  [BUGGY]  milliseconds  =  digits  *  10;  milliseconds  =  fraction  *  1000;  [CE]  cannot  find  symbol  digits  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  10;  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    1000;    	non-compiled	[CE]  cannot  find  symbol  digits	128	None	replace
1569	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  0;  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	128	1	replace
1570	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0;  milliseconds  =  fraction  *  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0;  milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    1000;    	compilable	  [FE]  JsonSyntaxException  	128	1	replace
1571	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  9;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  9;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
1572	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  9;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  9;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  9;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
1573	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  20;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  20;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
1574	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  20;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  20;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  20;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
1575	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  11;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  11;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
1576	[BUG]  [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  11;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    10;    milliseconds  =  10;  milliseconds  =  11;  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        10;        milliseconds    =    10;    milliseconds  =  11;  milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
1577	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);  pos  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	18	None	add
1578	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.minutes  =  Math.max(milliseconds,  fraction);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  milliseconds  =  Math.max(milliseconds,  fraction);  this.minutes  =  Math.max(milliseconds,  fraction);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    Math.max(milliseconds,    fraction);    milliseconds  =  Math.max(milliseconds,  fraction);  this.minutes  =  Math.max(milliseconds,  fraction);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	add
1579	[BUG]  [BUGGY]  milliseconds  =  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	193	None	replace
1580	[BUG]  [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  100;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  100;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	193	None	replace
1581	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator.getInstance(date,  10);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  timezoneIndicator.getInstance(date,  10);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator.getInstance(date,  10);	  milliseconds    =    10;    milliseconds    =    10;    this.timezoneIndicator    =    TimeZone.getInstance(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	193	None	replace
1582	[BUG]  [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimezoneIndicator(timezoneIndicator);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimezoneIndicator(timezoneIndicator);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	131	None	replace
1583	[BUG]  [BUGGY]  pos.setTimeZone(tz);  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  pos.setTimeZone(tz);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	pos.setTimeZone(tz);	          pos.setTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  tz	131	None	replace
1584	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	159	1	replace
1585	[BUG]  [BUGGY]  milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	159	1	replace
1586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	159	1	replace
1587	[BUG]  [BUGGY]  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	159	1	replace
1588	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	159	1	replace
1589	[BUG]  [BUGGY]  milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);  [FE]  AssertionFailedError  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  3;  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    1;    milliseconds    =    1;    parseInt(date,    offset,    parseEndOffset);    	compilable	  [FE]  AssertionFailedError  	159	1	replace
1590	[BUG]  [BUGGY]  milliseconds  =  new  int[Math.min(milliseconds,  parseEndOffset)];  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  new  int[Math.min(milliseconds,  parseEndOffset)];  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  new  int[Math.min(milliseconds,  parseEndOffset)];	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
1591	[BUG]  [BUGGY]  milliseconds  =  UTC_ID,  act);  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID,  act);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID,  act);	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  ';'  expected	141	None	replace
1592	[BUG]  [BUGGY]  milliseconds  =  UTC_ID  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  UTC_ID  /  2;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID  /  2;	  milliseconds    =    UTC_ID;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	141	None	replace
1593	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
1594	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	147	None	replace
1595	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  offset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	147	None	replace
1596	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " "));  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	147	None	replace
1597	[BUG]  [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset  -  offset);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset  -  offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
1598	[BUG]  [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset  -  offset);  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset  -  offset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1,  parseInt(date,  offset,  parseEndOffset  -  offset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset    -    offset);    	non-compiled	[CE]  ';'  expected	200	None	replace
1599	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100);  milliseconds  =  10;  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  10;  milliseconds  =  100);  milliseconds  =  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    10;    milliseconds  =  100);  milliseconds  =  10;	  	non-compiled	[CE]  ';'  expected	97	None	add
1600	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;  milliseconds  -=  fraction;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;  milliseconds  -=  fraction;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  -=  fraction;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	add
1601	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  +=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  +=  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
1602	[BUG]  [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  +=  fraction;  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    milliseconds  -=  fraction;  milliseconds  +=  fraction;  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        milliseconds    -=    fraction;    milliseconds  +=  fraction;  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
1603	[BUG]  [BUGGY]  milliseconds  =  digits  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  digits  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  digits  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  10;  milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    100;    	non-compiled	[CE]  cannot  find  symbol  digits	122	None	replace
1604	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    100;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1605	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  10;  milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    100;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1606	[BUG]  [BUGGY]  milliseconds  =  length  *  10;  milliseconds  =  fraction  *  100;  [CE]  cannot  find  symbol  length  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  length  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  10;  milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    milliseconds    =    fraction    *    100;    	non-compiled	[CE]  cannot  find  symbol  length	122	None	replace
1607	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  numSeconds);  [CE]  cannot  find  symbol  numSeconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  numSeconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  numSeconds);	  milliseconds    =    Math.max(milliseconds,    fraction);    	non-compiled	[CE]  cannot  find  symbol  numSeconds	19	None	replace
1608	[BUG]  [BUGGY]  int  milliseconds  =  digits  *  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  digits  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  digits  *  10;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
1609	[BUG]  [BUGGY]  int  milliseconds  =  fraction  *  10  +  1;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  fraction  *  10  +  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  fraction  *  10  +  1;	  milliseconds    =    fraction    *    10;    int    milliseconds    =    fraction    *    10;    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	123	None	replace
1610	[BUG]  [BUGGY]  milliseconds  =  4;  Milliseconds  =  4;  [CE]  cannot  find  symbol  Milliseconds  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  Milliseconds  =  4;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    Milliseconds  =  4;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	150	None	add
1611	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  5;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  5;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1612	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  5;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  5;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  5;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1613	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  3;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1614	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  3;  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  3;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  3;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1615	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  6;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  6;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1616	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  6;  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  6;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  6;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1617	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    4;    milliseconds  =  8;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1618	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  8;  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  8;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  8;	  	compilable	  [FE]  JsonSyntaxException  	150	1	add
1619	[BUG]  [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  4;  milliseconds  =  4;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    4;    milliseconds  =  4;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	150	None	add
1620	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  byseEndOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  day  =  parseInt(date,  offset,  byseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  byseEndOffset);	  int    day    =    parseInt(date,    offset,    endOffset);    	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	177	None	replace
1621	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  ParseInt(date,  offset,  0);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  ParseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  ParseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	187	None	add
1622	[BUG]  [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        -=        fraction;        parseInt(date,    offset,    0);    milliseconds    -=    fraction;    milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	187	None	add
1623	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1624	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  100;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1625	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  99;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  99;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1626	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  99;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  99;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  99;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1627	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  10000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  10000;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1628	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  10000;  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  10000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  10000;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1629	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1630	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1631	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  90;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    999;    milliseconds  =  90;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1632	[BUG]  [BUGGY]  milliseconds  =  999;  milliseconds  =  90;  [FE]  JsonSyntaxException  [FE]            AssertionFailedError    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  999;  milliseconds  =  90;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    999;    milliseconds  =  90;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
1633	[BUG]  [BUGGY]  milliseconds  -=  10;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  10;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  10;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	44	None	add
1634	[BUG]  [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  10;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  10;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    10;    parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  10;	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
1635	[BUG]  [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	if(offset  <  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	non-compiled	[CE]  'catch'  without  'try'	145	None	replace
1636	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	compilable	  [FE]  JsonSyntaxException  	145	1	replace
1637	[BUG]  [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    switch(endOffset)    {    case    1:    milliseconds    =    0;    break;    }    	compilable	  [FE]  JsonSyntaxException  	145	1	replace
1638	[BUG]  [BUGGY]  milliseconds  -=  fraction;  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1639	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  pos.setLength(parseInt(date,  offset,  endOffset));	  milliseconds    -=    fraction;    parseInt(date,    offset,    milliseconds);    pos.setLength(parseInt(date,    offset,    endOffset));    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1640	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  1);	  parseInt(date,    offset,    endOffset);    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
1641	[BUG]  [BUGGY]  parseInt(date,  offset,  1);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  parseInt(date,  offset,  1);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  1);	  parseInt(date,    offset,    endOffset);    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
1642	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
1643	[BUG]  [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  milliseconds    =    1;    milliseconds    =    1;    this.timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
1644	[BUG]  [BUGGY]  milliseconds  -=  0;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    parseInt(date,  pos,  parseEndOffset);  milliseconds  -=  0;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	182	None	add
1645	[BUG]  [BUGGY]  milliseconds  -=  0;  parseInt(date,  pos);  milliseconds  -=  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0;  parseInt(date,  pos);  milliseconds  -=  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    0;    parseInt(date,  pos);  milliseconds  -=  0;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	182	None	add
1646	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    100;    milliseconds  -=  10;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
1647	[BUG]  [BUGGY]  milliseconds  -=  100;  milliseconds  -=  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  -=  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    milliseconds  -=  10;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
1648	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    100;    milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
1649	[BUG]  [BUGGY]  milliseconds  -=  100;  milliseconds  -=  1000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  -=  1000;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    100;    milliseconds  -=  1000;	  	compilable	  [FE]  JsonSyntaxException  	50	1	add
1650	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minuteiseconds  =  0;  milliseconds  =  0;  [CE]  cannot  find  symbol  minuteiseconds  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  minuteiseconds  =  0;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    minuteiseconds  =  0;  milliseconds  =  0;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	66	None	add
1651	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  1;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        0;        milliseconds    =    0;    milliseconds  =  1;  milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1652	[BUG]  [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  1;  milliseconds  =  0;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    0;    milliseconds  =  0;  milliseconds  =  1;  milliseconds  =  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        0;        milliseconds    =    0;    milliseconds  =  1;  milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1653	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  offset  *  10;  Milliseconds  =  fraction  *  10;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  offset  *  10;  Milliseconds  =  fraction  *  10;	  milliseconds    =    fraction    *    10;    Milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  Milliseconds	125	None	replace
1654	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  100L;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  10;  milliseconds  =  100L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  10;  milliseconds  =  100L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
1655	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  100L;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  1000;  milliseconds  =  100L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  1000;  milliseconds  =  100L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
1656	[BUG]  [BUGGY]  milliseconds  -=  100;  milliseconds  =  100L;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  100;  milliseconds  =  100L;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  100;  milliseconds  =  100L;	  milliseconds    =    100;    milliseconds    =    100L;    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
1657	[BUG]  [BUGGY]  milliseconds  =  0,  len  =  Math.min(parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  len  =  Math.min(parseInt(date,  offset,  parseEndOffset));  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  len  =  Math.min(parseInt(date,  offset,  parseEndOffset));	  milliseconds    =    0;    milliseconds    =    0,    len    =    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	198	None	replace
1658	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  this.milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  endOffset  =  parseInt(date,  offset,  this.milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  this.milliseconds);	  int    endOffset    =    parseInt(date,    offset,    milliseconds);    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
1659	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  50;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  50;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
1660	[BUG]  [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  50;  milliseconds  =  200;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    100;    milliseconds  =  200;  milliseconds  =  50;  milliseconds  =  200;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        100;        milliseconds    =    200;    milliseconds  =  50;  milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	103	1	add
1661	[BUG]  [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0,  parseInt(date,  offset,  parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	197	None	replace
1662	[BUG]  [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -parseEndOffset);  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  0,  parseInt(date,  offset,  -parseEndOffset);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0,  parseInt(date,  offset,  -parseEndOffset);	  milliseconds    =    0;    milliseconds    =    0,    parseInt(date,    offset,    parseEndOffset);    	non-compiled	[CE]  ';'  expected	197	None	replace
1663	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  10;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction  *  10;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  10;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
1664	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseFloat(date,  offset,  pos);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  -=  fraction;  parseFloat(date,  offset,  pos);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction;  parseFloat(date,  offset,  pos);	  milliseconds    -=    fraction;    parseFloat(date,    offset,    pos);    milliseconds    -=    fraction;    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
1665	[BUG]  [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  milliseconds);  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  int  milliseconds  =  parseInt(date,  offset,  milliseconds);  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  milliseconds  =  parseInt(date,  offset,  milliseconds);	  milliseconds    =    0;    if(offset    ==    0)    {    milliseconds    =    0;    }    else    {    int    endOffset    =    parseInt(date,    offset,    endOffset);    startOffset    =    parseInt(date,    offset,    endOffset);    break;    }    	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
1666	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  milliseconds  :  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  milliseconds  :  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)>  0)?  milliseconds  :  0;	  milliseconds    =    0;    milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	67	None	replace
1667	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  parseEndOffset  :  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  parseEndOffset  :  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)>  0)?  parseEndOffset  :  0;	  milliseconds    =    0;    milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	67	None	replace
1668	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  parseInt(date,  offset):  0;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  parseInt(date,  offset):  0;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)>  0)?  parseInt(date,  offset):  0;	  milliseconds    =    0;    milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	67	None	replace
1669	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  milliseconds  :  1;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0)?  milliseconds  :  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)>  0)?  milliseconds  :  1;	  milliseconds    =    0;    milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	67	None	replace
1670	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  0;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  0;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1671	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  0;  milliseconds  =  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  0;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  0;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1672	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  3;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  3;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1673	[BUG]  [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  3;  milliseconds  =  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds    =    1;    milliseconds  =  1;  milliseconds  =  3;  milliseconds  =  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds        =        1;        milliseconds    =    1;    milliseconds  =  3;  milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1674	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset)-  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  parseEndOffset)-  1;	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
1675	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset)-  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:      [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset)-  1;  [BUGGY]      }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset)-  1;	  milliseconds    =    0;    if(offset    ==    endOffset)    {    milliseconds    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
