bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction;    milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
2	[BUG]  [BUGGY]  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
3	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
4	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  milliseconds);  pos.setMillis(parseInt(date,  offset,  endOffset));	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
5	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
6	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  endOffset,  parseEndOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
7	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
8	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
9	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  pos);  milliseconds  -=  fraction;	  	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	16	None	add
10	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  milliseconds);  pos.setLength(parseInt(date,  offset,  endOffset));	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  milliseconds    =    digits;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
12	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [FE]  AssertionFailedError  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.max(milliseconds,  parseEndOffset);	  milliseconds    =    digits;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
13	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  milliseconds    =    digits;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
14	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset);	  milliseconds    =    digits;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
15	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset));  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.min(milliseconds,  parseEndOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  parseEndOffset));	  milliseconds    =    digits;    	non-compiled	[CE]  ';'  expected	5	None	replace
16	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.min(milliseconds,  fraction);	  milliseconds    =    digits;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
17	[BUG]  [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.min(milliseconds,  fraction);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.min(milliseconds,  fraction);	  milliseconds    =    digits;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
18	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  Math.max(milliseconds,  fraction);	  milliseconds    =    digits;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
19	[BUG]  [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  Math.max(milliseconds,  fraction);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  Math.max(milliseconds,  fraction);	  milliseconds    =    digits;    	compilable	  [FE]  JsonSyntaxException  	5	1	replace
20	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1;    milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	3	1	add
21	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;	  	compilable	  [FE]  JsonSyntaxException  	3	1	add
22	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	3	None	add
23	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	3	1	add
24	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  pos.setIndex(parseInt(date,  offset,  parseEndOffset));	  	compilable	  [FE]  JsonSyntaxException  	3	1	add
25	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  	3	None	add
26	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	non-compiled	[CE]  	3	None	add
27	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	non-compiled	[CE]  	3	None	add
28	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  }  else  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	3	None	add
29	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  	non-compiled	[CE]  	3	None	add
30	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    10;    milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	6	1	add
31	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	6	1	add
32	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  ';'  expected	6	None	add
33	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  pos  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	6	None	add
34	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
35	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  ';'  expected	6	None	add
36	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset);  break;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset);  break;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10,  parseInt(date,  offset,  parseEndOffset);  break;	  	non-compiled	[CE]  ';'  expected	6	None	add
37	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
38	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10,  parseInt(date,  offset,  parseStartOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10,  parseInt(date,  offset,  parseStartOffset);	  	non-compiled	[CE]  ';'  expected	6	None	add
39	[BUG]  [BUGGY]  milliseconds  =  0L;  [CE]  possible  loss  of  precision  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0L;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  0L;	  milliseconds    =    0;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  2;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  2;	  milliseconds    =    0;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
41	[BUG]  [BUGGY]  milliseconds  =  2;  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  2;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  2;	  milliseconds    =    0;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
42	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  1;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
43	[BUG]  [BUGGY]  milliseconds  -=  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  1;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
44	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  10;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
45	[BUG]  [BUGGY]  milliseconds  -=  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  10;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
46	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  2;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  2;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
47	[BUG]  [BUGGY]  milliseconds  -=  2;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  2;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  2;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
48	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  1000;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
49	[BUG]  [BUGGY]  milliseconds  -=  1000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  1000;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
50	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  100;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
51	[BUG]  [BUGGY]  milliseconds  -=  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  100;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
52	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  3;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  3;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
53	[BUG]  [BUGGY]  milliseconds  -=  3;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  3;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  3;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
54	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction  *  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  fraction  *  1000;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
55	[BUG]  [BUGGY]  milliseconds  -=  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction  *  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  fraction  *  1000;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
56	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1000;    milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
57	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
58	[BUG]  [BUGGY]  milliseconds  =  1000;  int  milliseconds  =  1000;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  int  milliseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    int  milliseconds  =  1000;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
59	[BUG]  [BUGGY]  milliseconds  =  1000;  Milliseconds  =  1000;  [CE]  cannot  find  symbol  Milliseconds  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  Milliseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    Milliseconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	8	None	add
60	[BUG]  [BUGGY]  milliseconds  =  1000;  minuteSeconds  =  1000;  [CE]  cannot  find  symbol  minuteSeconds  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  minuteSeconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    minuteSeconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	8	None	add
61	[BUG]  [BUGGY]  milliseconds  =  1000;  minuteseconds  =  1000;  [CE]  cannot  find  symbol  minuteseconds  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  minuteseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    minuteseconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	8	None	add
62	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1000;    milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
63	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
64	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1000;    milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
65	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
66	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
67	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0;	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
68	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
69	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
70	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
71	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
72	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
73	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
74	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
75	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
76	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
77	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
78	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
79	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
80	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
81	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  endOffset)  {  milliseconds  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
82	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  int  endOffset  =  parseInt(date,  offset,  pos);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  pos);	      	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
83	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseEndOffset);	      	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
84	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  int  endOffset  =  parseInt(date,  offset,  milliseconds);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  milliseconds);	      	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
85	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  int  endOffset  =  parseInt(date,  offset,  1);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  1);	      	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
86	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  parseInt(date,  endOffset,  milliseconds);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  endOffset,  milliseconds);	      	compilable	  [FE]  JsonSyntaxException  	15	1	replace
87	[BUG]  [BUGGY]  parseInt(date,  endOffset,  milliseconds);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  parseInt(date,  endOffset,  milliseconds);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  endOffset,  milliseconds);	      	compilable	  [FE]  JsonSyntaxException  	15	1	replace
88	[BUG]  [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  break;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  endOffset  =  parseInt(date,  offset,  parseEndOffset);  break;	      	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
89	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  parseInt(date,  offset,  endOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	parseInt(date,  offset,  endOffset);	      	compilable	  [FE]  JsonSyntaxException  	15	1	replace
90	[BUG]  [BUGGY]  parseInt(date,  offset,  endOffset);  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  parseInt(date,  offset,  endOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	parseInt(date,  offset,  endOffset);	      	compilable	  [FE]  JsonSyntaxException  	15	1	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  3;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  3;	  milliseconds    =    10;    	compilable	  [FE]  AssertionFailedError  	7	1	replace
92	[BUG]  [BUGGY]  milliseconds  =  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  3;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  3;	  milliseconds    =    10;    	compilable	  [FE]  AssertionFailedError  	7	1	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  999;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  999;	  milliseconds    =    100;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
94	[BUG]  [BUGGY]  milliseconds  =  999;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  999;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  999;	  milliseconds    =    100;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
95	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    100;    milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
96	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  100;  [FE]  JsonSyntaxException  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    milliseconds  =  100;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
97	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    100;    milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
98	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  10;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    milliseconds  =  10;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
99	[BUG]  [BUGGY]  milliseconds  =  100;  Milliseconds  =  100;  [CE]  cannot  find  symbol  Milliseconds  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  Milliseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    Milliseconds  =  100;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	10	None	add
100	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    100;    milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
101	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  1000;  [FE]  JsonSyntaxException  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    milliseconds  =  1000;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
102	[BUG]  [BUGGY]  milliseconds  =  100;  minuteseconds  =  100;  [CE]  cannot  find  symbol  minuteseconds  [FE]            AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  minuteseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    minuteseconds  =  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	10	None	add
103	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  200;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    100;    milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
104	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  200;  [FE]  JsonSyntaxException  [FE]              AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  200;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    milliseconds  =  200;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
105	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  /  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  /  10;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
106	[BUG]  [BUGGY]  milliseconds  =  fraction  /  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  /  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  /  10;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
107	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  2;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  2;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
108	[BUG]  [BUGGY]  milliseconds  =  fraction  *  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  2;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  2;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
109	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  1;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  1;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
110	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  1;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  1;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
111	[BUG]  [BUGGY]  milliseconds  =  digits  *  10;  [CE]  cannot  find  symbol  digits  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  digits  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  digits  *  10;	  milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  digits	13	None	replace
112	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
113	[BUG]  [BUGGY]  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  100;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
114	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
115	[BUG]  [BUGGY]  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  1000;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
116	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  4;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  fraction  *  4;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
117	[BUG]  [BUGGY]  milliseconds  =  fraction  *  4;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  4;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  fraction  *  4;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  JsonSyntaxException  	13	1	replace
118	[BUG]  [BUGGY]      int  endOffset  =  parseInt(date,  offset,  0);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      int  endOffset  =  parseInt(date,  offset,  0);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        int  endOffset  =  parseInt(date,  offset,  0);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
119	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
120	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  10;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
121	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
122	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  100;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
123	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  int  milliseconds  =  fraction  *  10;  [CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  int  milliseconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    int  milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
124	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  minuteseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteseconds  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  minuteseconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    minuteseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteseconds	12	None	add
125	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  Milliseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  Milliseconds  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  Milliseconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    Milliseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	12	None	add
126	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  minuteiseconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteiseconds  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  minuteiseconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    minuteiseconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	12	None	add
127	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
128	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  milliseconds  =  fraction  *  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    milliseconds  =  fraction  *  1000;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
129	[BUG]  [BUGGY]      int  endOffset  =  parseInt(date,  offset,  endOffset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      int  endOffset  =  parseInt(date,  offset,  endOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        int  endOffset  =  parseInt(date,  offset,  endOffset);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
130	[BUG]  [BUGGY]      int  endOffset  =  parseInt(date,  offset);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      int  endOffset  =  parseInt(date,  offset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        int  endOffset  =  parseInt(date,  offset);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
131	[BUG]  [BUGGY]      pos.setTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      pos.setTimeZone(timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        pos.setTimeZone(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
132	[BUG]  [BUGGY]      int  endOffset  =  parseInt(date,  offset,  timezoneIndicator);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      int  endOffset  =  parseInt(date,  offset,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        int  endOffset  =  parseInt(date,  offset,  timezoneIndicator);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
133	[BUG]  [BUGGY]      int  endOffset  =  parseInt(date,  offset,  endOffset);  break;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      int  endOffset  =  parseInt(date,  offset,  endOffset);  break;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        int  endOffset  =  parseInt(date,  offset,  endOffset);  break;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
134	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
135	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
136	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
137	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
138	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  100L;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  100L;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    milliseconds  =  100L;	  	non-compiled	[CE]  possible  loss  of  precision	10	None	add
139	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  12;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  12;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
140	[BUG]  [BUGGY]  milliseconds  -=  12;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  12;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  12;	  milliseconds    -=    fraction;    	compilable	  [FE]  JsonSyntaxException  	17	1	replace
141	[BUG]  [BUGGY]  milliseconds  =  UTC_ID;  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  UTC_ID;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  UTC_ID;	  milliseconds    =    digits;    	non-compiled	[CE]  incompatible  types	5	None	replace
142	[BUG]  [BUGGY]  milliseconds  =  timezoneIndicator;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  timezoneIndicator;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  timezoneIndicator;	  milliseconds    =    digits;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	5	None	replace
143	[BUG]  [BUGGY]  milliseconds  =  minute;  [CE]  cannot  find  symbol  minute  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  minute;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  minute;	  milliseconds    =    digits;    	non-compiled	[CE]  cannot  find  symbol  minute	5	None	replace
144	[BUG]  [BUGGY]  milliseconds  =  length;  [CE]  cannot  find  symbol  length  [FE]                  JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  length;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length;	  milliseconds    =    digits;    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
145	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
146	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
147	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
148	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  switch(endOffset)  {  case  1:  milliseconds  =  0;  break	  	non-compiled	[CE]  ';'  expected	1	None	add
149	[BUG]  [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  }  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    if(offset  ==  0)  {  milliseconds  =  0;  }  else  {  int  endOffset  =  parseInt(date,  offset,  endOffset);  startOffset  =  parseInt(date,  offset,  endOffset);  break;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	1	None	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  4;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  4;	  milliseconds    =    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
151	[BUG]  [BUGGY]  milliseconds  =  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  4;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  4;	  milliseconds    =    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  endOffset  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  endOffset  *  10;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
153	[BUG]  [BUGGY]  milliseconds  =  endOffset  *  10;  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  endOffset  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  endOffset  *  10;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  offset  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  =  offset  *  10;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
155	[BUG]  [BUGGY]  milliseconds  =  offset  *  10;  [FE]  AssertionFailedError  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  offset  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  offset  *  10;	  milliseconds    =    fraction    *    10;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
156	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
157	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
158	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	3	1	add
159	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  parseInt(date,  offset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	3	1	add
160	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
161	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
162	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  offset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
163	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getDate(date,  offset,  endOffset);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
164	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1000;    milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
165	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  1000000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  1000000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    milliseconds  =  1000000;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
166	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  minuteS  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteS  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  minuteS  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    minuteS  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteS	12	None	add
167	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseFloat(date,  offset,  endOffset);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
168	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseFloat(date,  offset,  pos);  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
169	[BUG]  [BUGGY]  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  int  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    int  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	16	None	add
170	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  endOffset));  milliseconds  -=  fraction;	  	non-compiled	[CE]  ';'  expected	16	None	add
171	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
172	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
173	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
174	[BUG]  [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1;  milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1;    milliseconds  =  1;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	add
175	[BUG]  [BUGGY]  milliseconds  =  this.timezoneIndicator;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  this.timezoneIndicator;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.timezoneIndicator;	  milliseconds    =    digits;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	5	None	replace
176	[BUG]  [BUGGY]  milliseconds  =  this.milliseconds;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  this.milliseconds;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  this.milliseconds;	  milliseconds    =    digits;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	5	None	replace
177	[BUG]  [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  int  day  =  parseInt(date,  offset,  endOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	int  day  =  parseInt(date,  offset,  endOffset);	      	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	15	None	replace
178	[BUG]  [BUGGY]  milliseconds  =  fraction  *  10;  minuteSeconds  =  fraction  *  10;  [CE]  cannot  find  symbol  minuteSeconds  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  fraction  *  10;  minuteSeconds  =  fraction  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    fraction    *    10;    minuteSeconds  =  fraction  *  10;	  	non-compiled	[CE]  cannot  find  symbol  minuteSeconds	12	None	add
179	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)-  0);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =(parseInt(date,  offset)-  0);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)-  0);	  milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	2	None	replace
180	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)+  1);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =(parseInt(date,  offset)+  1);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)+  1);	  milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	2	None	replace
181	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =(parseInt(date,  offset)>  0);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)>  0);	  milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	2	None	replace
182	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  0;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds  -=  0;	  milliseconds    =    0;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
183	[BUG]  [BUGGY]  milliseconds  -=  0;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  0;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  -=  0;	  milliseconds    =    0;    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
184	[BUG]  [BUGGY]  milliseconds  =(parseInt(date,  offset)-  1);  [CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =(parseInt(date,  offset)-  1);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =(parseInt(date,  offset)-  1);	  milliseconds    =    0;    	non-compiled	[CE]  method  parseInt  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	2	None	replace
185	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  pos.getOffset());  milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
186	[BUG]  [BUGGY]  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  [CE]  cannot  find  symbol  Milliseconds  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  Milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    Milliseconds  -=  fraction;	  	non-compiled	[CE]  cannot  find  symbol  Milliseconds	16	None	add
187	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
188	[BUG]  [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  -=  fraction;  parseInt(date,  offset,  0);  milliseconds  -=  fraction;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    -=    fraction;    parseInt(date,  offset,  0);  milliseconds  -=  fraction;	  	compilable	  [FE]  JsonSyntaxException  	16	1	add
189	[BUG]  [BUGGY]  milliseconds  =  1000;  minuteiseconds  =  1000;  [CE]  cannot  find  symbol  minuteiseconds  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  minuteiseconds  =  1000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    minuteiseconds  =  1000;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	8	None	add
190	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  2000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    1000;    milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
191	[BUG]  [BUGGY]  milliseconds  =  1000;  milliseconds  =  2000;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  1000;  milliseconds  =  2000;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    1000;    milliseconds  =  2000;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
192	[BUG]  [BUGGY]  milliseconds  =  length  *  10;  [CE]  cannot  find  symbol  length  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  length  *  10;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds  =  length  *  10;	  milliseconds    =    fraction    *    10;    	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
193	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getInstance(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
194	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
195	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  TimeZone.getTimeInstance(date,  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
196	[BUG]  [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  10;  milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    10;    milliseconds  =  10;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	6	None	add
197	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  ';'  expected	1	None	add
198	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  len  =  parseInt(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  ';'  expected	1	None	add
199	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset);  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  parseBoolean(date,  offset,  parseEndOffset);	  	non-compiled	[CE]  ';'  expected	1	None	add
200	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset  -  offset);  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset  -  offset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset  -  offset);	  	non-compiled	[CE]  ';'  expected	1	None	add
201	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  break;  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  break;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset);  break;	  	non-compiled	[CE]  ';'  expected	1	None	add
202	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseStartOffset);  [CE]  ';'  expected  [FE]              JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseStartOffset);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  parseInt(date,  offset,  parseStartOffset);	  	non-compiled	[CE]  ';'  expected	1	None	add
203	[BUG]  [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset));  [CE]  ';'  expected  [FE]                JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  0;  milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset));  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    0;    milliseconds  =  0,  parseInt(date,  offset,  parseEndOffset));	  	non-compiled	[CE]  ';'  expected	1	None	add
204	[BUG]  [BUGGY]  milliseconds  =  100;  minuteiseconds  =  100;  [CE]  cannot  find  symbol  minuteiseconds  [FE]    AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  minuteiseconds  =  100;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    minuteiseconds  =  100;	  	non-compiled	[CE]  cannot  find  symbol  minuteiseconds	10	None	add
205	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  50;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	milliseconds    =    100;    milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
206	[BUG]  [BUGGY]  milliseconds  =  100;  milliseconds  =  50;  [FE]  JsonSyntaxException  [FE]      AssertionFailedError    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]  milliseconds  =  100;  milliseconds  =  50;  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	milliseconds    =    100;    milliseconds  =  50;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
207	[BUG]  [BUGGY]      int  day  =  parseInt(date,  offset,  pos);  [CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]    int  fraction  =  parseInt(date,  offset,  parseEndOffset);  switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:    [BUGGY]      int  day  =  parseInt(date,  offset,  pos);  [BUGGY]    }  offset  =  endOffset;  }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(   "No  time  zone  indicator   ");  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	        int  day  =  parseInt(date,  offset,  pos);	  	non-compiled	[CE]  variable  day  is  already  defined  in  method  parse(String,ParsePosition)	14	None	add
