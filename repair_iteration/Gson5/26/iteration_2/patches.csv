bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "*   "))    {    if  (msg  ==  null  ||  msg.equals(   "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
2	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  if  (msg!=  null  ||  msg.equals(   "*   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  if  (msg!=  null  ||  msg.equals(   "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "*   "))    {    if  (msg!=  null  ||  msg.equals(   "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
3	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  If  (msg  ==  null  ||  msg.equals(   "*   "))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  If  (msg  ==  null  ||  msg.equals(   "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "*   "))    {    If  (msg  ==  null  ||  msg.equals(   "*   "))  {	  	non-compiled	[CE]  	60	None	add
4	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  if  (msg  ==  null  ||  msg.equals( ".*   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "*   "))  {  if  (msg  ==  null  ||  msg.equals( ".*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "*   "))    {    if  (msg  ==  null  ||  msg.equals( ".*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
5	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (input    >=    null    ||    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	25	1	replace
6	[BUG]  [BUGGY]  if(msg  ==  null)  {  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (input    >=    null    ||    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	25	1	replace
7	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null)  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (input    >=    null    ||    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	25	1	replace
8	[BUG]  [BUGGY]  if(msg!=  null)  {  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (input    >=    null    ||    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	25	1	replace
9	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail!=  null  &&  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=    null    &&    msg.isEmpty())    {    if(fail!=  null  &&  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
10	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  ==  null  &&  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  ==  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=    null    &&    msg.isEmpty())    {    if(fail  ==  null  &&  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
11	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  >=  null  &&  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  >=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=    null    &&    msg.isEmpty())    {    if(fail  >=  null  &&  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
12	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  If(fail!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  If(fail!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=    null    &&    msg.isEmpty())    {    If(fail!=  null  &&  msg.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	77	None	add
13	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  >>  null  &&  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  >>  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=    null    &&    msg.isEmpty())    {    if(fail  >>  null  &&  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
14	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  [Delete]  null  &&  msg.isEmpty())  {  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  if(fail  [Delete]  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=    null    &&    msg.isEmpty())    {    if(fail  [Delete]  null  &&  msg.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	77	None	add
15	[BUG]  [BUGGY]  msg  =  msg;  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  msg  =  msg;  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	msg  =  msg;	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
16	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.equals( " ")))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.equals( " ")))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.equals( " ")))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
17	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  '/'))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  '/'))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  '/'))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
18	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  '/')))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  '/')))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  '/')))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
19	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  'n'))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  'n'))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  'n'))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
20	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.length()  >  0))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
21	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  ']'))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  ']'))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.length()  >  0)||(msg.charAt(msg.length()  -  1)!=  ']'))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
22	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(input!=  null  &&  msg.isEmpty())  {	  if(fail!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	78	1	replace
23	[BUG]  [BUGGY]  if(input!=  null  &&  msg.isEmpty())  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null  &&  msg.isEmpty())  {	  if(fail!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	78	1	replace
24	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null  &&!msg.isEmpty())  {	  if(fail!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	78	1	replace
25	[BUG]  [BUGGY]  if(msg!=  null  &&!msg.isEmpty())  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&!msg.isEmpty())  {	  if(fail!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	78	1	replace
26	[BUG]  [BUGGY]  if(input!=  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    msg    =    msg;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
27	[BUG]  [BUGGY]  if(input  ==  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    msg    =    msg;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
28	[BUG]  [BUGGY]  if(msg  ==  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  msg  =  msg;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    msg    =    msg;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
29	[BUG]  [BUGGY]  if(input!=  null)  {  msg  =  msg;  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null)  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null)  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
30	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (input  ==  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
31	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input!=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (input!=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
32	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (input  ==  null  ||  msg.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
33	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  If  (input  ==  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  If  (input  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    If  (input  ==  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
34	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (input  ==  null  ||  msg.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
35	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  >=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (input  >=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (input  >=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
36	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null  &&  msg.length()  >=  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	80	1	replace
37	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >=  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.length()  >=  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	80	1	replace
38	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null  &&  msg.length()  >  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	80	1	replace
39	[BUG]  [BUGGY]  if(msg  ==  null  &&  msg.length()  >  0)  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  &&  msg.length()  >  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	80	1	replace
40	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  <  =  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.length()  <  =  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
41	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
42	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
43	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  If(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  If(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    If(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  	non-compiled	[CE]  ';'  expected	69	None	add
44	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg  >=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg  >=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    if(msg  >=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
45	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg  >>  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg  >>  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    if(msg  >>  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
46	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  output.substring(i);  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  output.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  output.substring(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
47	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    If    (input    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
48	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    If    (input    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
49	[BUG]  [BUGGY]  if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    If    (input    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
50	[BUG]  [BUGGY]  If  (input  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (input  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (input  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    If    (input    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
51	[BUG]  [BUGGY]  if(msg  ==  null)  {  If  (input  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  If  (input  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  If  (input  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    If    (input    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
52	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "+   "))    {    if  (msg  ==  null  ||  msg.equals(   "+   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
53	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  if  (msg!=  null  ||  msg.equals(   "+   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  if  (msg!=  null  ||  msg.equals(   "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "+   "))    {    if  (msg!=  null  ||  msg.equals(   "+   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
54	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  If  (msg  ==  null  ||  msg.equals(   "+   "))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  If  (msg  ==  null  ||  msg.equals(   "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "+   "))    {    If  (msg  ==  null  ||  msg.equals(   "+   "))  {	  	non-compiled	[CE]  	38	None	add
55	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  if  (msg  >=  null  ||  msg.equals(   "+   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals(   "+   "))  {  if  (msg  >=  null  ||  msg.equals(   "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.equals(   "+   "))    {    if  (msg  >=  null  ||  msg.equals(   "+   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
56	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [CE]  '.class'  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  For(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	For(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  '.class'  expected	76	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
58	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  output;  }  [CE]  cannot  find  symbol  output  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  output;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  output;  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  output	76	None	replace
59	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  UTC_ID;  }  [CE]  incompatible  types  [FE]                                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  UTC_ID;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  UTC_ID;  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  incompatible  types	76	None	replace
60	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  +  1);  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  +  1);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()  +  1);	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
61	[BUG]  [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length()  -  1);  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length()  -  1);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =   "[ "  +  msg.substring(0,  msg.length()  -  1);	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
62	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length();  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length();	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  ')'  expected	41	None	replace
63	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length())+  1;  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length())+  1;  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length())+  1;	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
64	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()).trim();  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()).trim();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()).trim();	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
65	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()));  [CE]  ';'  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()));	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  ';'  expected	41	None	replace
66	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals( "+ "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg!=  null  ||  msg.equals( "+ "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
67	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals( "+ "))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals( "+ "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg!=  null  ||  msg.equals( "+ "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
68	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals( "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  &&  msg.equals( "+   "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
69	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals( "+   "))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals( "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  &&  msg.equals( "+   "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
70	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals( "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg!=  null  &&  msg.equals( "+   "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
71	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals( "+   "))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals( "+   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg!=  null  &&  msg.equals( "+   "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
72	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals( "- "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  ||  msg.equals( "- "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
73	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.equals( "- "))  {  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.equals( "- "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  ||  msg.equals( "- "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
74	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(input  ==  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg!=    null    ||    msg.equals(       "       "))    {    	compilable	  [FE]  JsonSyntaxException  	27	1	replace
75	[BUG]  [BUGGY]  if(input  ==  null  ||  msg.equals( "   "))  {  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg!=    null    ||    msg.equals(       "       "))    {    	compilable	  [FE]  JsonSyntaxException  	27	1	replace
76	[BUG]  [BUGGY]  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
77	[BUG]  [BUGGY]  if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
78	[BUG]  [BUGGY]  if(input  ==  null  ||  msg.length()  ==  0)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.length()  ==  0)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  msg.length()  ==  0)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
79	[BUG]  [BUGGY]  if(msg!=  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
80	[BUG]  [BUGGY]  if(input  ==  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {  If  (msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
81	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg!=  null  &&  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg!=  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.equals(   "   "))    {    if  (msg!=  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
82	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg  ==  null  &&  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg  ==  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.equals(   "   "))    {    if  (msg  ==  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
83	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  If  (msg!=  null  &&  msg.equals(   "   "))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  If  (msg!=  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.equals(   "   "))    {    If  (msg!=  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  	9	None	add
84	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg  >=  null  &&  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg  >=  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.equals(   "   "))    {    if  (msg  >=  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
85	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg!=  null  &&  msg.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg!=  null  &&  msg.equals( ".   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.equals(   "   "))    {    if  (msg!=  null  &&  msg.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
86	[BUG]  [BUGGY]  String  msg  =  msg!=  null?  null  :  msg.trim();  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg!=  null?  null  :  msg.trim();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg!=  null?  null  :  msg.trim();	  String    msg    =    msg.trim();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
87	[BUG]  [BUGGY]  String  msg  =  msg  ==  null?  null  :  msg.trim();  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null?  null  :  msg.trim();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null?  null  :  msg.trim();	  String    msg    =    msg.trim();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
88	[BUG]  [BUGGY]  String  msg  =  input.trim();  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  input.trim();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  input.trim();	  String    msg    =    msg.trim();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
89	[BUG]  [BUGGY]  String  msg  =  UTC_ID;  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  UTC_ID;  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  UTC_ID;	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
90	[BUG]  [BUGGY]  String  msg  =  input;  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  input;  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  input;	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
91	[BUG]  [BUGGY]  String  msg  =  null;  [CE]  <identifier>  expected  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  null;  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  null;	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
92	[BUG]  [BUGGY]  if(input!=  null  ||  msg.isEmpty())  {  if(fail  ==  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  ||  msg.isEmpty())  {  if(fail  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null  ||  msg.isEmpty())  {  if(fail  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (fail    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
93	[BUG]  [BUGGY]  if(input  ==  null  ||  msg.isEmpty())  {  if(fail!=  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.isEmpty())  {  if(fail!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  msg.isEmpty())  {  if(fail!=  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (fail    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
94	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg    ==    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
95	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg    ==    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
96	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg    ==    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
97	[BUG]  [BUGGY]  If  (msg  ==  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg    ==    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
98	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  If  (msg  ==  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg    ==    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
99	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg    ==    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
100	[BUG]  [BUGGY]  String  msg  =  input.toLowerCase();  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  input.toLowerCase();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  input.toLowerCase();	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
101	[BUG]  [BUGGY]  String  msg  =  msg.toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toLowerCase(Locale.ENGLISH);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toLowerCase(Locale.ENGLISH);	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
102	[BUG]  [BUGGY]  String  msg  =  msg!=  null?  null  :  msg.toLowerCase();  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg!=  null?  null  :  msg.toLowerCase();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg!=  null?  null  :  msg.toLowerCase();	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
103	[BUG]  [BUGGY]  String  msg  =  msg.toUpperCase();  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toUpperCase();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toUpperCase();	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
104	[BUG]  [BUGGY]  String  msg  =  msg.toLowerCase()  + "n ";  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toLowerCase()  + "n ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toLowerCase()  + "n ";	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
105	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    if  (msg  ==  null  ||  msg.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
106	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg!=  null  ||  msg.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg!=  null  ||  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    if  (msg!=  null  ||  msg.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
107	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    if  (msg  ==  null  ||  msg.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
108	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()  >>  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    if  (msg  ==  null  ||  msg.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
109	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  If  (msg  ==  null  ||  msg.length()!=  0)  {  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  If  (msg  ==  null  ||  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    If  (msg  ==  null  ||  msg.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
110	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  >=  null  ||  msg.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  >=  null  ||  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    if  (msg  >=  null  ||  msg.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
111	[BUG]  [BUGGY]  if(input  ==  null)  {  if(msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  if(msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {  if(msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    ==    null    ||    msg.length()    {    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
112	[BUG]  [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  ==  null  ||!msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  ==  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||!msg.isEmpty())    {    if  (msg  ==  null  ||!msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
113	[BUG]  [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg!=  null  ||!msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg!=  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||!msg.isEmpty())    {    if  (msg!=  null  ||!msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
114	[BUG]  [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  If  (msg  ==  null  ||!msg.isEmpty())  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  If  (msg  ==  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||!msg.isEmpty())    {    If  (msg  ==  null  ||!msg.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	56	None	add
115	[BUG]  [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  >=  null  ||!msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  >=  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||!msg.isEmpty())    {    if  (msg  >=  null  ||!msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
116	[BUG]  [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  ==  null  ||! "msg.isEmpty())  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  ==  null  ||! "msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||!msg.isEmpty())    {    if  (msg  ==  null  ||! "msg.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	56	None	add
117	[BUG]  [BUGGY]  String  msg  =  input.substring(0,  msg.length());  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  input.substring(0,  msg.length());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  input.substring(0,  msg.length());	  String    msg    =    msg.substring(0,    msg.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
118	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  -  3);  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  -  3);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()  -  3);	  String    msg    =    msg.substring(0,    msg.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
119	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  -  4);  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  -  4);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()  -  4);	  String    msg    =    msg.substring(0,    msg.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
120	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input!=  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    if  (input!=  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
121	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  ==  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    if  (input  ==  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
122	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  >=  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  >=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    if  (input  >=  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
123	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  If  (input!=  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  If  (input!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    If  (input!=  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	30	None	add
124	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  >>  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  >>  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    if  (input  >>  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
125	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  [Delete]  null  ||  msg.isEmpty())  {  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (input  [Delete]  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    if  (input  [Delete]  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  ')'  expected	30	None	add
126	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
127	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
128	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
129	[BUG]  [BUGGY]  ||  msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||  msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||  msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
130	[BUG]  [BUGGY]  aught(msg)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  aught(msg)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	aught(msg)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	74	None	replace
131	[BUG]  [BUGGY]  While(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  While(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	While(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	74	None	replace
132	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
133	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
134	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
135	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
136	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
137	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
138	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
139	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
140	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
141	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
142	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [CE]  '.class'  expected  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	non-compiled	[CE]  '.class'  expected	72	None	replace
143	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  ||  msg.length()  >=  0)  {	  if    (msg    ==    null    ||    msg.length()!=    0)    {    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
144	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()  >=  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  ||  msg.length()  >=  0)  {	  if    (msg    ==    null    ||    msg.length()!=    0)    {    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
145	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg!=  null  ||  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg!=  null  ||  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    if  (msg!=  null  ||  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
146	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg  ==  null  ||  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg  ==  null  ||  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    if  (msg  ==  null  ||  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
147	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  If  (msg!=  null  ||  msg.equals(   "   "))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  If  (msg!=  null  ||  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    If  (msg!=  null  ||  msg.equals(   "   "))  {	  	non-compiled	[CE]  	36	None	add
148	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg  >=  null  ||  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg  >=  null  ||  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    if  (msg  >=  null  ||  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
149	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg  >>  null  ||  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg  >>  null  ||  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    if  (msg  >>  null  ||  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
150	[BUG]  [BUGGY]  pos.setIndex(msg);  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(msg);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(msg);	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
151	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(msg));  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(Integer.toHexString(msg));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(Integer.toHexString(msg));	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
152	[BUG]  [BUGGY]  pos.setIndex(input  +  1);  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(input  +  1);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(input  +  1);	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
153	[BUG]  [BUGGY]  pos.setIndex(Integer.parseInt(msg));  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(Integer.parseInt(msg));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(Integer.parseInt(msg));	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
154	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(input));  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(Integer.toHexString(input));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(Integer.toHexString(input));	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
155	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(msg));  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(Integer.toString(msg));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(Integer.toString(msg));	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
156	[BUG]  [BUGGY]  If  (msg  ==  null  ||  msg.equals( "   "))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    If    (msg    ==    null    ||    msg.equals(       "       "))    {    	non-compiled	[CE]  	28	None	replace
157	[BUG]  [BUGGY]  if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.equals( "   "))  {  [CE]  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  If  (msg  ==  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    If    (msg    ==    null    ||    msg.equals(       "       "))    {    	non-compiled	[CE]  	28	None	replace
158	[BUG]  [BUGGY]  String  msg  =  input.toString();  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  input.toString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  input.toString();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
159	[BUG]  [BUGGY]  String  msg  =  msg!=  null?  null  :  msg.toString();  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg!=  null?  null  :  msg.toString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg!=  null?  null  :  msg.toString();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
160	[BUG]  [BUGGY]  String  msg  =  msg.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toString()  + "n ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toString()  + "n ";	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
161	[BUG]  [BUGGY]  String  msg  =  UTC_ID.toString();  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  UTC_ID.toString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  UTC_ID.toString();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
162	[BUG]  [BUGGY]  String  msg  =  msg.toString()  + ": ";  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toString()  + ": ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toString()  + ": ";	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
163	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg!=  null  ||!msg.isEmpty())  {	  if    (msg    ==    null    ||!msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
164	[BUG]  [BUGGY]  if  (msg!=  null  ||!msg.isEmpty())  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg!=  null  ||!msg.isEmpty())  {	  if    (msg    ==    null    ||!msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
165	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  &&!msg.isEmpty())  {	  if    (msg    ==    null    ||!msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
166	[BUG]  [BUGGY]  if  (msg  ==  null  &&!msg.isEmpty())  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  &&!msg.isEmpty())  {	  if    (msg    ==    null    ||!msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
167	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (fail!=  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (fail!=  null  ||!msg.isEmpty())  {	  if    (msg    ==    null    ||!msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
168	[BUG]  [BUGGY]  if  (fail!=  null  ||!msg.isEmpty())  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (fail!=  null  ||!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (fail!=  null  ||!msg.isEmpty())  {	  if    (msg    ==    null    ||!msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
169	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  '.class'  expected  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	non-compiled	[CE]  '.class'  expected	70	None	replace
170	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
171	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
172	[BUG]  [BUGGY]  ||  msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||  msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||  msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
173	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(0,  i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(0,  i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
174	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(0,  i);  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(0,  i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(0,  i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
175	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
176	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(2);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
177	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
178	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
179	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  If(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  If(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    If(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  	non-compiled	[CE]  ';'  expected	71	None	add
180	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg  >=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg  >=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg  >=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
181	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(4);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
182	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input!=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    if  (input!=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
183	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    if  (input  ==  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
184	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input  >=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input  >=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    if  (input  >=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
185	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  If  (input!=  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  If  (input!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    If  (input!=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
186	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input!=  null  ||  msg.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input!=  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    if  (input!=  null  ||  msg.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
187	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input  >>  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (input  >>  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    if  (input  >>  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
188	[BUG]  [BUGGY]  char  msg  =  msg.substring(0,  msg.length());  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  char  msg  =  msg.substring(0,  msg.length());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	char  msg  =  msg.substring(0,  msg.length());	  String    msg    =    msg.substring(0,    msg.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
189	[BUG]  [BUGGY]  String  msg  =  msg.substring(1,  msg.length());  [CE]  <identifier>  expected  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(1,  msg.length());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(1,  msg.length());	  String    msg    =    msg.substring(0,    msg.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
190	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  +  2);  [CE]  <identifier>  expected  [FE]                                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  +  2);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()  +  2);	  String    msg    =    msg.substring(0,    msg.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
191	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg!=  null  &&  msg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg!=  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.length()    >    0)    {    if  (msg!=  null  &&  msg.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
192	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  ==  null  &&  msg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  ==  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.length()    >    0)    {    if  (msg  ==  null  &&  msg.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
193	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  >=  null  &&  msg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  >=  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.length()    >    0)    {    if  (msg  >=  null  &&  msg.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
194	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.length()  >  0)  {  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.length()    >    0)    {    If  (msg!=  null  &&  msg.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
195	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  >>  null  &&  msg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  >>  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.length()    >    0)    {    if  (msg  >>  null  &&  msg.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
196	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  [Delete]  null  &&  msg.length()  >  0)  {  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.length()  >  0)  {  if  (msg  [Delete]  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.length()    >    0)    {    if  (msg  [Delete]  null  &&  msg.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
197	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartIndex());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartIndex());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
198	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos.getIndex());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
199	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
200	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  pos.getIndex());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
201	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg!=    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	49	None	replace
202	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg!=    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	49	None	replace
203	[BUG]  [BUGGY]  if(input!=  null  ||  msg.isEmpty())  {  if  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  ||  msg.isEmpty())  {  if  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null  ||  msg.isEmpty())  {  if  (msg  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (msg    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
204	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  ==  null  &&  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  ==  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    &&    msg.equals(   "       "))    {    if  (msg  ==  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
205	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg!=  null  &&  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg!=  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    &&    msg.equals(   "       "))    {    if  (msg!=  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
206	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  If  (msg  ==  null  &&  msg.equals(   "   "))  {  [CE]  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  If  (msg  ==  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    &&    msg.equals(   "       "))    {    If  (msg  ==  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  	34	None	add
207	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  >=  null  &&  msg.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  >=  null  &&  msg.equals(   "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    &&    msg.equals(   "       "))    {    if  (msg  >=  null  &&  msg.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
208	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
209	[BUG]  [BUGGY]  if(msg  ==  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  &&  msg.length()  >  0)  {  If  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
210	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg!=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.length()    ==    0)    {    if  (msg!=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
211	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.length()    ==    0)    {    if  (msg  ==  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
212	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg  >=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg  >=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.length()    ==    0)    {    if  (msg  >=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
213	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  If  (msg!=  null  ||  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  If  (msg!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.length()    ==    0)    {    If  (msg!=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
214	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg!=  null  ||  msg.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg!=  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.length()    ==    0)    {    if  (msg!=  null  ||  msg.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
215	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg  >>  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  ==  0)  {  if  (msg  >>  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.length()    ==    0)    {    if  (msg  >>  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
216	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg!=  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  If  (msg!=  null  ||  msg.isEmpty())  {	  if    (msg!=    null    ||    msg.isEmpty())    {    If    (msg!=    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
217	[BUG]  [BUGGY]  If  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  ||  msg.isEmpty())  {	  if    (msg!=    null    ||    msg.isEmpty())    {    If    (msg!=    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
218	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg!=  null  ||  msg.length()  >  0)  {	  if    (msg!=    null    &&    msg.length()    >    0)    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
219	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.length()  >  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg!=  null  ||  msg.length()  >  0)  {	  if    (msg!=    null    &&    msg.length()    >    0)    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
220	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  ||  msg.length()  >  0)  {	  if    (msg!=    null    &&    msg.length()    >    0)    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
221	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()  >  0)  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  ||  msg.length()  >  0)  {	  if    (msg!=    null    &&    msg.length()    >    0)    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
222	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals( "* "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg!=  null  ||  msg.equals( "* "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
223	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals( "* "))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals( "* "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg!=  null  ||  msg.equals( "* "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
224	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals( "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  &&  msg.equals( "*   "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
225	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals( "*   "))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals( "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  &&  msg.equals( "*   "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
226	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals( "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg!=  null  &&  msg.equals( "*   "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
227	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals( "*   "))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals( "*   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg!=  null  &&  msg.equals( "*   "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
228	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg!=  null  &&  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg!=  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg!=  null  &&  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
229	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  ==  null  &&  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  ==  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg  ==  null  &&  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
230	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  >=  null  &&  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  >=  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg  >=  null  &&  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
231	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg!=  null  &&  msg.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg!=  null  &&  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg!=  null  &&  msg.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
232	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  If(msg!=  null  &&  msg.length()  ==  0)  {  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  If(msg!=  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    If(msg!=  null  &&  msg.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	79	None	add
233	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  >>  null  &&  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  >>  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg  >>  null  &&  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
234	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  [Delete]  null  &&  msg.length()  ==  0)  {  [CE]  ')'  expected  [FE]                JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg  [Delete]  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg  [Delete]  null  &&  msg.length()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	79	None	add
235	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  &&  msg.length()  ==  0)  {	  if    (msg!=    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
236	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.length()  ==  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  &&  msg.length()  ==  0)  {	  if    (msg!=    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
237	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (fail!=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.length()  ==  0)  {  if  (fail!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.length()    ==    0)    {    if  (fail!=  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
238	[BUG]  [BUGGY]  if(input  ==  null)  {  if  (msg!=  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  if  (msg!=  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {  if  (msg!=  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    >=    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
239	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(input!=  null)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    >=    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
240	[BUG]  [BUGGY]  if(input!=  null)  {  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    >=    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
241	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(input  ==  null)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    >=    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
242	[BUG]  [BUGGY]  if(input  ==  null)  {  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    >=    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
243	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLineno());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLineno());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLineno());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
244	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLocalName());  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLocalName());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLocalName());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
245	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
246	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(fail!=  null  &&  msg.length()  >  0)  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    if    (msg!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
247	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.length()  >  0)  {  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.length()  >  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=  null  &&  msg.length()  >  0)  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    if    (msg!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
248	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(fail!=  null)  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    if    (msg!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
249	[BUG]  [BUGGY]  if(fail!=  null)  {  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=  null)  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    if    (msg!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
250	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(6);  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(1);  }  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(6);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(6);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
251	[BUG]  [BUGGY]  if(msg  ==  null)  {  msg  =  msg;  }  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
252	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
253	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
254	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
255	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
256	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
257	[BUG]  [BUGGY]  if(input  ==  null)  {  if  (msg!=  null  ||  msg.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null)  {  if  (msg!=  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null)  {  if  (msg!=  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg!=    null    ||    msg.equals(       "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
258	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  ==  null  &&  msg.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  ==  null  &&  msg.equals( ".   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    &&    msg.equals(   "       "))    {    if  (msg  ==  null  &&  msg.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
259	[BUG]  [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  ==  null  &&  msg.equals( "))  {  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  &&  msg.equals(   "     "))  {  if  (msg  ==  null  &&  msg.equals( "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    &&    msg.equals(   "       "))    {    if  (msg  ==  null  &&  msg.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	34	None	add
260	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(fail!=  null  &&  msg.length()  ==  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	80	1	replace
261	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.length()  ==  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=  null  &&  msg.length()  ==  0)  {	  if(msg!=    null    &&    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	80	1	replace
262	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (fail!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (fail!=  null  ||  msg.isEmpty())  {	  if    (msg!=    null    ||    msg.isEmpty())    {    If    (msg!=    null    ||    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
263	[BUG]  [BUGGY]  if  (fail!=  null  ||  msg.isEmpty())  {  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (fail!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (fail!=  null  ||  msg.isEmpty())  {	  if    (msg!=    null    ||    msg.isEmpty())    {    If    (msg!=    null    ||    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
264	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
265	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
266	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
267	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(i);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	compilable	  [FE]  JsonSyntaxException  	70	1	replace
268	[BUG]  [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg!=  null)  {  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [CE]  '.class'  expected  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  if(msg!=  null)  {  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    if(msg!=  null)  {  For(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(i);  }	  	non-compiled	[CE]  '.class'  expected	69	None	add
269	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(input!=  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg    ==    null    ||    msg.equals(   "))    {    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
270	[BUG]  [BUGGY]  if(input!=  null  ||  msg.equals( "   "))  {  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg    ==    null    ||    msg.equals(   "))    {    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
271	[BUG]  [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length());  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =   "[ "  +  msg.substring(0,  msg.length());	  String    msg    =    msg.substring(0,    msg.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
272	[BUG]  [BUGGY]  String  msg  =  msg.toLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toLowerCase()  +  1;  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toLowerCase()  +  1;	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
273	[BUG]  [BUGGY]  if(msg!=  null)  {  msg  =  UTC_ID;  }  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  msg  =  UTC_ID;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  msg  =  UTC_ID;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
274	[BUG]  [BUGGY]  if(msg  ==  null)  {  msg  =  UTC_ID;  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  msg  =  UTC_ID;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  msg  =  UTC_ID;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
275	[BUG]  [BUGGY]  if(msg!=  null)  {  msg  =  input;  }  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null)  {  msg  =  input;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null)  {  msg  =  input;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
276	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  input.getIndex());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  input.getIndex());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  input.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
277	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  ||  input.length()  ==  0)  {	  if    (input    ==    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
278	[BUG]  [BUGGY]  if  (msg  ==  null  ||  input.length()  ==  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  ||  input.length()  ==  0)  {	  if    (input    ==    null    ||    msg.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
279	[BUG]  [BUGGY]  String  msg  =  msg.getMessage();  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.getMessage();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.getMessage();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
280	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (fail!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  If  (fail!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  If  (fail!=  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
281	[BUG]  [BUGGY]  if  (fail!=  null  &&  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (fail!=  null  &&  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (fail!=  null  &&  msg.isEmpty())  {  If  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
282	[BUG]  [BUGGY]  String  msg  =  msg  + ": "+Integer.toHexString(input);  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  + ": "+Integer.toHexString(input);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  + ": "+Integer.toHexString(input);	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
283	[BUG]  [BUGGY]  String  msg  =  msg  + "n "+Integer.toHexString(input)+ "n ";  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  + "n "+Integer.toHexString(input)+ "n ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  + "n "+Integer.toHexString(input)+ "n ";	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
284	[BUG]  [BUGGY]  String  msg  =  msg  + ": "+Integer.toHexString(input).toHexString();  [CE]  <identifier>  expected  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  + ": "+Integer.toHexString(input).toHexString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  + ": "+Integer.toHexString(input).toHexString();	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
285	[BUG]  [BUGGY]  String  msg  =  msg  + "n "+Integer.toHexString(input);  [CE]  <identifier>  expected  [FE]                                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  + "n "+Integer.toHexString(input);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  + "n "+Integer.toHexString(input);	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
286	[BUG]  [BUGGY]  String  msg  =  msg  + "n ";  [CE]  <identifier>  expected  [FE]                                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  + "n ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  + "n ";	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
287	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.startsWith( "+ "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if  (msg  ==  null  ||  msg.startsWith( "+ "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
288	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.startsWith( "+ "))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.startsWith( "+ "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if  (msg  ==  null  ||  msg.startsWith( "+ "))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
289	[BUG]  [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (fail!=  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input!=  null  ||  msg.isEmpty())  {  if  (fail!=  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input!=    null    ||    msg.isEmpty())    {    if  (fail!=  null  ||  msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
290	[BUG]  [BUGGY]  pos.setIndex(input  + ", "  +  msg);  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(input  + ", "  +  msg);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(input  + ", "  +  msg);	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
291	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(input));  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(Integer.toString(input));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(Integer.toString(input));	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
292	[BUG]  [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg!=  null  &&  msg.equals( "))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  &&  msg.equals(   "   "))  {  if  (msg!=  null  &&  msg.equals( "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    &&    msg.equals(   "   "))    {    if  (msg!=  null  &&  msg.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	9	None	add
293	[BUG]  [BUGGY]  if(input!=  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (msg    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
294	[BUG]  [BUGGY]  if(input  ==  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    if    (msg    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
295	[BUG]  [BUGGY]  String  msg  =  msg.substring(input.length()  -  1);  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(input.length()  -  1);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(input.length()  -  1);	  String    msg    =    msg.trim();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
296	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    ==    null    ||    msg.length()    {    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
297	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [CE]  incompatible  types  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  incompatible  types	76	None	replace
298	[BUG]  [BUGGY]  Integer  msg  =  input.intValue();  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  Integer  msg  =  input.intValue();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	Integer  msg  =  input.intValue();	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
299	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (fail  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (fail  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (fail  ==  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
300	[BUG]  [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (input  ==  null  ||  msg.length()  ==  0)  {  if  (msg  ==  null  ||  msg.length()  ==  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (input    ==    null    ||    msg.length()    ==    0)    {    if  (msg  ==  null  ||  msg.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
301	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg!=  null  &&  msg.length()  {  0)  {  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  ==  0)  {  if(msg!=  null  &&  msg.length()  {  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=    null    &&    msg.length()    ==    0)    {    if(msg!=  null  &&  msg.length()  {  0)  {	  	non-compiled	[CE]  ')'  expected	79	None	add
302	[BUG]  [BUGGY]  if(input  ==  null  ||  msg.equals( "   "))  {  If  (msg  ==  null  ||  msg.equals( "   "))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.equals( "   "))  {  If  (msg  ==  null  ||  msg.equals( "   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  msg.equals( "   "))  {  If  (msg  ==  null  ||  msg.equals( "   "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    If    (msg    ==    null    ||    msg.equals(       "       "))    {    	non-compiled	[CE]  	28	None	replace
303	[BUG]  [BUGGY]  if(input!=  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input!=  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input!=  null  ||  msg.isEmpty())  {  If  (input  ==  null  ||  msg.isEmpty())  {	  if    (input    ==    null    ||    msg.isEmpty())    {    If    (input    ==    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	24	None	replace
304	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg!=  null  ||  msg.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg!=  null  ||  msg.equals( ".   "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    if  (msg!=  null  ||  msg.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
305	[BUG]  [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg!=  null  ||  msg.equals( "))  {  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg!=  null  ||  msg.equals(   "   "))  {  if  (msg!=  null  ||  msg.equals( "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg!=    null    ||    msg.equals(   "   "))    {    if  (msg!=  null  ||  msg.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	36	None	add
306	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
307	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  msg  =  input.substring(3);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
308	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(1);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
309	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(1);  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(1);  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  input.length();  ++i)  {  msg  =  input.substring(1);  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(1);    }    	compilable	  [FE]  JsonSyntaxException  	72	1	replace
310	[BUG]  [BUGGY]  if(input  ==  null  ||  msg.isEmpty())  {  if  (msg!=  null  &&  msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(input  ==  null  ||  msg.isEmpty())  {  if  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(input  ==  null  ||  msg.isEmpty())  {  if  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    if    (msg    >=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
311	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.length()  <  =  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.length()  <  =  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    if    (msg    >=    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
312	[BUG]  [BUGGY]  String  msg  =  Msg.substring(0,  msg.length());  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  Msg.substring(0,  msg.length());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  Msg.substring(0,  msg.length());	  String    msg    =    msg.substring(0,    msg.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
313	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getName());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getName());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getName());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
314	[BUG]  [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||  msg.length()!=  0)  {  if  (msg  ==  null  ||  msg.length()  [Delete]  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||    msg.length()!=    0)    {    if  (msg  ==  null  ||  msg.length()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	54	None	add
315	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.equals( " "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(fail!=  null  &&  msg.equals( " "))  {	  if(fail!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	78	1	replace
316	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.equals( " "))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.equals( " "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=  null  &&  msg.equals( " "))  {	  if(fail!=    null    &&    msg.isEmpty())    {    	compilable	  [FE]  JsonSyntaxException  	78	1	replace
317	[BUG]  [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length())+ "] ";  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length())+ "] ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =   "[ "  +  msg.substring(0,  msg.length())+ "] ";	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
318	[BUG]  [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length()));  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =   "[ "  +  msg.substring(0,  msg.length()));  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =   "[ "  +  msg.substring(0,  msg.length()));	  String    msg    =    msg.substring(0,    msg.length()    -    1);    	non-compiled	[CE]  	41	None	replace
319	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.equals( "n "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null  ||  msg.equals( "n "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg    ==    null    ||    msg.equals(   ".       "))    {    	compilable	  [FE]  JsonSyntaxException  	62	1	replace
320	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.equals( "n "))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.equals( "n "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.equals( "n "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg    ==    null    ||    msg.equals(   ".       "))    {    	compilable	  [FE]  JsonSyntaxException  	62	1	replace
321	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.equals( "+fail.getClass()))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.equals( "+fail.getClass()))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.equals( "+fail.getClass()))  {	  if    (msg    ==    null    ||    msg.equals(   "+   "))    {    	non-compiled	[CE]  unclosed  string  literal	39	None	replace
322	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [CE]  incompatible  types  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.length()  >  0)  {  for(int  i  =  0;  i  <  msg.length();  ++i)  {  return  input;  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    return    input;    }    	non-compiled	[CE]  incompatible  types	76	None	replace
323	[BUG]  [BUGGY]  If  (msg!=  null  &&  msg.isEmpty())  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg!=  null  &&  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg!=  null  &&  msg.isEmpty())  {	  if    (msg    ==    null    &&    msg.isEmpty())    {    If    (msg!=    null    &&    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
324	[BUG]  [BUGGY]  String  msg  =  msg  ==  null? "null "  :  msg.toString();  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null? "null "  :  msg.toString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null? "null "  :  msg.toString();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
325	[BUG]  [BUGGY]  String  msg  =  msg  ==  null?  null  :  msg.toString();  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null?  null  :  msg.toString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null?  null  :  msg.toString();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
326	[BUG]  [BUGGY]  String  msg  =  msg  ==  null? " "  :  msg.toString();  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null? " "  :  msg.toString();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null? " "  :  msg.toString();	  String    msg    =    msg.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
327	[BUG]  [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  -  10);  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.substring(0,  msg.length()  -  10);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.substring(0,  msg.length()  -  10);	  String    msg    =    msg.substring(0,    msg.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
328	[BUG]  [BUGGY]  If  (msg  ==  null  ||  msg.length()!=  0)  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  ||  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  ||  msg.length()!=  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
329	[BUG]  [BUGGY]  If  (msg  ==  null  ||  msg.length()  >=  0)  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  ||  msg.length()  >=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  ||  msg.length()  >=  0)  {	  if    (msg    ==    null    ||    msg.length()    ==    0)    {    If    (msg    ==    null    ||    msg.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
330	[BUG]  [BUGGY]  If  (msg  ==  null  ||  msg.equals( "+ "))  {  [CE]  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  If  (msg  ==  null  ||  msg.equals( "+ "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	If  (msg  ==  null  ||  msg.equals( "+ "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    If    (msg    ==    null    ||    msg.equals(       "       "))    {    	non-compiled	[CE]  	28	None	replace
331	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.startsWith( "* "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null  ||  msg.startsWith( "* "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
332	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.startsWith( "* "))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.startsWith( "* "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.startsWith( "* "))  {	  if    (msg    ==    null    ||    msg.equals(   "*   "))    {    	compilable	  [FE]  JsonSyntaxException  	61	1	replace
333	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.trim().length()  ==  0))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.trim().length()  ==  0))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.trim().length()  ==  0))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
334	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.endsWith( ".class ")))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.endsWith( ".class ")))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.endsWith( ".class ")))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
335	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.endsWith( ".js ")))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.endsWith( ".js ")))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.endsWith( ".js ")))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
336	[BUG]  [BUGGY]  ||(msg!=  null  &&  msg.endsWith( "- ")))  {  msg  =  msg;  }  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg!=  null  &&  msg.endsWith( "- ")))  {  msg  =  msg;  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg!=  null  &&  msg.endsWith( "- ")))  {  msg  =  msg;  }	  if(msg!=    null)    {    msg    =    msg;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
337	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  pos.getIndex());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
338	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getLocalName());  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getLocalName());  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getLocalName());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
339	[BUG]  [BUGGY]  String  msg  =   "( "+fail.getClass().getName()+   ") ";  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =   "( "+fail.getClass().getName()+   ") ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =   "( "+fail.getClass().getName()+   ") ";	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
340	[BUG]  [BUGGY]  String  msg  =  UTC_ID  + "( "+fail.getClass().getName()+   ") ";  [CE]  <identifier>  expected  [FE]                                JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  UTC_ID  + "( "+fail.getClass().getName()+   ") ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  UTC_ID  + "( "+fail.getClass().getName()+   ") ";	  String    msg    =    msg;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
341	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
342	[BUG]  [BUGGY]  ||(msg  ==  null  &&  msg.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  ||(msg  ==  null  &&  msg.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	||(msg  ==  null  &&  msg.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
343	[BUG]  [BUGGY]  if(msg  ==  null  ||!msg.endsWith( ".class "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||!msg.endsWith( ".class "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||!msg.endsWith( ".class "))  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
344	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.startsWith( "- "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg  ==  null  ||  msg.startsWith( "- "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg    ==    null    ||    msg.equals(   "))    {    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
345	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.startsWith( "- "))  {  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg  ==  null  ||  msg.startsWith( "- "))  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg  ==  null  ||  msg.startsWith( "- "))  {	  if    (msg    ==    null    ||    msg.equals(       "       "))    {    if    (msg    ==    null    ||    msg.equals(   "))    {    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
346	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {	  if    (msg!=    null    ||    msg.isEmpty())    {    If    (msg!=    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
347	[BUG]  [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(fail!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(fail!=  null  &&  msg.isEmpty())  {  If  (msg  ==  null  ||  msg.isEmpty())  {	  if    (msg!=    null    ||    msg.isEmpty())    {    If    (msg!=    null    ||    msg.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
348	[BUG]  [BUGGY]  String  msg  =  msg  ==  null? "null "  :  msg.trim();  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null? "null "  :  msg.trim();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null? "null "  :  msg.trim();	  String    msg    =    msg.trim();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
349	[BUG]  [BUGGY]  String  msg  =  msg  ==  null? " "  :  msg.trim();  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null? " "  :  msg.trim();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null? " "  :  msg.trim();	  String    msg    =    msg.trim();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
350	[BUG]  [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  ==  null  ||?!msg.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if  (msg  ==  null  ||!msg.isEmpty())  {  if  (msg  ==  null  ||?!msg.isEmpty())  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if    (msg    ==    null    ||!msg.isEmpty())    {    if  (msg  ==  null  ||?!msg.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
351	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	if(msg!=  null  &&  msg.length()!=  0)  {	  if    (msg    ==    null    ||    msg.length()!=    0)    {    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
352	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()!=  0)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  if(msg!=  null  &&  msg.length()!=  0)  {  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	if(msg!=  null  &&  msg.length()!=  0)  {	  if    (msg    ==    null    ||    msg.length()!=    0)    {    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
353	[BUG]  [BUGGY]  msg  =  input.substring(0,  i);  [CE]  <identifier>  expected  [FE]    JsonSyntaxException    [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  msg  =  input.substring(0,  i);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	msg  =  input.substring(0,  i);	  if(msg!=    null)    {    for(int    i    =    0;    i    <    msg.length();    ++i)    {    msg    =    input.substring(i);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
354	[BUG]  [BUGGY]  pos.setIndex(input,  msg);  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  pos.setIndex(input,  msg);  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	pos.setIndex(input,  msg);	  pos.setIndex(input);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
355	[BUG]  [BUGGY]  String  msg  =  msg  ==  null?  null  :  msg.toLowerCase();  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null?  null  :  msg.toLowerCase();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null?  null  :  msg.toLowerCase();	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
356	[BUG]  [BUGGY]  String  msg  =  msg  ==  null? "null "  :  msg.toLowerCase();  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg  ==  null? "null "  :  msg.toLowerCase();  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg  ==  null? "null "  :  msg.toLowerCase();	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
357	[BUG]  [BUGGY]  String  msg  =  msg.toLowerCase()  + ", ";  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]        }  catch  (IndexOutOfBoundsException  e)  {  fail  =  e;  }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();      [BUGGY]  String  msg  =  msg.toLowerCase()  + ", ";  [BUGGY]      msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);  throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	String  msg  =  msg.toLowerCase()  + ", ";	  String    msg    =    msg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
