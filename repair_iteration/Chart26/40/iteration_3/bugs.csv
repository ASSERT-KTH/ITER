bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);	  	compilable	  [FE]  AssertionFailedError  	19	22	add
2	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);	  	compilable	  [FE]  AssertionFailedError  	19	22	add
3	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  g2.setStroke(this.labelStroke);  [CE]  cannot  find  symbol  labelStroke  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  g2.setStroke(this.labelStroke);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    g2.setStroke(this.labelStroke);  g2.setStroke(this.labelStroke);	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	19	None	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	19	22	add
5	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	19	22	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	14	22	add
7	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	14	22	add
8	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	14	22	add
10	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	14	22	add
11	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolT  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolT  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolT	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelToolTip);    	non-compiled	[CE]  ')'  expected	36	None	replace
12	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelToolTip);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
13	[BUG]  [BUGGY]  EntityCollection  entities  =  entity.entities();  [CE]  cannot  find  symbol  entity  [FE]              AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  EntityCollection  entities  =  entity.entities();  [BUGGY]      if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  entity.entities();	  EntityCollection    entities    =    owner.entities();    	non-compiled	[CE]  cannot  find  symbol  entity	24	None	replace
14	[BUG]  [BUGGY]  Paint  labelFont  =  getLabelFont();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Paint  labelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Paint  labelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Paint    labelFont    =    getLabelFont();    	non-compiled	[CE]  incompatible  types	9	None	replace
15	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    Font  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	33	None	add
16	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  LabelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  cannot  find  symbol  LabelFont  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  LabelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    LabelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  cannot  find  symbol  LabelFont	33	None	add
17	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  font  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  font  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    font  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	33	None	add
18	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    	non-compiled	[CE]  cannot  find  symbol  entities	23	None	replace
19	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(owner,  hotspot);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelFont  =  getLabelFont(owner,  hotspot);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelFont  =  getLabelFont(owner,  hotspot);	  Font    labelFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	4	None	replace
20	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(plotState,  hotspot);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelFont  =  getLabelFont(plotState,  hotspot);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelFont  =  getLabelFont(plotState,  hotspot);	  Font    labelFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	4	None	replace
21	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);	          Font    labelFont    =    getLabelFont();    TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    	non-compiled	[CE]  not  a  statement	25	None	replace
22	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelLabelFont    =    getLabelFont();    Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();	  	non-compiled	[CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	31	None	add
23	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [CE]  variable  labelLabelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelLabelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();	  	non-compiled	[CE]  variable  labelLabelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	31	None	add
24	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  LabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [CE]  cannot  find  symbol  LabelFont  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  LabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelLabelFont    =    getLabelFont();    LabelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();	  	non-compiled	[CE]  cannot  find  symbol  LabelFont	31	None	add
25	[BUG]  [BUGGY]  Font  labelLabelFont  =  getLabelFont();  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelLabelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelLabelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Font    labelLabelFont    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol  entities	32	None	replace
26	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely	  TextAnchor.CENTER,    getLabelAngle()    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    	non-compiled	[CE]  not  a  statement	5	None	replace
27	[BUG]  [BUGGY]  g2.setPaint(this.labelPaint);  g2.setFont(this.labelPaint);  [CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  g2.setPaint(this.labelPaint);  g2.setFont(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	g2.setPaint(this.labelPaint);  g2.setFont(this.labelPaint);	          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);    	non-compiled	[CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;	29	None	replace
28	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setFont(this.labelPaint);  }  [CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setFont(this.labelPaint);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setFont(this.labelPaint);  }	          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);    	non-compiled	[CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;	29	None	replace
29	[BUG]  [BUGGY]  Font  labelBound  =  getLabelFont();  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelBound  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Font    labelBound    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol  entities	34	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	17	22	add
31	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	17	22	add
32	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	17	22	add
34	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	17	22	add
35	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    	non-compiled	[CE]  cannot  find  symbol  entities	20	None	replace
36	[BUG]  [BUGGY]  LabelFont  font  =  getLabelFont();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  LabelFont  font  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	LabelFont  font  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    labelFont    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
37	[BUG]  [BUGGY]  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	g2.setPaint(getLabelPaint());  g2.draw(hotspot);	          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());    	non-compiled	[CE]  cannot  find  symbol  entities	18	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;	  	compilable	  [FE]  AssertionFailedError  	22	22	add
39	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;	  	compilable	  [FE]  AssertionFailedError  	22	22	add
40	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [CE]  cannot  find  symbol  labelStroke  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	22	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);	  	compilable	  [FE]  AssertionFailedError  	22	22	add
42	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);	  	compilable	  [FE]  AssertionFailedError  	22	22	add
43	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelURL);    	non-compiled	[CE]  ')'  expected	37	None	replace
44	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }	          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());    	non-compiled	[CE]  cannot  find  symbol  entities	15	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(this.labelPaint);        g2.setFont(this.labelFont);    g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	28	22	add
46	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setFont(this.labelFont);    g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	28	22	add
47	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setStroke(this.labelStroke);  g2.setFont(this.labelFont);  [CE]  cannot  find  symbol  labelStroke  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setStroke(this.labelStroke);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setFont(this.labelFont);    g2.setStroke(this.labelStroke);  g2.setFont(this.labelFont);	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	28	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	                g2.setPaint(this.labelPaint);        g2.setFont(this.labelFont);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	28	22	add
49	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setFont(this.labelFont);    g2.setFont(this.labelFont);  g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	28	22	add
50	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip,  hotspot,  this.labelURL);  [CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip,  hotspot,  this.labelURL);  [BUGGY]      if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip,  hotspot,  this.labelURL);	  EntityCollection    entities    =    owner.getEntityCollection(this.labelToolTip,    hotspot);    	non-compiled	[CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;	2	None	replace
51	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntities(false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  EntityCollection  entities  =  owner.getEntities(false);  [BUGGY]      if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntities(false);	  EntityCollection    entities    =    owner.getEntities();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
52	[BUG]  [BUGGY]  LabelFont  =  getLabelFont();  [CE]  cannot  find  symbol  LabelFont  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  LabelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	LabelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    LabelFont    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol  LabelFont	8	None	replace
53	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this,  hotspot,  this.labelToolTip);  [CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this,  hotspot,  this.labelToolTip);  [BUGGY]      if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntityCollection(this,  hotspot,  this.labelToolTip);	  EntityCollection    entities    =    owner.getEntityCollection(hotspot,    this.labelToolTip);    	non-compiled	[CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;	38	None	replace
54	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0f,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0f,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  /  2.0f,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -	  TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0f,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    	non-compiled	[CE]  not  a  statement	39	None	replace
55	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  [CE]  cannot  find  symbol  labelStroke  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setFont(this.labelFont);    g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	28	None	add
56	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
57	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }	          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());    	non-compiled	[CE]  cannot  find  symbol  entities	18	None	replace
58	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  LabelFont  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  LabelFont  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    LabelFont  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
59	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	33	None	add
60	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  }  [CE]  cannot  find  symbol  labelStroke  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  }	          g2.setPaint(this.labelPaint);    g2.setStroke(this.labelStroke);    	non-compiled	[CE]  cannot  find  symbol  labelStroke	21	None	replace
61	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  [CE]  cannot  find  symbol  labelStroke  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	22	None	add
62	[BUG]  [BUGGY]  if(owner!=  null)  {  Font  labelFont  =  getLabelFont();  if(labelFont!=  null)  {  labelFont  =  getLabelFont();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  Font  labelFont  =  getLabelFont();  if(labelFont!=  null)  {  labelFont  =  getLabelFont();  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  Font  labelFont  =  getLabelFont();  if(labelFont!=  null)  {  labelFont  =  getLabelFont();  }	          Font    labelFont    =    getLabelFont();    Paint    labelFont    =    getLabelFont();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  }	          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);    	non-compiled	[CE]  cannot  find  symbol  entities	29	None	replace
64	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTi  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTi  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTi	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelToolTip);    	non-compiled	[CE]  ')'  expected	36	None	replace
65	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
66	[BUG]  [BUGGY]  EntityCollection  entities  =  owners.entities();  [CE]  cannot  find  symbol  owners  [FE]              AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  EntityCollection  entities  =  owners.entities();  [BUGGY]      if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owners.entities();	  EntityCollection    entities    =    owner.entities();    	non-compiled	[CE]  cannot  find  symbol  owners	24	None	replace
67	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(g2,  hotspot);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelFont  =  getLabelFont(g2,  hotspot);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelFont  =  getLabelFont(g2,  hotspot);	  Font    labelFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	4	None	replace
68	[BUG]  [BUGGY]  Font  labelBound  =  getLabelBound();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelBound  =  getLabelBound();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelBound  =  getLabelBound();	          Font    labelFont    =    getLabelFont();    Font    labelBound    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
69	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  labelFont  =  getLabelFont();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  labelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  labelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    labelFont    =    getLabelFont();    	non-compiled	[CE]  not  a  statement	26	None	replace
70	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.fill(this.labelPaint);  this.labelPaint  =  null;  }  [CE]  method  fill  in  class  Graphics2D  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.fill(this.labelPaint);  this.labelPaint  =  null;  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.fill(this.labelPaint);  this.labelPaint  =  null;  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    	non-compiled	[CE]  method  fill  in  class  Graphics2D  cannot  be  applied  to  given  types;	23	None	replace
71	[BUG]  [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(owner!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelURL);    	non-compiled	[CE]  ')'  expected	37	None	replace
72	[BUG]  [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  [CE]  cannot  find  symbol  labelStroke  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                g2.setPaint(this.labelPaint);        g2.setPaint(this.labelPaint);    g2.setStroke(this.labelStroke);  g2.setPaint(this.labelPaint);	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	19	None	add
73	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelBound  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelBound  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	33	None	add
74	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelfont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]      AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();  Font  labelfont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelBound    =    getLabelFont();    Font  labelfont  =  getLabelFont();  Font  labelBound  =  getLabelFont();	  	non-compiled	[CE]  variable  labelBound  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	33	None	add
75	[BUG]  [BUGGY]  Font  font  =  getLabelFont();  [CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  font  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  font  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    LabelFont    =    getLabelFont();    	non-compiled	[CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	8	None	replace
76	[BUG]  [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelBounds  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [CE]  variable  labelBounds  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]          Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();  Font  labelBounds  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	                Font        labelFont        =        getLabelFont();        Font    labelLabelFont    =    getLabelFont();    Font  labelBounds  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();	  	non-compiled	[CE]  variable  labelBounds  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	31	None	add
77	[BUG]  [BUGGY]  TextAnchor.CENTER,  getNameAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  TextAnchor.CENTER,  getNameAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getNameAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);	  TextAnchor.CENTER,    getLabelAngle()    /    2.0,    TextAnchor.CENTER);    	non-compiled	[CE]  not  a  statement	6	None	replace
78	[BUG]  [BUGGY]  if(this.labelPaint!=  null)  {  g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  }  [CE]  cannot  find  symbol  labelStroke  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelPaint!=  null)  {  g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelPaint!=  null)  {  g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  }	          g2.setPaint(this.labelPaint);    g2.setStroke(this.labelStroke);    	non-compiled	[CE]  cannot  find  symbol  labelStroke	21	None	replace
79	[BUG]  [BUGGY]  if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelToolTip);    	non-compiled	[CE]  ')'  expected	36	None	replace
80	[BUG]  [BUGGY]  if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelToolTip);    	non-compiled	[CE]  ')'  expected	36	None	replace
81	[BUG]  [BUGGY]  if(this.labelVisible)  {  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  }  [CE]  cannot  find  symbol  labelVisible  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelVisible)  {  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelVisible)  {  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelURL);    	non-compiled	[CE]  cannot  find  symbol  labelVisible	37	None	replace
82	[BUG]  [BUGGY]  if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  }  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelURL!=  null)  {  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelToolTip    =    new    AxisLabelEntity(this,    hotspot,    this.labelToolTip,    this.labelURL);    	non-compiled	[CE]  incompatible  types	37	None	replace
83	[BUG]  [BUGGY]  if(this.labelToolTip!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelToolTip!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelToolTip!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    this.labelPaint    =    null;    	non-compiled	[CE]  cannot  find  symbol  entities	23	None	replace
84	[BUG]  [BUGGY]  g2.setFont(this.labelFont);  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  g2.setFont(this.labelFont);  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	g2.setFont(this.labelFont);	          g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);    	non-compiled	[CE]  cannot  find  symbol  entities	29	None	replace
85	[BUG]  [BUGGY]  G2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  G2.setStroke(getLabelStroke());  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	G2.setStroke(getLabelStroke());	  g2.setStroke(getLabelStroke());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
86	[BUG]  [BUGGY]  LabelFont  labelFont  =  getLabelFont();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  LabelFont  labelFont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	LabelFont  labelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    labelFont    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
87	[BUG]  [BUGGY]  if(this.labelToolTip!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  }  [CE]  cannot  find  symbol  entities  [FE]    AssertionFailedError    [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  if(this.labelToolTip!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  }  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	if(this.labelToolTip!=  null)  {  g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  }	          g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);    	non-compiled	[CE]  cannot  find  symbol  entities	20	None	replace
88	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0	  TextAnchor.CENTER,    getLabelAngle()    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f    	non-compiled	[CE]  not  a  statement	12	None	replace
89	[BUG]  [BUGGY]  Font  labelfont  =  getLabelFont();  [CE]  cannot  find  symbol  entities  [FE]        AssertionFailedError      [CONTEXT]      TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();      [BUGGY]  Font  labelfont  =  getLabelFont();  [BUGGY]      EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelfont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Font    labelFont    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol  entities	7	None	replace
