bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  [BUGGY]  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();	EntityCollection  entities  =  owner.getEntityCollection();  	compilable	  [FE]  AssertionFailedError  	79	22	replace
2	[BUG]  [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  [BUGGY]  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();	EntityCollection  entities  =  owner.getEntityCollection();  	compilable	  [FE]  AssertionFailedError  	79	22	replace
3	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  entities  [FE]      AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    [BUGGY]  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	  	EntityCollection  entities  =  owner.getEntityCollection();  	non-compiled	[CE]  cannot  find  symbol  entities	79	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    g2.setPaint(getLabelPaint());  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	    g2.setPaint(getLabelPaint());		compilable	  [FE]  AssertionFailedError  	80	22	add
5	[BUG]  [BUGGY]    g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    g2.setPaint(getLabelPaint());  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	    g2.setPaint(getLabelPaint());		compilable	  [FE]  AssertionFailedError  	80	22	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    g2.setPaint(this.labelPaint);  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	    g2.setPaint(this.labelPaint);		compilable	  [FE]  AssertionFailedError  	80	22	add
7	[BUG]  [BUGGY]    g2.setPaint(this.labelPaint);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    g2.setPaint(this.labelPaint);  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	    g2.setPaint(this.labelPaint);		compilable	  [FE]  AssertionFailedError  	80	22	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    Font  labelFont  =  getLabelFont();  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	    Font  labelFont  =  getLabelFont();		compilable	  [FE]  AssertionFailedError  	80	22	add
9	[BUG]  [BUGGY]    Font  labelFont  =  getLabelFont();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    Font  labelFont  =  getLabelFont();  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	    Font  labelFont  =  getLabelFont();		compilable	  [FE]  AssertionFailedError  	80	22	add
10	[BUG]  [BUGGY]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f		non-compiled	[CE]  not  a  statement	80	None	add
11	[BUG]  [BUGGY]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);		non-compiled	[CE]  not  a  statement	80	None	add
12	[BUG]  [BUGGY]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -		non-compiled	[CE]  not  a  statement	80	None	add
13	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(hotspot);  [CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(hotspot);  [BUGGY]  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntityCollection(hotspot);	EntityCollection  entities  =  owner.getEntityCollection();  	non-compiled	[CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;	79	None	replace
