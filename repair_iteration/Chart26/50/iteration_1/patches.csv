bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Label  labely  =(float)state.getCursor()  -  insets.getBottom();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Label  labely  =(float)state.getCursor()  -  insets.getBottom();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Label  labely  =(float)state.getCursor()  -  insets.getBottom();	      Label    w    =(float)labelBounds.getWidth();    labely    =(float)state.getCursor()    -    insets.getBottom();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
2	[BUG]  [BUGGY]  labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);	  labelx    =    new    Rectangle2D.Float(labely    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    	non-compiled	[CE]  incompatible  types	14	None	replace
3	[BUG]  [BUGGY]  Labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CE]  cannot  find  symbol  Labelx  [FE]          AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);	  labelx    =    new    Rectangle2D.Float(labely    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    	non-compiled	[CE]  cannot  find  symbol  Labelx	14	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Font  labelFont  =  this.labelFont;  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	Font  labelFont  =  this.labelFont;	      Font    labelFont    =    getLabelFont();    	compilable	  [FE]  AssertionFailedError  	6	22	replace
5	[BUG]  [BUGGY]  Font  labelFont  =  this.labelFont;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Font  labelFont  =  this.labelFont;  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Font  labelFont  =  this.labelFont;	      Font    labelFont    =    getLabelFont();    	compilable	  [FE]  AssertionFailedError  	6	22	replace
6	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelFont  =  getLabelFont();  [CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelFont  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        Font    labelFont    =    getLabelFont();    Font  labelFont  =  getLabelFont();	  	non-compiled	[CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	5	None	add
7	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  hotspot  =  getLabelFont();  [CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  hotspot  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        Font    labelFont    =    getLabelFont();    Font  hotspot  =  getLabelFont();	  	non-compiled	[CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	5	None	add
8	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  font  =  getLabelFont();  [CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  font  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        Font    labelFont    =    getLabelFont();    Font  font  =  getLabelFont();	  	non-compiled	[CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	5	None	add
9	[BUG]  [BUGGY]  if(edge  ==  RectangleEdge.BOTTOM)  {  if(labelx!=  0.0)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(edge  ==  RectangleEdge.BOTTOM)  {  if(labelx!=  0.0)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(edge  ==  RectangleEdge.BOTTOM)  {  if(labelx!=  0.0)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  if(labelx!=    0.0)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    else    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  if(edge  ==  RectangleEdge.TOP)  {  if(labelx!=  0.0)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(edge  ==  RectangleEdge.TOP)  {  if(labelx!=  0.0)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(edge  ==  RectangleEdge.TOP)  {  if(labelx!=  0.0)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  if(labelx!=    0.0)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    else    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
12	[BUG]  [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx  >=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx  >=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
14	[BUG]  [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx  >=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx  >=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx  >=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx  ==  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx  ==  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
16	[BUG]  [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx  ==  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx  ==  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx  ==  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
17	[BUG]  [BUGGY]  Label  w  =(float)dataArea.getWidth();  labely  =(float)labelBounds.getY();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Label  w  =(float)dataArea.getWidth();  labely  =(float)labelBounds.getY();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Label  w  =(float)dataArea.getWidth();  labely  =(float)labelBounds.getY();	      Label    w    =(float)labelBounds.getWidth();    labely    =(float)dataArea.getY();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
18	[BUG]  [BUGGY]  Labelx  labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Labelx  labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Labelx  labelx  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);	  if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
19	[BUG]  [BUGGY]  Labelx  labelx  =  new  Rectangle2D.Float(labely  -  w  /  2.0f,  labelx  -  h  /  2.0f,  w,  h);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Labelx  labelx  =  new  Rectangle2D.Float(labely  -  w  /  2.0f,  labelx  -  h  /  2.0f,  w,  h);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Labelx  labelx  =  new  Rectangle2D.Float(labely  -  w  /  2.0f,  labelx  -  h  /  2.0f,  w,  h);	  if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  g2.setStroke(getLabelStroke());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	g2.setStroke(getLabelStroke());	      g2.setPaint(getLabelPaint());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	1	22	add
22	[BUG]  [BUGGY]      g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	1	22	add
23	[BUG]  [BUGGY]      g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	1	22	add
25	[BUG]  [BUGGY]      g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	1	22	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	3	22	add
27	[BUG]  [BUGGY]      g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	3	22	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	3	22	add
29	[BUG]  [BUGGY]      g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	3	22	add
30	[BUG]  [BUGGY]      g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
31	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(labelBounds);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Font  labelFont  =  getLabelFont(labelBounds);  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Font  labelFont  =  getLabelFont(labelBounds);	      Font    labelFont    =    getLabelFont();    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	6	None	replace
32	[BUG]  [BUGGY]  float  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  dataArea,  w,  h);  [CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  float  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  dataArea,  w,  h);  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	float  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  dataArea,  w,  h);	      float    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    	non-compiled	[CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	9	None	replace
33	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  TextAnchor  hotspot  =  getLabelFont();  [CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  TextAnchor  hotspot  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        Font    labelFont    =    getLabelFont();    TextAnchor  hotspot  =  getLabelFont();	  	non-compiled	[CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	5	None	add
34	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  LabelFont  labelFont  =  getLabelFont();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  LabelFont  labelFont  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        Font    labelFont    =    getLabelFont();    LabelFont  labelFont  =  getLabelFont();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
35	[BUG]  [BUGGY]  Labelx  w  =  new  Labelx(labely  -  h  /  2.0f,  w,  h);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Labelx  w  =  new  Labelx(labely  -  h  /  2.0f,  w,  h);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Labelx  w  =  new  Labelx(labely  -  h  /  2.0f,  w,  h);	  if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
36	[BUG]  [BUGGY]  luate(g2,  labelx,  labely,  getLabelAngle(),  TextAnchor.CENTER);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  luate(g2,  labelx,  labely,  getLabelAngle(),  TextAnchor.CENTER);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	luate(g2,  labelx,  labely,  getLabelAngle(),  TextAnchor.CENTER);	  if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
37	[BUG]  [BUGGY]      g2.setFont(getLabelFont());  TextAnchor.CENTER  =  getLabelFont();  [CE]  cannot  assign  a  value  to  final  variable  CENTER  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  TextAnchor.CENTER  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setFont(getLabelFont());    TextAnchor.CENTER  =  getLabelFont();	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  CENTER	3	None	add
38	[BUG]  [BUGGY]  Label  w  =(float)state.getWidth();  labely  =(float)labelBounds.getCursor()  -  insets.getBottom();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Label  w  =(float)state.getWidth();  labely  =(float)labelBounds.getCursor()  -  insets.getBottom();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Label  w  =(float)state.getWidth();  labely  =(float)labelBounds.getCursor()  -  insets.getBottom();	      Label    w    =(float)labelBounds.getWidth();    labely    =(float)state.getCursor()    -    insets.getBottom();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
39	[BUG]  [BUGGY]      g2.setFont(getLabelFont());  TextAnchor.CENTER,  getLabelFont());  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      g2.setFont(getLabelFont());  TextAnchor.CENTER,  getLabelFont());  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        g2.setFont(getLabelFont());    TextAnchor.CENTER,  getLabelFont());	  	non-compiled	[CE]  not  a  statement	3	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	add	        Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();	  	compilable	  [FE]  AssertionFailedError  	5	22	add
41	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	        Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();	  	compilable	  [FE]  AssertionFailedError  	5	22	add
42	[BUG]  [BUGGY]  Label  w  =(float)insets.getWidth();  labely  =(float)state.getCursor()  -  insets.getBottom();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Label  w  =(float)insets.getWidth();  labely  =(float)state.getCursor()  -  insets.getBottom();  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Label  w  =(float)insets.getWidth();  labely  =(float)state.getCursor()  -  insets.getBottom();	      Label    w    =(float)labelBounds.getWidth();    labely    =(float)state.getCursor()    -    insets.getBottom();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
43	[BUG]  [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx!=  Labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [CE]  cannot  find  symbol  Labelx  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  if(labelx!=  Labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    if(labelx!=  Labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  	non-compiled	[CE]  cannot  find  symbol  Labelx	7	None	add
44	[BUG]  [BUGGY]  Labelx  w  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Labelx  w  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Labelx  w  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);	  if(labelx!=    labelx)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
45	[BUG]  [BUGGY]  if(edge  ==  RectangleEdge.TOP)  {  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  if(edge  ==  RectangleEdge.TOP)  {  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }  [BUGGY]    labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	if(edge  ==  RectangleEdge.TOP)  {  if(labelx!=  labelx)  {  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  }	  if(labelx!=    0.0)    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    }    else    {    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  float  labely  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CE]  variable  labely  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]        AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  float  labely  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	float  labely  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);	      float    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f,    w,    h);    	non-compiled	[CE]  variable  labely  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	9	None	replace
47	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(g2,  w,  h);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);    [BUGGY]  Font  labelFont  =  getLabelFont(g2,  w,  h);  [BUGGY]    hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,      labely  -  h  /  2.0f,  w,  h);  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  +  insets.getBottom());  }  else  if  (edge  ==  RectangleEdge.BOTTOM)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1126	1127	22	replace	Font  labelFont  =  getLabelFont(g2,  w,  h);	      Font    labelFont    =    getLabelFont();    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	6	None	replace
