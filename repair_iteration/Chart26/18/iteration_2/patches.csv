bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  insets  =  g2.createOutsetRectangle(bounds);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  insets  =  g2.createOutsetRectangle(bounds);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	insets  =  g2.createOutsetRectangle(bounds);	  insets    =    bounds.createOutsetRectangle(insets);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
2	[BUG]  [BUGGY]  RectangleEdge  edge  =  bounds.getBounds();  [CE]  variable  edge  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleEdge  edge  =  bounds.getBounds();  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleEdge  edge  =  bounds.getBounds();	          RectangleEdge    edge    =    insets.getBounds();    	non-compiled	[CE]  variable  edge  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	21	None	replace
3	[BUG]  [BUGGY]  bounds  =  insets.createOutsetInsetRectangle(bounds,  g2,  edge);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  insets.createOutsetInsetRectangle(bounds,  g2,  edge);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  insets.createOutsetInsetRectangle(bounds,  g2,  edge);	  bounds    =    insets.createOutsetInsetRectangle(bounds,    edge);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
4	[BUG]  [BUGGY]  x  =  insets.createInsetRectangle(bounds);  [CE]  cannot  find  symbol  x  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  x  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	x  =  insets.createInsetRectangle(bounds);	  bounds    =    insets.createInsetRectangle(bounds);    x    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  cannot  find  symbol  x	4	None	replace
5	[BUG]  [BUGGY]  RectangleInsets  insets  =  insets.createInsetRectangle(bounds);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleInsets  insets  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleInsets  insets  =  insets.createInsetRectangle(bounds);	  bounds    =    insets.createInsetRectangle(bounds);    x    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	4	None	replace
6	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getOutsetRectangle(axisLabel,  edge);  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]                AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getOutsetRectangle(axisLabel,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getOutsetRectangle(axisLabel,  edge);	  Rectangle2D    bounds    =    insets.getOutsetRectangle(bounds,    edge);    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	19	None	replace
7	[BUG]  [BUGGY]  bounds  =  g2.createOutsetInsetRectangle(bounds);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  g2.createOutsetInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  g2.createOutsetInsetRectangle(bounds);	  bounds    =    dataArea.createOutsetInsetRectangle(bounds);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
8	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(axisLabel));  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(axisLabel));  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(axisLabel));	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont().getFontMetrics(fm));    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	27	None	replace
9	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(angle));  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(angle));  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(angle));	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont().getFontMetrics(fm));    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	27	None	replace
10	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.createInsetRectangle(bounds);  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.createInsetRectangle(bounds);	  if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	8	None	replace
11	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getInsets()  +  1;  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getInsets()  +  1;  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getInsets()  +  1;	  Rectangle2D    bounds    =    insets.getInsets();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	17	None	replace
12	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getBounds()  +  1;  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getBounds()  +  1;  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getBounds()  +  1;	          Rectangle2D    bounds    =    insets.getBounds();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	11	None	replace
13	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.createOutsetRectangle(axisLabel,  edge);  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.createOutsetRectangle(axisLabel,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.createOutsetRectangle(axisLabel,  edge);	  Rectangle2D    bounds    =    insets.createOutsetRectangle(bounds,    edge);    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	16	None	replace
14	[BUG]  [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  bounds);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  bounds);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleInsets  insets  =  getLabelInsets(g2,  bounds);	  RectangleInsets    insets    =    getLabelInsets(bounds);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	22	None	replace
15	[BUG]  [BUGGY]  RectangleInsets  insets  =  getLabelInsets(bounds,  edge);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleInsets  insets  =  getLabelInsets(bounds,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleInsets  insets  =  getLabelInsets(bounds,  edge);	  RectangleInsets    insets    =    getLabelInsets(bounds);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	22	None	replace
16	[BUG]  [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  fm);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  fm);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  insets  =  getLabelInsets(g2,  fm);	  Rectangle2D    insets    =    getLabelInsets(g2,    edge);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	14	None	replace
17	[BUG]  [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  fm,  edge);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]                AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  fm,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  insets  =  getLabelInsets(g2,  fm,  edge);	  Rectangle2D    insets    =    getLabelInsets(g2,    edge);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	14	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }	  bounds    =    insets.createInsetRectangle(bounds);    bounds    =    insets.createInsetRectangle(bounds);    	compilable	  [FE]  AssertionFailedError  	2	22	replace
19	[BUG]  [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }	  bounds    =    insets.createInsetRectangle(bounds);    bounds    =    insets.createInsetRectangle(bounds);    	compilable	  [FE]  AssertionFailedError  	2	22	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  }	  bounds    =    insets.createInsetRectangle(bounds);    bounds    =    insets.createInsetRectangle(bounds);    	compilable	  [FE]  AssertionFailedError  	2	22	replace
21	[BUG]  [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  }	  bounds    =    insets.createInsetRectangle(bounds);    bounds    =    insets.createInsetRectangle(bounds);    	compilable	  [FE]  AssertionFailedError  	2	22	replace
22	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getInsets()  +  fm.getWidth();  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getInsets()  +  fm.getWidth();  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getInsets()  +  fm.getWidth();	  Rectangle2D    bounds    =    fm.getInsets()    +    insets.getWidth();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	28	None	replace
23	[BUG]  [BUGGY]  Rectangle2D  bounds  =  fm.getInsets()  +  insets.getHeight();  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  fm.getInsets()  +  insets.getHeight();  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  fm.getInsets()  +  insets.getHeight();	  Rectangle2D    bounds    =    fm.getInsets()    +    insets.getWidth();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	28	None	replace
24	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(axisLabel,  insets);  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(axisLabel,  insets);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(axisLabel,  insets);	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont()).getFontMetrics(insets);    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	26	None	replace
25	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(axisLabel);  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(axisLabel);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(axisLabel);	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont()).getFontMetrics(insets);    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	26	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
27	[BUG]  [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets  ==  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    if(insets  ==  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
29	[BUG]  [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets  ==  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets  ==  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    if(insets  ==  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }	  	compilable	  [FE]  AssertionFailedError  	7	22	add
30	[BUG]  [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  If(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  If(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    If(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }	  	non-compiled	[CE]  ';'  expected	7	None	add
31	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getRectangleInsets()  +  1;  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getRectangleInsets()  +  1;  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getRectangleInsets()  +  1;	          Rectangle2D    bounds    =    insets.getRectangleInsets();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	12	None	replace
32	[BUG]  [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  bounds);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  bounds);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  insets  =  getLabelInsets(g2,  bounds);	  Rectangle2D    insets    =    getLabelInsets(bounds);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	18	None	replace
33	[BUG]  [BUGGY]  RectangleEdge  edge  =  bounds.getBounds2D();  [CE]  variable  edge  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleEdge  edge  =  bounds.getBounds2D();  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleEdge  edge  =  bounds.getBounds2D();	  RectangleEdge    edge    =    insets.getBounds2D();    	non-compiled	[CE]  variable  edge  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	20	None	replace
34	[BUG]  [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  g2,  edge);  [CE]  no  suitable  method  found  for  createInsetRectangle(Rectangle2D,Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  g2,  edge);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  insets.createInsetRectangle(bounds,  g2,  edge);	  bounds    =    insets.createInsetRectangle(bounds,    edge);    	non-compiled	[CE]  no  suitable  method  found  for  createInsetRectangle(Rectangle2D,Graphics2D,RectangleEdge)	24	None	replace
35	[BUG]  [BUGGY]  bounds  =  insets.createInsetRectangle(g2,  edge);  [CE]  no  suitable  method  found  for  createInsetRectangle(Graphics2D,RectangleEdge)  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  insets.createInsetRectangle(g2,  edge);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  insets.createInsetRectangle(g2,  edge);	  bounds    =    insets.createInsetRectangle(bounds,    edge);    	non-compiled	[CE]  no  suitable  method  found  for  createInsetRectangle(Graphics2D,RectangleEdge)	24	None	replace
36	[BUG]  [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  fm);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  fm);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleInsets  insets  =  getLabelInsets(g2,  fm);	  RectangleInsets    insets    =    getLabelInsets(g2,    edge);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	15	None	replace
37	[BUG]  [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  fm,  edge);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  fm,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleInsets  insets  =  getLabelInsets(g2,  fm,  edge);	  RectangleInsets    insets    =    getLabelInsets(g2,    edge);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	15	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);	  	compilable	  [FE]  AssertionFailedError  	1	22	add
39	[BUG]  [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);	  	compilable	  [FE]  AssertionFailedError  	1	22	add
40	[BUG]  [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  insets  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  insets  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    insets  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);	  	non-compiled	[CE]  incompatible  types	1	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  g2.setPaint(getLabelPaint());  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	1	22	add
42	[BUG]  [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  g2.setPaint(getLabelPaint());  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	1	22	add
43	[BUG]  [BUGGY]  insets  =  insets.createInsetRectangle(bounds);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  insets  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	insets  =  insets.createInsetRectangle(bounds);	  bounds    =    insets.createInsetRectangle(bounds);    insets    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  incompatible  types	3	None	replace
44	[BUG]  [BUGGY]  Insets  insets  =  insets.createInsetRectangle(bounds);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Insets  insets  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Insets  insets  =  insets.createInsetRectangle(bounds);	  bounds    =    insets.createInsetRectangle(bounds);    insets    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
45	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getBounds2D()  +  1;  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getBounds2D()  +  1;  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getBounds2D()  +  1;	          Rectangle2D    bounds    =    insets.getBounds2D();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	10	None	replace
46	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont(),  insets);  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont(),  insets);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont(),  insets);	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont());    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	25	None	replace
47	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getBounds3D();  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getBounds3D();  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getBounds3D();	          Rectangle2D    bounds    =    insets.getBounds2D();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	10	None	replace
48	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(insets));  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(insets));  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(insets));	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont().getFontMetrics(fm));    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	27	None	replace
49	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getOutsetRectangle(bounds,  edge)+  1;  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]                AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getOutsetRectangle(bounds,  edge)+  1;  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getOutsetRectangle(bounds,  edge)+  1;	  Rectangle2D    bounds    =    insets.getOutsetRectangle(bounds,    edge);    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	19	None	replace
50	[BUG]  [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  edge,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  edge,  dataArea);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  insets.createInsetRectangle(bounds,  edge,  dataArea);	  bounds    =    insets.createInsetRectangle(bounds,    edge);    	non-compiled	[CE]  cannot  find  symbol  dataArea	24	None	replace
51	[BUG]  [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  edge,  g2);  [CE]  no  suitable  method  found  for  createInsetRectangle(Rectangle2D,RectangleEdge,Graphics2D)  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  edge,  g2);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  insets.createInsetRectangle(bounds,  edge,  g2);	  bounds    =    insets.createInsetRectangle(bounds,    edge);    	non-compiled	[CE]  no  suitable  method  found  for  createInsetRectangle(Rectangle2D,RectangleEdge,Graphics2D)	24	None	replace
52	[BUG]  [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  result  =  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  result  =  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  result  =	  bounds    =    insets.createInsetRectangle(bounds);    bounds    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  '.class'  expected	2	None	replace
53	[BUG]  [BUGGY]  bounds  =  dataArea.createOutsetInsetRectangle(bounds,  edge);  [CE]  cannot  find  symbol  dataArea  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  dataArea.createOutsetInsetRectangle(bounds,  edge);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  dataArea.createOutsetInsetRectangle(bounds,  edge);	  bounds    =    insets.createOutsetInsetRectangle(bounds,    edge);    	non-compiled	[CE]  cannot  find  symbol  dataArea	13	None	replace
54	[BUG]  [BUGGY]  bounds  =  result.createOutsetInsetRectangle(insets);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  result.createOutsetInsetRectangle(insets);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  result.createOutsetInsetRectangle(insets);	  bounds    =    insets.createOutsetInsetRectangle(result);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
55	[BUG]  [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  edge,  fm);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleInsets  insets  =  getLabelInsets(g2,  edge,  fm);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleInsets  insets  =  getLabelInsets(g2,  edge,  fm);	  RectangleInsets    insets    =    getLabelInsets(g2,    edge);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	15	None	replace
56	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(bounds);  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(bounds);	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont()).getFontMetrics(insets);    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	26	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	add	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);	  	compilable	  [FE]  AssertionFailedError  	1	22	add
58	[BUG]  [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds        =        insets.createInsetRectangle(bounds);        bounds    =    insets.createInsetRectangle(bounds);    bounds  =  insets.createInsetRectangle(bounds);	  	compilable	  [FE]  AssertionFailedError  	1	22	add
59	[BUG]  [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  edge,  fm);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  insets  =  getLabelInsets(g2,  edge,  fm);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  insets  =  getLabelInsets(g2,  edge,  fm);	  Rectangle2D    insets    =    getLabelInsets(g2,    edge);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	14	None	replace
60	[BUG]  [BUGGY]  if(edge  ==  RectangleEdge.RIGHT)  {  bounds  =  insets.createInsetRectangle(bounds);  insets  =  insets.createInsetRectangle(bounds);  }  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(edge  ==  RectangleEdge.RIGHT)  {  bounds  =  insets.createInsetRectangle(bounds);  insets  =  insets.createInsetRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(edge  ==  RectangleEdge.RIGHT)  {  bounds  =  insets.createInsetRectangle(bounds);  insets  =  insets.createInsetRectangle(bounds);  }	  bounds    =    insets.createInsetRectangle(bounds);    insets    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  incompatible  types	3	None	replace
61	[BUG]  [BUGGY]  angleInsets  insets  =  insets.createInsetRectangle(bounds);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  angleInsets  insets  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	angleInsets  insets  =  insets.createInsetRectangle(bounds);	  if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
62	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(result);  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]          AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(result);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont()).getFontMetrics(result);	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont()).getFontMetrics(insets);    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	26	None	replace
63	[BUG]  [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(result));  [CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(result));  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	FontMetrics  fm  =  g2.getFontMetrics(getLabelFont().getFontMetrics(result));	          FontMetrics    fm    =    g2.getFontMetrics(getLabelFont().getFontMetrics(fm));    	non-compiled	[CE]  variable  fm  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	27	None	replace
64	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getOutsetRectangle(bounds,  dataArea,  edge);  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]                AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getOutsetRectangle(bounds,  dataArea,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getOutsetRectangle(bounds,  dataArea,  edge);	  Rectangle2D    bounds    =    insets.getOutsetRectangle(bounds,    edge);    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	19	None	replace
65	[BUG]  [BUGGY]  Rectangle2D  insets  =  getLabelInsets(bounds,  edge);  [CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]              AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  insets  =  getLabelInsets(bounds,  edge);  [BUGGY]      bounds  =  insets.createOutsetRectangle(bounds);  double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  insets  =  getLabelInsets(bounds,  edge);	  Rectangle2D    insets    =    getLabelInsets(bounds);    	non-compiled	[CE]  variable  insets  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	18	None	replace
66	[BUG]  [BUGGY]  RectangleEdge  edge  =  insets.getBounds()  -  1;  [CE]  variable  edge  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  RectangleEdge  edge  =  insets.getBounds()  -  1;  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	RectangleEdge  edge  =  insets.getBounds()  -  1;	          RectangleEdge    edge    =    insets.getBounds();    	non-compiled	[CE]  variable  edge  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	21	None	replace
67	[BUG]  [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  edge,  fm);  [CE]  no  suitable  method  found  for  createInsetRectangle(Rectangle2D,RectangleEdge,FontMetrics)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  insets.createInsetRectangle(bounds,  edge,  fm);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  insets.createInsetRectangle(bounds,  edge,  fm);	  bounds    =    insets.createInsetRectangle(bounds,    edge);    	non-compiled	[CE]  no  suitable  method  found  for  createInsetRectangle(Rectangle2D,RectangleEdge,FontMetrics)	24	None	replace
68	[BUG]  [BUGGY]  Rectangle2D  bounds  =  insets.getBounds1D();  [CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)  [FE]        AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  Rectangle2D  bounds  =  insets.getBounds1D();  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	Rectangle2D  bounds  =  insets.getBounds1D();	          Rectangle2D    bounds    =    insets.getBounds2D();    	non-compiled	[CE]  variable  bounds  is  already  defined  in  method  getLabelEnclosure(Graphics2D,RectangleEdge)	10	None	replace
69	[BUG]  [BUGGY]  double  x  =  insets.createInsetRectangle(bounds);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  double  x  =  insets.createInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	double  x  =  insets.createInsetRectangle(bounds);	  bounds    =    insets.createInsetRectangle(bounds);    x    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  incompatible  types	4	None	replace
70	[BUG]  [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets!=  null)  {  bounds  =  insets.createRectangle(bounds);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(insets!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  }  if(insets!=  null)  {  bounds  =  insets.createRectangle(bounds);  }  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(insets!=    null)    {    bounds    =    insets.createInsetRectangle(bounds);    }    if(insets!=  null)  {  bounds  =  insets.createRectangle(bounds);  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
71	[BUG]  [BUGGY]  bounds  =  this.bounds.createOutsetInsetRectangle(bounds);  [CE]  cannot  find  symbol  bounds  [FE]            AssertionFailedError      [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  bounds  =  this.bounds.createOutsetInsetRectangle(bounds);  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	bounds  =  this.bounds.createOutsetInsetRectangle(bounds);	  bounds    =    dataArea.createOutsetInsetRectangle(bounds);    	non-compiled	[CE]  cannot  find  symbol  bounds	23	None	replace
72	[BUG]  [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  result  =  new  Rectangle2D.Double();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      protected  Rectangle2D  getLabelEnclosure(Graphics2D  g2,  RectangleEdge  edge)  {  Rectangle2D  result  =  new  Rectangle2D.Double();  String  axisLabel  =  getLabel();  if  (axisLabel  !=  null  &&  !axisLabel.equals(     "     "))  {  FontMetrics  fm  =  g2.getFontMetrics(getLabelFont());  Rectangle2D  bounds  =  TextUtilities.getTextBounds(axisLabel,  g2,  fm);  RectangleInsets  insets  =  getLabelInsets();      [BUGGY]  if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  result  =  new  Rectangle2D.Double();  [BUGGY]      double  angle  =  getLabelAngle();  if  (edge  ==  RectangleEdge.LEFT  ||  edge  ==  RectangleEdge.RIGHT)  {  angle  =  angle  -  Math.PI  /  2.0;  }  double  x  =  bounds.getCenterX();  double  y  =  bounds.getCenterY();  AffineTransform  transformer  =  AffineTransform.getRotateInstance(angle,  x,  y);  Shape  labelBounds  =  transformer.createTransformedShape(bounds);  result  =  labelBounds.getBounds2D();  [CLASS]  Axis  [METHOD]  getLabelEnclosure  [RETURN_TYPE]  Rectangle2D  Graphics2D  g2  RectangleEdge  edge  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  labelBounds  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  bounds  result  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  length  tickMarkInsideLength  tickMarkOutsideLength  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  FontMetrics  fm  EventListenerList  listenerList  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  transformer  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1062	1062	22	replace	if(bounds!=  null)  {  bounds  =  insets.createInsetRectangle(bounds);  bounds  =  insets.createInsetRectangle(bounds);  }  else  {  result  =  new  Rectangle2D.Double();  result  =  new  Rectangle2D.Double();	  bounds    =    insets.createInsetRectangle(bounds);    bounds    =    insets.createInsetRectangle(bounds);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
