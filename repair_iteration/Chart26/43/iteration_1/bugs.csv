bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Font  labelFont  =  getLabelFont();  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	add	    Font  labelFont  =  getLabelFont();		compilable	  [FE]  AssertionFailedError  	86	22	add
2	[BUG]  [BUGGY]    Font  labelFont  =  getLabelFont();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Font  labelFont  =  getLabelFont();  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	    Font  labelFont  =  getLabelFont();		compilable	  [FE]  AssertionFailedError  	86	22	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Font  labelFont  =  g2.getFont();  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	add	    Font  labelFont  =  g2.getFont();		compilable	  [FE]  AssertionFailedError  	86	22	add
4	[BUG]  [BUGGY]    Font  labelFont  =  g2.getFont();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Font  labelFont  =  g2.getFont();  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	    Font  labelFont  =  g2.getFont();		compilable	  [FE]  AssertionFailedError  	86	22	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Font  labelFont  =  fm.getFont();  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	add	    Font  labelFont  =  fm.getFont();		compilable	  [FE]  AssertionFailedError  	86	22	add
6	[BUG]  [BUGGY]    Font  labelFont  =  fm.getFont();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Font  labelFont  =  fm.getFont();  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	    Font  labelFont  =  fm.getFont();		compilable	  [FE]  AssertionFailedError  	86	22	add
7	[BUG]  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds.getWidth());  [CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds.getWidth());  [BUGGY]  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds.getWidth());	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  	non-compiled	[CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;	85	None	replace
8	[BUG]  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds.getHeight());  [CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds.getHeight());  [BUGGY]  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds.getHeight());	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  	non-compiled	[CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;	85	None	replace
9	[BUG]  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  dataArea);  [CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  dataArea);  [BUGGY]  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  dataArea);	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  	non-compiled	[CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;	85	None	replace
10	[BUG]  [BUGGY]    Shape  hotspot  =  t.createTransformedShape(labelBounds);  [CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    Shape  hotspot  =  t.createTransformedShape(labelBounds);  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	    Shape  hotspot  =  t.createTransformedShape(labelBounds);		non-compiled	[CE]  variable  hotspot  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	86	None	add
11	[BUG]  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds);  [CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds);  [BUGGY]  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds,  labelBounds);	Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  	non-compiled	[CE]  method  createTransformedShape  in  class  AffineTransform  cannot  be  applied  to  given  types;	85	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    g2.setPaint(getLabelPaint());  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	add	    g2.setPaint(getLabelPaint());		compilable	  [FE]  AssertionFailedError  	86	22	add
13	[BUG]  [BUGGY]    g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  g2.setFont(font);  g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  [BUGGY]    g2.setPaint(getLabelPaint());  [BUGGY]  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);  labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1117	1117	22	replace	    g2.setPaint(getLabelPaint());		compilable	  [FE]  AssertionFailedError  	86	22	add
