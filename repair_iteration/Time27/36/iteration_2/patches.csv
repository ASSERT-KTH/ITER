bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter,  suffix,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter,  suffix,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter,  suffix,  newField);	  iElementPairs.set(iElementPairs.size()    -    1,    originalPrinter,    newField,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	39	None	replace
2	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  suffix,  newField,  originalPrinter);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  suffix,  newField,  originalPrinter);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  suffix,  newField,  originalPrinter);	  iElementPairs.set(iElementPairs.size()    -    1,    originalPrinter,    newField,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	39	None	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
4	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
5	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
6	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
7	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
8	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
9	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
10	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	11	6	add
11	[BUG]  [BUGGY]  if(newField.getFieldType()!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  this.iFieldFormatters[newField.getFieldType()]  =  newField;  }  [CE]  incomparable  types:  int  and  <null>  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField.getFieldType()!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  this.iFieldFormatters[newField.getFieldType()]  =  newField;  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField.getFieldType()!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  this.iFieldFormatters[newField.getFieldType()]  =  newField;  }	          iElementPairs.clear();    iElementPairs.clear();    this.iFieldFormatters[newField.getFieldType()]    =    newField;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	6	None	replace
12	[BUG]  [BUGGY]  if(newField.getFieldType()  ==  null)  {  iElementPairs.clear();  iElementPairs.clear();  this.iFieldFormatters[newField.getFieldType()]  =  newField;  }  [CE]  incomparable  types:  int  and  <null>  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField.getFieldType()  ==  null)  {  iElementPairs.clear();  iElementPairs.clear();  this.iFieldFormatters[newField.getFieldType()]  =  newField;  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField.getFieldType()  ==  null)  {  iElementPairs.clear();  iElementPairs.clear();  this.iFieldFormatters[newField.getFieldType()]  =  newField;  }	          iElementPairs.clear();    iElementPairs.clear();    this.iFieldFormatters[newField.getFieldType()]    =    newField;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	6	None	replace
13	[BUG]  [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();        if(newField!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	83	None	add
14	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.clear();        if(newField!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	6	add
15	[BUG]  [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();        if(newField!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	6	add
16	[BUG]  [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();        if(newField!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	83	None	add
17	[BUG]  [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  newField);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,FieldFormatter)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();        if(newField!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  newField);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,FieldFormatter)	83	None	add
18	[BUG]  [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();    if(newField!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();        if(newField!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	83	None	add
19	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(originalPrinter!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
20	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
21	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	77	6	replace
22	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	77	6	replace
23	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }	          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
24	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [FE]  IllegalArgumentException  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }	          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	77	1	replace
25	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	76	6	add
26	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	76	6	add
27	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  2,  newField);  [CE]  not  a  statement  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.size()  -  2,  newField);	  	non-compiled	[CE]  not  a  statement	76	None	add
28	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	76	6	add
29	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	76	6	add
30	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  1,  newField);  [CE]  not  a  statement  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.size()  -  1,  newField);	  	non-compiled	[CE]  not  a  statement	76	None	add
31	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]            java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	76	6	add
32	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]            java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	76	6	add
33	[BUG]  [BUGGY]  newField.setFormatters(iElementPairs,  originalPrinter);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setFormatters(iElementPairs,  originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setFormatters(iElementPairs,  originalPrinter);	  newField.setFormatters(iElementPairs);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
34	[BUG]  [BUGGY]  newField.setFormatters(iElementPairs,  newField);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setFormatters(iElementPairs,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setFormatters(iElementPairs,  newField);	  newField.setFormatters(iElementPairs);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
35	[BUG]  [BUGGY]  newField.setFormatters(iElementPairs,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setFormatters(iElementPairs,  iElementPairs);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setFormatters(iElementPairs,  iElementPairs);	  newField.setFormatters(iElementPairs);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
36	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatters[iElementPairs.getFieldType()];  [CE]  cannot  find  symbol  newFieldFormatters  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatters[iElementPairs.getFieldType()];  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatters[iElementPairs.getFieldType()];	          iElementPairs.clear();    iElementPairs.clear();    newField    =    newFieldFormatters[newField.getFieldType()];    	non-compiled	[CE]  cannot  find  symbol  newFieldFormatters	8	None	replace
37	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix,  newField);	  iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix,    field);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	80	None	replace
38	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()  -  3,  newField);	          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()    -    3,    newField);    	compilable	  [FE]  IllegalArgumentException  	90	6	replace
39	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()  -  3,  newField);	          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()    -    3,    newField);    	compilable	  [FE]  IllegalArgumentException  	90	6	replace
40	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
41	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
42	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
43	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
44	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
45	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
46	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
47	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
48	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
49	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	50	1	add
50	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.fieldFormatters  =  newFieldFormatters[iElementPairs.getFieldType()];  [CE]  cannot  find  symbol  fieldFormatters  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.fieldFormatters  =  newFieldFormatters[iElementPairs.getFieldType()];  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.clear();  iElementPairs.clear();  this.fieldFormatters  =  newFieldFormatters[iElementPairs.getFieldType()];	          iElementPairs.clear();    iElementPairs.clear();    this.fieldFormatters    =    newFieldFormatters[newField.getFieldType()];    	non-compiled	[CE]  cannot  find  symbol  fieldFormatters	87	None	replace
51	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iFieldFormatters[newField.getFieldType()  -  1]  =  null;  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iFieldFormatters[newField.getFieldType()  -  1]  =  null;	          iFieldFormatters[newField.getFieldType()]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	4	replace
52	[BUG]  [BUGGY]  iFieldFormatters[newField.getFieldType()  -  1]  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iFieldFormatters[newField.getFieldType()  -  1]  =  null;  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iFieldFormatters[newField.getFieldType()  -  1]  =  null;	          iFieldFormatters[newField.getFieldType()]    =    null;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	4	replace
53	[BUG]  [BUGGY]  iFieldFormatters[newField.getFieldType()  ],  newField;  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iFieldFormatters[newField.getFieldType()  ],  newField;  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iFieldFormatters[newField.getFieldType()  ],  newField;	          iFieldFormatters[newField.getFieldType()]    =    null;    	non-compiled	[CE]  not  a  statement	37	None	replace
54	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	10	6	replace
55	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	10	6	replace
56	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	10	6	replace
57	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	10	6	replace
58	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	59	6	add
59	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	59	6	add
60	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters.set(iElementPairs.size()  +  1,  newField);  [CE]  cannot  find  symbol  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    +    1,    newField);    iFieldFormatters.set(iElementPairs.size()  +  1,  newField);	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
61	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.set(iElementPairs.size()    +    1,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	59	6	add
62	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    +    1,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	59	6	add
63	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters[0]  =  newField;  iFieldFormatters[0]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iFieldFormatters[0]  =  newField;  iFieldFormatters[0]  =  newField;	          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]    =    newField;    	compilable	  [FE]  IllegalArgumentException  	51	6	replace
64	[BUG]  [BUGGY]  iFieldFormatters[0]  =  newField;  iFieldFormatters[0]  =  newField;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters[0]  =  newField;  iFieldFormatters[0]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iFieldFormatters[0]  =  newField;  iFieldFormatters[0]  =  newField;	          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]    =    newField;    	compilable	  [FE]  IllegalArgumentException  	51	6	replace
65	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters[0]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iFieldFormatters[0]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;	          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]    =    newField;    	compilable	  [FE]  IllegalArgumentException  	51	6	replace
66	[BUG]  [BUGGY]  iFieldFormatters[0]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters[0]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iFieldFormatters[0]  =  newField;  iFieldFormatters[newField.getFieldType()]  =  newField;	          iFieldFormatters[newField.getFieldType()]    =    newField;    iFieldFormatters[newField.getFieldType()]    =    newField;    	compilable	  [FE]  IllegalArgumentException  	51	6	replace
67	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.clear();    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
68	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.clear();    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.clear();    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
70	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.clear();    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
71	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.clear();    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
72	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.clear();    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
73	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
74	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	6	add
75	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix,  fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]            IllegalArgumentException      [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix,  fieldType);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix,  fieldType);	  iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol  fieldType	78	None	replace
76	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	6	replace
77	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	6	replace
78	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	6	replace
79	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	6	replace
80	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	6	replace
81	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	6	replace
82	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),  suffix,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),  suffix,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),  suffix,  newField);	  iElementPairs.set(iElementPairs.size()    -    1,    suffix,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	40	None	replace
83	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.add(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.add(newField);	  iElementPairs.remove(newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	20	6	replace
84	[BUG]  [BUGGY]  iElementPairs.add(newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.add(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.add(newField);	  iElementPairs.remove(newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	20	6	replace
85	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
86	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
87	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
88	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
89	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
90	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
91	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
92	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
93	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]            IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	44	6	add
94	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]            IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size()        -        2,        newField);        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	44	6	add
95	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
96	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
97	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
98	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
99	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
100	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
101	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  3,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
102	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  3,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	13	6	add
103	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	53	1	add
104	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	53	1	add
105	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	53	1	add
106	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	53	1	add
107	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iFieldFormatters[newField.getFieldType()]        =        newField;        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	53	1	add
108	[BUG]  [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iFieldFormatters[newField.getFieldType()]    =    newField;    iElementPairs.set(iElementPairs.size()  -  2,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iFieldFormatters[newField.getFieldType()]        =        newField;        iElementPairs.set(iElementPairs.size()    -    2,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  IllegalArgumentException  	53	1	add
109	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size()  -  3,  newField);	  	compilable	  [FE]  IllegalArgumentException  	57	6	add
110	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -  3,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size()  -  3,  newField);	  	compilable	  [FE]  IllegalArgumentException  	57	6	add
111	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -  4,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size()  -  4,  newField);	  	compilable	  [FE]  IllegalArgumentException  	57	6	add
112	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -  4,  newField);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -  4,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size()  -  4,  newField);	  	compilable	  [FE]  IllegalArgumentException  	57	6	add
113	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size()  -1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	57	6	add
114	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -1,  newField);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size()  -1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size()  -1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	57	6	add
115	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	57	6	add
116	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          IllegalArgumentException    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]          iElementPairs.set(iElementPairs.size()  -  3,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	                iElementPairs.set(iElementPairs.size()    -    3,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	57	6	add
117	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
118	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
119	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
120	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
121	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
122	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
123	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
124	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	608	608	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	61	6	add
125	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.remove(newField);    iElementPairs.remove(newField);	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
126	[BUG]  [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.remove(newField);    iElementPairs.remove(newField);	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
127	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  iElementPairs.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.remove(newField);    iElementPairs.remove(newField);  iElementPairs.remove(newField);	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
128	[BUG]  [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  iElementPairs.remove(newField);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  iElementPairs.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.remove(newField);    iElementPairs.remove(newField);  iElementPairs.remove(newField);	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
129	[BUG]  [BUGGY]  iElementPairs.remove(newField);  iFieldFormatters.remove(newField);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  iFieldFormatters.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.remove(newField);    iFieldFormatters.remove(newField);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
130	[BUG]  [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  newField.getFieldType()  =  getFieldType();  [CE]  unexpected  type  [FE]          IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  iElementPairs.remove(newField);  newField.getFieldType()  =  getFieldType();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.remove(newField);    iElementPairs.remove(newField);  newField.getFieldType()  =  getFieldType();	  	non-compiled	[CE]  unexpected  type	19	None	add
131	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	          iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	22	6	replace
132	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	          iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	22	6	replace
133	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	21	1	add
134	[BUG]  [BUGGY]          iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	21	1	add
