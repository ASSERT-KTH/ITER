bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
2	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalPrinter);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter;    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
3	[BUG]  [BUGGY]  iElementPairs.set(newField.size()  -  1,  iFieldFormatters);  [CE]  cannot  find  symbol  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.size()  -  1,  iFieldFormatters);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.size()  -  1,  iFieldFormatters);	  iElementPairs.set(iFieldFormatters.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
4	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	41	None	replace
5	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	41	None	replace
6	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [CE]  cannot  find  symbol  newField  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	41	None	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
8	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
9	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
10	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
11	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
12	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
13	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
14	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
15	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  new  FieldFormatter());  [CE]  no  suitable  constructor  found  for  FieldFormatter()  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  new  FieldFormatter());  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  new  FieldFormatter());	  iElementPairs.set(originalPrinter,    suffix,    field);    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter()	48	None	replace
16	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  originalPrinter);  [CE]  cannot  find  symbol  newField  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  2,  originalPrinter);	  iElementPairs.set(iElementPairs.size()    -    2,    suffix);    	non-compiled	[CE]  cannot  find  symbol  newField	7	None	replace
17	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  originalPrinter,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  2,  originalPrinter,  suffix);	  iElementPairs.set(iElementPairs.size()    -    2,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	7	None	replace
18	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix);  iFieldFormatters.remove(originalPrinter);  [CE]  no  suitable  method  found  for  remove(Object,PeriodFieldAffix)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix);  iFieldFormatters.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix);  iFieldFormatters.remove(originalPrinter);	          iElementPairs.remove(originalPrinter);    iFieldFormatters.remove(originalPrinter);    	non-compiled	[CE]  no  suitable  method  found  for  remove(Object,PeriodFieldAffix)	3	None	replace
19	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iFieldFormatters.remove(originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]            java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter);  iFieldFormatters.remove(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter);  iFieldFormatters.remove(originalPrinter,  suffix);	          iElementPairs.remove(originalPrinter);    iFieldFormatters.remove(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
20	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
21	[BUG]  [BUGGY]  iElementPairs.clear();  iFieldFormatters[0].getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  ';'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iFieldFormatters[0].getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iFieldFormatters[0].getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs    }    	non-compiled	[CE]  ';'  expected	20	None	replace
22	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  return  this;  [CE]  cannot  find  symbol  newField  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  return  this;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  return  this;	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  cannot  find  symbol  newField	53	None	replace
23	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  suffix);  return  this;  [CE]  cannot  find  symbol  newField  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  suffix);  return  this;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  suffix);  return  this;	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  cannot  find  symbol  newField	53	None	replace
24	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  source);  return  this;  [CE]  cannot  find  symbol  source  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  source);  return  this;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  source);  return  this;	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  cannot  find  symbol  source	53	None	replace
25	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
26	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
27	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  	4	6	add
28	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  	4	6	add
29	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	4	6	add
30	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	4	6	add
31	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
32	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
33	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
34	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
35	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
36	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
37	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  [CE]  cannot  find  symbol  newField  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol  newField	37	None	replace
38	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  source);  [CE]  cannot  find  symbol  source  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  source);	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol  source	37	None	replace
39	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  iFieldFormatters[iElementPairs.  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  iFieldFormatters[iElementPairs.  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter);  iFieldFormatters[iElementPairs.	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs.    	non-compiled	[CE]  ']'  expected	28	None	replace
40	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  this);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  this);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  this);	  iElementPairs.set(originalPrinter,    suffix,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	50	None	replace
41	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.getFieldType());  [CE]  non-static  method  getFieldType()  cannot  be  referenced  from  a  static  context  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.getFieldType());  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.getFieldType());	  iElementPairs.set(originalPrinter,    suffix,    newField);    	non-compiled	[CE]  non-static  method  getFieldType()  cannot  be  referenced  from  a  static  context	50	None	replace
42	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  [CE]  cannot  find  symbol  newField  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  newField	2	None	replace
43	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  newField  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  newField	2	None	replace
44	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  field);  [CE]  cannot  find  symbol  field  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix,  field);	  iElementPairs.remove(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  field	29	None	replace
45	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  index);  [CE]  cannot  find  symbol  index  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  index);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix,  index);	  iElementPairs.remove(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  index	29	None	replace
46	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  column);  [CE]  cannot  find  symbol  column  [FE]            java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  column);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix,  column);	  iElementPairs.remove(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  column	29	None	replace
47	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  newField);  [CE]  cannot  find  symbol  newField  [FE]              java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  newField);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix,  newField);	  iElementPairs.remove(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  newField	29	None	replace
48	[BUG]  [BUGGY]  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix);    }    	non-compiled	[CE]  incompatible  types	86	None	replace
49	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  [CE]  cannot  find  symbol  newField  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix);    }    	non-compiled	[CE]  cannot  find  symbol  newField	86	None	replace
50	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  initialPrinter.setIndexOutOfBounds(suffix,  originalPrinter);  [CE]  cannot  find  symbol  initialPrinter  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  initialPrinter.setIndexOutOfBounds(suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  initialPrinter.setIndexOutOfBounds(suffix,  originalPrinter);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  initialPrinter	46	None	replace
51	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  setIndexOutOfBounds(originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  setIndexOutOfBounds(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  setIndexOutOfBounds(originalPrinter,  suffix);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
52	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
53	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
54	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  originalPrinter.getIndexOutOfBoundsException();  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  originalPrinter.getIndexOutOfBoundsException();  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  originalPrinter.getIndexOutOfBoundsException();  iElementPairs.clear();  iElementPairs.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
55	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
56	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
58	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
59	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.setIndexOutOfBounds(originalPrinter);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.setIndexOutOfBounds(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  iElementPairs.setIndexOutOfBounds(originalPrinter);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
60	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  iPrinter.setIndexOutOfBounds(originalPrinter);  [CE]  cannot  find  symbol  iPrinter  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  iPrinter.setIndexOutOfBounds(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  iPrinter.setIndexOutOfBounds(originalPrinter);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  iPrinter	59	None	replace
61	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  fieldType));  [CE]  cannot  find  symbol  fieldType  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  fieldType));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  fieldType));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  cannot  find  symbol  fieldType	80	None	replace
62	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  this));  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix,PeriodFormatterBuilder)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  this));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  this));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix,PeriodFormatterBuilder)	80	None	replace
63	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  sourceName));  [CE]  cannot  find  symbol  sourceName  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  sourceName));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  sourceName));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  cannot  find  symbol  sourceName	80	None	replace
64	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  false));  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix,boolean)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  false));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  false));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix,boolean)	80	None	replace
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	6	add
66	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	6	add
67	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
68	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
69	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
70	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iE  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iE  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iE	  	non-compiled	[CE]  ';'  expected	42	None	add
71	[BUG]  [BUGGY]  iElementPairs.clear();  iFieldFormatters[iElementPairs.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iFieldFormatters[iElementPairs.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iFieldFormatters[iElementPairs.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
72	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iE  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iE  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iE	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs    	non-compiled	[CE]  ']'  expected	75	None	replace
73	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPair  [CE]  ']'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPair  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPair	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs    	non-compiled	[CE]  ']'  expected	75	None	replace
74	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
75	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
76	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
77	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
78	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
79	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
80	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
81	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	8	6	add
82	[BUG]  [BUGGY]  newField.setFormatters(iFieldFormatters);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setFormatters(iFieldFormatters);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setFormatters(iFieldFormatters);	          newField.setFormatters(newFieldFormatters);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
83	[BUG]  [BUGGY]  newField.setFormatters(iElementPairs);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setFormatters(iElementPairs);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setFormatters(iElementPairs);	          newField.setFormatters(newFieldFormatters);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
84	[BUG]  [BUGGY]  iFieldFormatters  =  newFieldFormatters;  [CE]  cannot  find  symbol  newFieldFormatters  [FE]            IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters  =  newFieldFormatters;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iFieldFormatters  =  newFieldFormatters;	          newField.setFormatters(newFieldFormatters);    	non-compiled	[CE]  cannot  find  symbol  newFieldFormatters	55	None	replace
85	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	9	6	replace
86	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	9	6	replace
87	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	9	6	replace
88	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	9	6	replace
89	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementP  [CE]  ';'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementP  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementP	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	non-compiled	[CE]  ';'  expected	9	None	replace
90	[BUG]  [BUGGY]  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()  +  suffix]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()  +  suffix]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()  +  suffix]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
91	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  field;  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  field;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  field;	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    suffix;    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
92	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  source;  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  source;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  source;	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    suffix;    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
93	[BUG]  [BUGGY]  iElementPairs.set(newField.size()  -  1,  iElementPairs.size());  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.size()  -  1,  iElementPairs.size());  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.size()  -  1,  iElementPairs.size());  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
94	[BUG]  [BUGGY]  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  2,  newField,  suffix);  [CE]  incompatible  types  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  2,  newField,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  2,  newField,  suffix);	  iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    2,    newField);    	non-compiled	[CE]  incompatible  types	21	None	replace
95	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
96	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	90	6	replace
97	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	90	6	replace
98	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	90	6	replace
99	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	90	6	replace
100	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.remove(newField);	          iElementPairs.clear();    	compilable	  [FE]  IllegalArgumentException  	12	6	replace
101	[BUG]  [BUGGY]  iElementPairs.remove(newField);  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.remove(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.remove(newField);	          iElementPairs.clear();    	compilable	  [FE]  IllegalArgumentException  	12	6	replace
102	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  [CE]  not  a  statement  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  not  a  statement	58	None	replace
103	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i!=  ';'  [CE]  not  a  statement  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i!=  ';'  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i!=  ';'	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  not  a  statement	58	None	replace
104	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	31	6	replace
105	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	31	6	replace
106	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iE  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iE  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iE	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  ';'  expected	31	None	replace
107	[BUG]  [BUGGY]  newField.setPrefix(newField,  originalPrinter);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setPrefix(newField,  originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setPrefix(newField,  originalPrinter);	          newField.setPrefix(newField);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
108	[BUG]  [BUGGY]  newField.setPrefix(newField,  iElementPairs);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setPrefix(newField,  iElementPairs);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setPrefix(newField,  iElementPairs);	          newField.setPrefix(newField);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
109	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	68	6	replace
110	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	68	6	replace
111	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementP  [CE]  ';'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementP  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementP	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	non-compiled	[CE]  ';'  expected	68	None	replace
112	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  ==  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  ==  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
113	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix  [CE]  ')'  expected  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  ')'  expected	56	None	replace
114	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  suffix;  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  suffix;	  iFieldFormatters[originalPrinter.getFieldType()    ],    null;    	non-compiled	[CE]  not  a  statement	88	None	replace
115	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  1,  newField);  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.size()  -  1,  newField);	  	non-compiled	[CE]  not  a  statement	89	None	add
116	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
117	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
118	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
119	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iFieldFormatters[newField.getFieldType()]  =  newField;  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
120	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
121	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
122	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]            java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
123	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]            java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
124	[BUG]  [BUGGY]  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iFieldFormatters);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [CE]  no  suitable  constructor  found  for  FieldFormatter(FieldFormatter,PeriodFieldAffix,FieldFormatter[])  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iFieldFormatters);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iFieldFormatters);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(FieldFormatter,PeriodFieldAffix,FieldFormatter[])	54	None	replace
125	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  [CE]  cannot  find  symbol  newField  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(originalPrinter);	          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  newField	5	None	replace
126	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  }  [CE]  cannot  find  symbol  newField  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  }	          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  newField	5	None	replace
127	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  newField  [FE]        IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  newField	5	None	replace
128	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  column);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  column);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  column);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
129	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
130	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
131	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters.set(iElementPairs.size(),  newField);  [CE]  cannot  find  symbol  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters.set(iElementPairs.size(),  newField);	  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters.set(iElementPairs.size(),    newField);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
132	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),  newField);  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]            java.lang.IndexOutOfBoundsException:  Index:  4      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),  newField);  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),  newField);  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(iElementPairs.size(),    newField);    iFieldFormatters.set(iElementPairs.size(),    newField);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
133	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	1	6	add
134	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	1	6	add
135	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	1	6	add
136	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	1	6	add
137	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(originalPrinter,  suffix);  iElementPairs.remove(originalPrinter);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(originalPrinter,  suffix);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(originalPrinter,  suffix);  iElementPairs.remove(originalPrinter);	  	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	1	None	add
138	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);	  	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	1	None	add
139	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	1	None	add
140	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]        IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.add(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.add(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(newField.size()    -    1,    iElementPairs);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	73	6	replace
141	[BUG]  [BUGGY]  iElementPairs.add(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]        IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.add(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.add(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(newField.size()    -    1,    iElementPairs);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	73	6	replace
142	[BUG]  [BUGGY]  iElementPairs.set(newField.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.size()  -  1,  newField);	  iElementPairs.set(newField.size()    -    1,    iElementPairs);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
143	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    i    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
144	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    i    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
145	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  originalPrinter,  suffix);	  iElementPairs.set(iElementPairs.size()    -    1,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	6	None	replace
146	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  field,  null);  [CE]  cannot  find  symbol  field  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  field,  null);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  field,  null);	  iElementPairs.set(originalPrinter,    suffix,    null);    	non-compiled	[CE]  cannot  find  symbol  field	51	None	replace
147	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  null);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  null);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  null);	  iElementPairs.set(originalPrinter,    suffix,    null);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	51	None	replace
148	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  null,  field);  [CE]  cannot  find  symbol  field  [FE]                            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  null,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  null,  field);	  iElementPairs.set(originalPrinter,    suffix,    null);    	non-compiled	[CE]  cannot  find  symbol  field	51	None	replace
149	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  suffix,  originalPrinter);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  suffix,  originalPrinter);	  iElementPairs.set(iElementPairs,    originalPrinter,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	64	None	replace
150	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  iElementPairs,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  iElementPairs,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  iElementPairs,  suffix);	  iElementPairs.set(iElementPairs,    originalPrinter,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	64	None	replace
151	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  field);  [CE]  cannot  find  symbol  field  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  field);	  iElementPairs.set(iElementPairs,    originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  field	64	None	replace
152	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  source);  [CE]  cannot  find  symbol  source  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  source);	  iElementPairs.set(iElementPairs,    originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  source	64	None	replace
153	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  this);  [CE]  no  suitable  method  found  for  add(FieldFormatter,PeriodFormatterBuilder)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  this);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  this);	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  method  found  for  add(FieldFormatter,PeriodFormatterBuilder)	81	None	replace
154	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  this));  [CE]  no  suitable  constructor  found  for  FieldFormatter(FieldFormatter,PeriodFieldAffix,PeriodFormatterBuilder)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  this));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  this));	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(FieldFormatter,PeriodFieldAffix,PeriodFormatterBuilder)	81	None	replace
155	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  null);  [CE]  no  suitable  method  found  for  add(FieldFormatter,<null>)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  null);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  null);	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  method  found  for  add(FieldFormatter,<null>)	81	None	replace
156	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  source);  [CE]  cannot  find  symbol  source  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  source);	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  cannot  find  symbol  source	81	None	replace
157	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
158	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
159	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	30	6	add
160	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	30	6	add
161	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	6	add
162	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  ArrayIndexOutOfBoundsException  [FE]        IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	6	add
163	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
164	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
165	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
166	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
167	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
168	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
169	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
170	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iFieldFormatters[newField.getFieldType()]  =  newField;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
171	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  suffix);  [CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  suffix);	  ((    FieldFormatter)originalPrinter).setSuffix(new    String(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)	35	None	replace
172	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  iElementPairs);  [CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  iElementPairs);	  ((    FieldFormatter)originalPrinter).setSuffix(new    String(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)	35	None	replace
173	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix,  suffix));  [CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix,PeriodFieldAffix)  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix,  suffix));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix,  suffix));	  ((    FieldFormatter)originalPrinter).setSuffix(new    String(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix,PeriodFieldAffix)	35	None	replace
174	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  source);  [CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  source);	  ((    FieldFormatter)originalPrinter).setSuffix(new    String(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)	35	None	replace
175	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
176	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
177	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
178	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
179	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
180	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iE  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iE  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iE	  	non-compiled	[CE]  ';'  expected	40	None	add
181	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol  newField	39	None	replace
182	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  newField  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol  newField	39	None	replace
183	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol  newField	39	None	replace
184	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix,  suffix));  [CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix,PeriodFieldAffix)  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix,  suffix));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix,  suffix));	  ((    FieldFormatter)originalPrinter).setSuffix(new    FieldFormatter(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix,PeriodFieldAffix)	36	None	replace
185	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(iElementPairs,  suffix));  [CE]  no  suitable  constructor  found  for  FieldFormatter(List<Object>,PeriodFieldAffix)  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(iElementPairs,  suffix));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(iElementPairs,  suffix));	  ((    FieldFormatter)originalPrinter).setSuffix(new    FieldFormatter(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(List<Object>,PeriodFieldAffix)	36	None	replace
186	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  suffix);  [CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  suffix);	  ((    FieldFormatter)originalPrinter).setSuffix(new    FieldFormatter(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)	36	None	replace
187	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  iElementPairs);  [CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)  [FE]                          IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  iElementPairs);	  ((    FieldFormatter)originalPrinter).setSuffix(new    FieldFormatter(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)	36	None	replace
188	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }	          iElementPairs.clear();    IElementPairs    iElementPairs.clear();    	non-compiled	[CE]  ';'  expected	61	None	replace
189	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }	          iElementPairs.clear();    IElementPairs    iElementPairs.clear();    	non-compiled	[CE]  ';'  expected	61	None	replace
190	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    IElementPairs    iElementPairs.clear();    	non-compiled	[CE]  	61	None	replace
191	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  newField,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs,  newField,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs,  newField,  newField);	          iElementPairs.set(newField,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
192	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs,  newField);	          iElementPairs.set(newField,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
193	[BUG]  [BUGGY]  iElementPairs.set(newField,  originalPrinter,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField,  originalPrinter,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField,  originalPrinter,  newField);	          iElementPairs.set(newField,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
194	[BUG]  [BUGGY]  iElementPairs.set(newField,  newField,  originalPrinter);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField,  newField,  originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField,  newField,  originalPrinter);	          iElementPairs.set(newField,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
195	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  1,  newField);  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.size()  -  1,  newField);	  	non-compiled	[CE]  not  a  statement	91	None	add
196	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	91	6	add
197	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	91	6	add
198	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	91	6	add
199	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.set(iElementPairs.size(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.set(iElementPairs.size(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	91	6	add
200	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	91	6	add
201	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    iElementPairs.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	91	6	add
202	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(originalPrinter,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(originalPrinter,  newField);	          iElementPairs.set(newField,    originalPrinter);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	14	None	replace
203	[BUG]  [BUGGY]  iElementPairs.set(newField,  originalPrinter,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField,  originalPrinter,  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField,  originalPrinter,  suffix);	          iElementPairs.set(newField,    originalPrinter);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	14	None	replace
204	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  newField,  originalPrinter);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs,  newField,  originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs,  newField,  originalPrinter);	          iElementPairs.set(newField,    originalPrinter);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	14	None	replace
205	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(newField.getFieldType(),  originalPrinter);	  iElementPairs.set(newField.getFieldType(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	78	6	replace
206	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  originalPrinter);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),  originalPrinter);	  iElementPairs.set(newField.getFieldType(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	78	6	replace
207	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  field);  [CE]  cannot  find  symbol  field  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  field);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),  field);	  iElementPairs.set(newField.getFieldType(),    newField);    	non-compiled	[CE]  cannot  find  symbol  field	78	None	replace
208	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(newField.getFieldType(),  suffix);	  iElementPairs.set(newField.getFieldType(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	78	6	replace
209	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  suffix);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),  suffix);	  iElementPairs.set(newField.getFieldType(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	78	6	replace
210	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix,  iElementPairs);	  ((    FieldFormatter)originalPrinter).setSuffix(suffix,    suffix);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
211	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  field);  [CE]  cannot  find  symbol  field  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(suffix,  field);	  ((    FieldFormatter)originalPrinter).setSuffix(suffix,    suffix);    	non-compiled	[CE]  cannot  find  symbol  field	34	None	replace
212	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  format);  [CE]  cannot  find  symbol  format  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  format);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(suffix,  format);	  ((    FieldFormatter)originalPrinter).setSuffix(suffix,    suffix);    	non-compiled	[CE]  cannot  find  symbol  format	34	None	replace
213	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	43	None	replace
214	[BUG]  [BUGGY]  newField.setPrefix(originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setPrefix(originalPrinter,  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setPrefix(originalPrinter,  suffix);	          newField.setPrefix(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
215	[BUG]  [BUGGY]  newField.setPrefix(originalPrinter,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setPrefix(originalPrinter,  iElementPairs);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setPrefix(originalPrinter,  iElementPairs);	          newField.setPrefix(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
216	[BUG]  [BUGGY]  newField.setPrefix(suffix);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setPrefix(suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setPrefix(suffix);	          newField.setPrefix(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
217	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  originalPrinter,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
218	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  suffix);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
219	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  source,  suffix);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  source,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iElementPairs,  source,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
220	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iSuffix,  originalPrinter);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iSuffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(iSuffix,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
221	[BUG]  [BUGGY]  iElementPairs.remove(originalprinter);  [CE]  cannot  find  symbol  originalprinter  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalprinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalprinter);	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);    	non-compiled	[CE]  cannot  find  symbol  originalprinter	69	None	replace
222	[BUG]  [BUGGY]  iElementPairs.remove(generator);  [CE]  cannot  find  symbol  generator  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(generator);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(generator);	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);    	non-compiled	[CE]  cannot  find  symbol  generator	69	None	replace
223	[BUG]  [BUGGY]  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iFieldFormatters.set(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
224	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	92	6	replace
225	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	92	6	replace
226	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  newFieldType);  [CE]  cannot  find  symbol  newFieldType  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  newFieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  newFieldType);	  iElementPairs.set(originalPrinter,    suffix,    fieldType);    	non-compiled	[CE]  cannot  find  symbol  newFieldType	49	None	replace
227	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  item);  [CE]  cannot  find  symbol  item  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  item);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  2,  item);	  iElementPairs.set(iElementPairs.size()    -    2,    newField);    	non-compiled	[CE]  cannot  find  symbol  item	22	None	replace
228	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.clear();    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	6	add
229	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	6	add
230	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField.set(iElementPairs.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  newField.set(iElementPairs.size()  -  1,  newField);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
231	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatters[newField.getFieldType()];  [CE]  cannot  find  symbol  newFieldFormatters  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatters[newField.getFieldType()];  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  newField  =  newFieldFormatters[newField.getFieldType()];	  	non-compiled	[CE]  cannot  find  symbol  newFieldFormatters	11	None	add
232	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newFieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  newField  =  newFieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
233	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
234	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
235	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters.set(iElementPairs.size()  +  1,  newField);  [CE]  cannot  find  symbol  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iFieldFormatters.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    iFieldFormatters.set(iElementPairs.size()  +  1,  newField);	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
236	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.size()  +  1,  newField);  [CE]  not  a  statement  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.size()  +  1,  newField);	  	non-compiled	[CE]  not  a  statement	84	None	add
237	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  newField	45	None	replace
238	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  incompatible  types	63	None	replace
239	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  iFieldFormatters);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  iFieldFormatters);	  iElementPairs.set(originalPrinter,    suffix,    iFieldFormatters);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	79	None	replace
240	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  suffix,  iFieldFormatters);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  suffix,  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  suffix,  iFieldFormatters);	  iElementPairs.set(originalPrinter,    suffix,    iFieldFormatters);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	79	None	replace
241	[BUG]  [BUGGY]  iElementPairs.set(iFieldFormatters,  suffix,  originalPrinter);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iFieldFormatters,  suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iFieldFormatters,  suffix,  originalPrinter);	  iElementPairs.set(originalPrinter,    suffix,    iFieldFormatters);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	79	None	replace
242	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  fieldFormatters);  [CE]  cannot  find  symbol  fieldFormatters  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  fieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  fieldFormatters);	  iElementPairs.set(originalPrinter,    suffix,    iFieldFormatters);    	non-compiled	[CE]  cannot  find  symbol  fieldFormatters	79	None	replace
243	[BUG]  [BUGGY]  iFieldFormatters.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iFieldFormatters.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iFieldFormatters.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
244	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix;  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix;	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	26	None	replace
245	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix);  [CE]  not  a  statement  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	26	None	replace
246	[BUG]  [BUGGY]  newField.setType(iType);  [CE]  cannot  find  symbol  iType  [FE]        IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setType(iType);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setType(iType);	          newField.setType(type);    	non-compiled	[CE]  cannot  find  symbol  iType	82	None	replace
247	[BUG]  [BUGGY]  newField.setType(originalPrinter);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setType(originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setType(originalPrinter);	          newField.setType(type);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
248	[BUG]  [BUGGY]  newField.setType(newType);  [CE]  cannot  find  symbol  newType  [FE]            IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setType(newType);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setType(newType);	          newField.setType(type);    	non-compiled	[CE]  cannot  find  symbol  newType	82	None	replace
249	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
250	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
251	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(newField.getFieldType(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	77	3	add
252	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType(),  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType(),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(newField.getFieldType(),  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	77	3	add
253	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	77	3	add
254	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	77	3	add
255	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(originalPrinter,  newField);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(originalPrinter,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(originalPrinter,  newField);	  	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	77	None	add
256	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.clear();  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs  =  iElementPairs.clear();	          iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.clear();    	non-compiled	[CE]  incompatible  types	60	None	replace
257	[BUG]  [BUGGY]  IElementPairs  iElementPairs  =  iElementPairs.clear();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  IElementPairs  iElementPairs  =  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	IElementPairs  iElementPairs  =  iElementPairs.clear();	          iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
258	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  Il  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	44	None	add
259	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
260	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException  [CE]  '('  or  '['  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException	  	non-compiled	[CE]  '('  or  '['  expected	44	None	add
261	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "  [CE]  unclosed  string  literal  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "	  	non-compiled	[CE]  unclosed  string  literal	44	None	add
262	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	6	add
263	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	6	add
264	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  this);  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  this);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  this);	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	80	None	replace
265	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
266	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
267	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	6	add
268	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	6	add
269	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	68	6	replace
270	[BUG]  [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	68	6	replace
271	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
272	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	41	None	replace
273	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  newField.size()  -  1,  iFieldFormatters);  [CE]  cannot  find  symbol  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs,  newField.size()  -  1,  iFieldFormatters);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs,  newField.size()  -  1,  iFieldFormatters);	  iElementPairs.set(iFieldFormatters.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
274	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  if(originalPrinter!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
275	[BUG]  [BUGGY]  iElementPairs.set(newField.size()  -  1,  iElementPairs);  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.size()  -  1,  iElementPairs);  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.size()  -  1,  iElementPairs);  iFieldFormatters.set(iElementPairs.size()  -  1,  newField);	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
276	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null,  suffix);  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  null,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ],    null;    	non-compiled	[CE]  not  a  statement	88	None	replace
277	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  fieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix,  fieldType);	  iElementPairs.remove(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  fieldType	29	None	replace
278	[BUG]  [BUGGY]  newField.setType(fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]        IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setType(fieldType);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setType(fieldType);	          newField.setType(type);    	non-compiled	[CE]  cannot  find  symbol  fieldType	82	None	replace
279	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  null,  fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  null,  fieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  null,  fieldType);	  iElementPairs.set(originalPrinter,    suffix,    null);    	non-compiled	[CE]  cannot  find  symbol  fieldType	51	None	replace
280	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4	  	non-compiled	[CE]  not  a  statement	91	None	add
281	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  1  [CE]  not  a  statement  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  1  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    java.lang.IndexOutOfBoundsException:  Index:  1	  	non-compiled	[CE]  not  a  statement	91	None	add
282	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  0  [CE]  not  a  statement  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  0  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    java.lang.IndexOutOfBoundsException:  Index:  0	  	non-compiled	[CE]  not  a  statement	91	None	add
283	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  i  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  i  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  i  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    i    	non-compiled	[CE]  not  a  statement	74	None	replace
284	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    i    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
285	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
286	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  fieldType));  [CE]  cannot  find  symbol  fieldType  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  fieldType));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  fieldType));	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  cannot  find  symbol  fieldType	81	None	replace
287	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iFieldFormatters.size()  -  1,  newField);  }  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iFieldFormatters.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iFieldFormatters.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iFieldFormatters.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
288	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iFieldFormatters.size()  -  1,  newField);  }  else  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iFieldFormatters.size()  -  1,  newField);  }  else  {  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iFieldFormatters.size()  -  1,  newField);  }  else  {	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iFieldFormatters.size()    -    1,    newField);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
289	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(newField.getFieldType()  -  1,  newField);	  iElementPairs.set(newField.getFieldType(),    newField);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	6	replace
290	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType()  -  1,  newField);  [FE]  ArrayIndexOutOfBoundsException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType()  -  1,  newField);	  iElementPairs.set(newField.getFieldType(),    newField);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	6	replace
291	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  setIndexOutOfBounds(originalPrinter);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  setIndexOutOfBounds(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  setIndexOutOfBounds(originalPrinter);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
292	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	31	6	replace
293	[BUG]  [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	31	6	replace
294	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementP  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementP  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  iElementP	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  ';'  expected	31	None	replace
295	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }	  iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  incompatible  types	52	None	replace
296	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  return  this;  }	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  incompatible  types	63	None	replace
297	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  incompatible  types	54	None	replace
298	[BUG]  [BUGGY]  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  incompatible  types  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  incompatible  types	54	None	replace
299	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
300	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
301	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
302	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
303	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
304	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs.  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs.  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs.	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs.    	non-compiled	[CE]  ']'  expected	28	None	replace
305	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	71	6	replace
306	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	71	6	replace
307	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(originalPrinter!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
308	[BUG]  [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  new  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  new  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  new	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  ')'  expected	90	None	replace
309	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElement,  suffix);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElement,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElement,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
310	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElementPairs,  suffix);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElementPairs,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElementPairs,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
311	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }	          iElementPairs.clear();    IElementPairs    iElementPairs.clear();    	non-compiled	[CE]  ';'  expected	61	None	replace
312	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
313	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
314	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
315	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
316	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
317	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	84	6	add
318	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [CE]  illegal  start  of  expression  [FE]          java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
319	[BUG]  [BUGGY]  iElementPairs.remove(source);  [CE]  cannot  find  symbol  source  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(source);	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);    	non-compiled	[CE]  cannot  find  symbol  source	69	None	replace
320	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffi  [CE]  ')'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffi  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffi	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  ')'  expected	56	None	replace
321	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol  newField	39	None	replace
322	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear()  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear()  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear()	  	non-compiled	[CE]  ';'  expected	42	None	add
323	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
324	[BUG]  [BUGGY]  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs    	non-compiled	[CE]  ']'  expected	75	None	replace
325	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.clear();  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.clear();  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	6	add
326	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.clear();  iElementPairs.remove(originalPrinter);  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.clear();  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.clear();  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	6	add
327	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	43	None	replace
328	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
329	[BUG]  [BUGGY]  iElementPairs.set(newField,  null);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField,  null);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField,  null);	          iElementPairs.set(newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	15	None	replace
330	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  source);  [CE]  cannot  find  symbol  source  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  2,  source);	  iElementPairs.set(iElementPairs.size()    -    2,    newField);    	non-compiled	[CE]  cannot  find  symbol  source	22	None	replace
331	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
332	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField.setIndexOutOfBounds(newField);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField.setIndexOutOfBounds(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  newField.setIndexOutOfBounds(newField);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
333	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	6	add
334	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	6	add
335	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField.setIndexOutOfBounds(originalPrinter);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField.setIndexOutOfBounds(originalPrinter);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  newField.setIndexOutOfBounds(originalPrinter);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
336	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	40	None	add
337	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	40	None	add
338	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	40	None	add
339	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear()  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear()  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear()	  	non-compiled	[CE]  ';'  expected	40	None	add
340	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.size()  -  1,  newField);  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.size()  -  1,  newField);	  	non-compiled	[CE]  not  a  statement	8	None	add
341	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(originalPrinter!=  null)  {  IndexOutOfBoundsException:  Index:  4  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(originalPrinter!=  null)  {  IndexOutOfBoundsException:  Index:  4  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(originalPrinter!=  null)  {  IndexOutOfBoundsException:  Index:  4	  	non-compiled	[CE]  not  a  statement	89	None	add
342	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  1  [CE]  not  a  statement  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  1  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    java.lang.IndexOutOfBoundsException:  Index:  1	  	non-compiled	[CE]  not  a  statement	89	None	add
343	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4  [CE]  not  a  statement  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4	  	non-compiled	[CE]  not  a  statement	89	None	add
344	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  0  [CE]  not  a  statement  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  java.lang.IndexOutOfBoundsException:  Index:  0  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    java.lang.IndexOutOfBoundsException:  Index:  0	  	non-compiled	[CE]  not  a  statement	89	None	add
345	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  initialPrinter,  suffix,  iFieldFormatters);  [CE]  cannot  find  symbol  initialPrinter  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  initialPrinter,  suffix,  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  initialPrinter,  suffix,  iFieldFormatters);	  iElementPairs.set(originalPrinter,    suffix,    iFieldFormatters);    	non-compiled	[CE]  cannot  find  symbol  initialPrinter	79	None	replace
346	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  sourceName,  suffix,  iFieldFormatters);  [CE]  cannot  find  symbol  sourceName  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  sourceName,  suffix,  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  sourceName,  suffix,  iFieldFormatters);	  iElementPairs.set(originalPrinter,    suffix,    iFieldFormatters);    	non-compiled	[CE]  cannot  find  symbol  sourceName	79	None	replace
347	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType());  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType());  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(newField.getFieldType());	  	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	77	None	add
348	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  }	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
349	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffi  [CE]  ')'  expected  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffi  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffi	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix);    }    	non-compiled	[CE]  ')'  expected	86	None	replace
350	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  [CE]  '('  or  '['  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new	  	non-compiled	[CE]  '('  or  '['  expected	44	None	add
351	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  iFieldFormatters);  [CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  iFieldFormatters);	  ((    FieldFormatter)originalPrinter).setSuffix(new    String(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)	35	None	replace
352	[BUG]  [BUGGY]  newField.setPrefix(originalPrinter,  null);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  newField.setPrefix(originalPrinter,  null);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	newField.setPrefix(originalPrinter,  null);	          newField.setPrefix(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
353	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix  +  1);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix  +  1);	  ((    FieldFormatter)originalPrinter).setSuffix(suffix,    suffix);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	34	None	replace
354	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix  -  1);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(suffix,  suffix  -  1);	  ((    FieldFormatter)originalPrinter).setSuffix(suffix,    suffix);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	34	None	replace
355	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  >=  ';'  [CE]  not  a  statement  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  >=  ';'  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  >=  ';'	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  not  a  statement	58	None	replace
356	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
357	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
358	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalField);  return  this;  [CE]  cannot  find  symbol  originalField  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  originalField);  return  this;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  originalField);  return  this;	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  cannot  find  symbol  originalField	53	None	replace
359	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  fieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs,  originalPrinter,  suffix,  fieldType);	  iElementPairs.set(iElementPairs,    originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  fieldType	64	None	replace
360	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
361	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
362	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
363	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.cle  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.cle  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.cle	  	non-compiled	[CE]  ';'  expected	38	None	add
364	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.clear()  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.clear()  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  ArrayIndexOutOfBoundsException  iElementPairs  =(ArrayIndexOutOfBounds)originalPrinter;  iElementPairs.clear();  iElementPairs.clear()	  	non-compiled	[CE]  ';'  expected	38	None	add
365	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  [CE]  ']'  expected  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[    	non-compiled	[CE]  ']'  expected	76	None	replace
366	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  }	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
367	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
368	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  this);  [CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  this);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  this);	  ((    FieldFormatter)originalPrinter).setSuffix(new    FieldFormatter(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)	36	None	replace
369	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	9	6	replace
370	[BUG]  [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size(),    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	9	6	replace
371	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	                iElementPairs.clear();    iElementPairs.clear();  newField  =  newField;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	6	add
372	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newField;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  newField  =  newField;  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  newField  =  newField;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	6	add
373	[BUG]  [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  setPrefix(newField);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]          iElementPairs.clear();  iElementPairs.clear();  setPrefix(newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	                iElementPairs.clear();    iElementPairs.clear();  setPrefix(newField);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
374	[BUG]  [BUGGY]  iElementPairs.set(newField,  iFieldFormatters);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField,  iFieldFormatters);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField,  iFieldFormatters);	          iElementPairs.set(newField,    newField);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
375	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  iPrinter.setIndexOutOfBounds(originalPrinter,  suffix);  [CE]  cannot  find  symbol  iPrinter  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  iPrinter.setIndexOutOfBounds(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  iPrinter.setIndexOutOfBounds(originalPrinter,  suffix);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  iPrinter	46	None	replace
376	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
377	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
378	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	89	6	add
379	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  new  [CE]  ')'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  else  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  new  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  new	  	non-compiled	[CE]  ')'  expected	89	None	add
380	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol  newField	39	None	replace
381	[BUG]  [BUGGY]  if(!(iElementPairs.isEmpty()  ||  originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(!(iElementPairs.isEmpty()  ||  originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(!(iElementPairs.isEmpty()  ||  originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  iElementPairs.clear();  }	          iElementPairs.clear();    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol  newField	39	None	replace
382	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
383	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	65	6	add
384	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  suffix);  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	26	None	replace
385	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  iFieldFormatters);  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  iFieldFormatters);	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	80	None	replace
386	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  originalField));  [CE]  cannot  find  symbol  originalField  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  originalField));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  originalField));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  cannot  find  symbol  originalField	80	None	replace
387	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  newField	45	None	replace
388	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.clear();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.clear();  }	          iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.clear();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
389	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
390	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
391	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
392	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  5;  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()  +  1,  newField);  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  5;  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()    +    1,    newField);    if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  5;  }  else  {  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  	non-compiled	[CE]  not  a  statement	84	None	add
393	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iElementPairs);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
394	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  this.suffix);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  this.suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  this.suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
395	[BUG]  [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField  ==  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  if(newField!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    else    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
396	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FieldType);  [CE]  cannot  find  symbol  FieldType  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FieldType);	  iElementPairs.set(originalPrinter,    suffix,    fieldType);    	non-compiled	[CE]  cannot  find  symbol  FieldType	49	None	replace
397	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  field);  return  this;  [CE]  cannot  find  symbol  field  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  field);  return  this;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  field);  return  this;	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  cannot  find  symbol  field	53	None	replace
398	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  item);  return  this;  [CE]  cannot  find  symbol  item  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  item);  return  this;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  item);  return  this;	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    return    this;    	non-compiled	[CE]  cannot  find  symbol  item	53	None	replace
399	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalprinter);  iElementPairs.add(originalPrinter);  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);  iElementPairs.remove(originalprinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.add(originalPrinter);    iElementPairs.remove(originalprinter);  iElementPairs.add(originalPrinter);	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	4	None	add
400	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
401	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size(),  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
402	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
403	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	67	6	add
404	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  originalPrinter);  [CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  FieldFormatter(suffix),  originalPrinter);	  ((    FieldFormatter)originalPrinter).setSuffix(new    FieldFormatter(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(PeriodFieldAffix)	36	None	replace
405	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs    	non-compiled	[CE]  ']'  expected	75	None	replace
406	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)iElementPairs;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)iElementPairs;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)iElementPairs;  iElementPairs.set(iElementPairs.size()  -  1,  newField,  suffix);  }	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
407	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)iElementPairs.get(iElementPairs.size()  -  1,  newField,  suffix);  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)iElementPairs.get(iElementPairs.size()  -  1,  newField,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs!=  null)  {  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =(FieldFormatter)iElementPairs.get(iElementPairs.size()  -  1,  newField,  suffix);  }	  if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField,    suffix);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
408	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  field);  [CE]  cannot  find  symbol  field  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  2,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  2,  field);	  iElementPairs.set(iElementPairs.size()    -    2,    newField);    	non-compiled	[CE]  cannot  find  symbol  field	22	None	replace
409	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(iElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter!=  null)  {  if(iElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter!=  null)  {  if(iElementPairs!=  null)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
410	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  field);  [CE]  cannot  find  symbol  field  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  field);	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol  field	37	None	replace
411	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  item);  [CE]  cannot  find  symbol  item  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  item);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  item);	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  cannot  find  symbol  item	37	None	replace
412	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	31	6	replace
413	[BUG]  [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	compilable	  [FE]  IllegalArgumentException  	31	6	replace
414	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  fieldName);  [CE]  cannot  find  symbol  fieldName  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(suffix,  fieldName);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(suffix,  fieldName);	  ((    FieldFormatter)originalPrinter).setSuffix(suffix,    suffix);    	non-compiled	[CE]  cannot  find  symbol  fieldName	34	None	replace
415	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  [CE]  ']'  expected  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[    	non-compiled	[CE]  ']'  expected	76	None	replace
416	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  i  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  i  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(originalPrinter!=  null)  {  iElementPairs  =(FieldFormatter)originalPrinter;  iElementPairs.set(iElementPairs.size()  -  1,  newField);  i	  if(originalPrinter!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs    =(FieldFormatter)originalPrinter;    iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[    	non-compiled	[CE]  ';'  expected	76	None	replace
417	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FIELD_NAME);  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FIELD_NAME);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FIELD_NAME);	  iElementPairs.set(originalPrinter,    suffix,    field);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	48	None	replace
418	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  FUNCTION  [FE]                    IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.set(originalPrinter,  suffix,  FieldFormatter.FUNCTION);	  iElementPairs.set(originalPrinter,    suffix,    field);    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	48	None	replace
419	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  file);  [CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  ((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  file);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	((  FieldFormatter)originalPrinter).setSuffix(new  String(suffix),  file);	  ((    FieldFormatter)originalPrinter).setSuffix(new    String(suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(PeriodFieldAffix)	35	None	replace
420	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  }  [CE]  cannot  find  symbol  originalprinter  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  }	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);    	non-compiled	[CE]  cannot  find  symbol  originalprinter	69	None	replace
421	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  [CE]  cannot  find  symbol  newField  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);    	non-compiled	[CE]  cannot  find  symbol  newField	69	None	replace
422	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  }  else  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  originalprinter  [FE]            java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  }  else  {  iElementPairs.clear();  }	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);    	non-compiled	[CE]  cannot  find  symbol  originalprinter	69	None	replace
423	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
424	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  i  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  i  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  else  {  i	  iElementPairs    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    iElementPairs.set(iElementPairs.size()    -    1,    newField);    	non-compiled	[CE]  ';'  expected	54	None	replace
425	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  originalPrinter.setIndexOutOfBounds(originalPrinter);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  originalPrinter.setIndexOutOfBounds(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.clear();  originalPrinter.setIndexOutOfBounds(originalPrinter);	          iElementPairs.clear();    iElementPairs.clear();    initialPrinter.setIndexOutOfBounds(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
426	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  newField  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol  newField	2	None	replace
427	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4;  }  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4;  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  4;  }	  	non-compiled	[CE]  not  a  statement	91	None	add
428	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  1  [CE]  not  a  statement  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=  null)  {  iElementPairs.set(iElementPairs.size(),  newField);  }  if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  1  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size(),        newField);        if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    if(newField!=  null)  {  IndexOutOfBoundsException:  Index:  1	  	non-compiled	[CE]  not  a  statement	91	None	add
429	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
430	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
431	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
432	[BUG]  [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]      java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()  +  1,  newField);  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  +  1,  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(iElementPairs.size()        -        1,        newField);        iElementPairs.set(iElementPairs.size()    +    1,    newField);    iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  +  1,  newField);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	70	6	add
433	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs.  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs.  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.clear();  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[iElementPairs.	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iFieldFormatters[iElementPairs.    	non-compiled	[CE]  ']'  expected	28	None	replace
434	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  [CE]  cannot  find  symbol  newField  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }	          iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    	non-compiled	[CE]  cannot  find  symbol  newField	43	None	replace
435	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  iFieldFormatters.remove(originalPrinter);  [CE]  cannot  find  symbol  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(originalPrinter);  iFieldFormatters.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(originalPrinter);  iFieldFormatters.remove(originalPrinter);	          iElementPairs.remove(originalPrinter);    iFieldFormatters.remove(originalPrinter);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
436	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  iFieldFormatters);  [CE]  no  suitable  method  found  for  remove(Object,PeriodFieldAffix,FieldFormatter[])  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix,  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.remove(originalPrinter,  suffix,  iFieldFormatters);	  iElementPairs.remove(originalPrinter,    suffix);    	non-compiled	[CE]  no  suitable  method  found  for  remove(Object,PeriodFieldAffix,FieldFormatter[])	29	None	replace
437	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  [CE]  ';'  expected  [FE]                      IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  ';'  expected	58	None	replace
438	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  ';  [CE]  not  a  statement  [FE]                        IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  ';  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  ';	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  not  a  statement	58	None	replace
439	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  ';'  [CE]  not  a  statement  [FE]                          IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  ';'  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  i  }  ';'	  if(iElementPairs!=    null)    {    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    i    	non-compiled	[CE]  not  a  statement	58	None	replace
440	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType()),  newField);  [CE]  ';'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType()),  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(newField.getFieldType()),  newField);	  	non-compiled	[CE]  ';'  expected	77	None	add
441	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType()  |  newField);  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType()  |  newField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(newField.getFieldType()  |  newField);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	77	None	add
442	[BUG]  [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType(),  oldField);  [CE]  cannot  find  symbol  oldField  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  iElementPairs.set(newField.getFieldType(),  newField);  iElementPairs.set(newField.getFieldType(),  oldField);  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	iElementPairs.set(newField.getFieldType(),    newField);    iElementPairs.set(newField.getFieldType(),  oldField);	  	non-compiled	[CE]  cannot  find  symbol  oldField	77	None	add
443	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	71	6	replace
444	[BUG]  [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]    java.lang.IndexOutOfBoundsException:  Index:  5    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(newField  instanceof  FieldFormatter)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iElementPairs.set(iElementPairs.size()  +  1,  newField);  }	  iElementPairs.set(iElementPairs.size()    -    1,    newField);    iElementPairs.set(iElementPairs.size()    +    1,    newField);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	71	6	replace
445	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalPrinter);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
446	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElement,  suffix);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElement,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElement,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
447	[BUG]  [BUGGY]  if(iElementPairs  ==  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  if(iElementPairs  ==  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	if(iElementPairs  ==  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs.clear();  }	          iElementPairs.clear();    IElementPairs    iElementPairs.clear();    	non-compiled	[CE]  ';'  expected	61	None	replace
448	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(0,  originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(0,  originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	6	add
449	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(0,  originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(0,  originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(0,  originalPrinter);  iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	6	add
450	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	6	add
451	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	6	add
452	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(0,  originalPrinter);  iElementPairs.set(0,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(0,  originalPrinter);  iElementPairs.set(0,  originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	1	6	add
453	[BUG]  [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(0,  originalPrinter);  iElementPairs.set(0,  originalPrinter);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);  iElementPairs.set(0,  originalPrinter);  iElementPairs.set(0,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.remove(originalPrinter);        iElementPairs.remove(originalPrinter);    iElementPairs.set(0,  originalPrinter);  iElementPairs.set(0,  originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	1	6	add
454	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        iElementPairs.clear();    if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
455	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
456	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	add	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
457	[BUG]  [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
458	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  iElementPairs);  [CE]  no  suitable  method  found  for  add(FieldFormatter,List<Object>)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  iElementPairs);	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  method  found  for  add(FieldFormatter,List<Object>)	81	None	replace
459	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  iFieldFormatters);  [CE]  no  suitable  method  found  for  add(FieldFormatter,FieldFormatter[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]  iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	iElementPairs.add(new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix),  iFieldFormatters);	  iElementPairs.add(new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  method  found  for  add(FieldFormatter,FieldFormatter[])	81	None	replace
460	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	add	if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	92	6	replace
461	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	607	607	1	replace	if(iElementPairs!=  null)  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  iElementPairs.set(iElementPairs.size(),    newField);    if(newField!=    null)    {    iElementPairs.set(iElementPairs.size(),    newField);    }    	compilable	  [FE]  IllegalArgumentException  	92	6	replace
462	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
463	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  i  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  i  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  i	  	non-compiled	[CE]  ';'  expected	40	None	add
464	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iE  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iE  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iE	  	non-compiled	[CE]  ';'  expected	40	None	add
465	[BUG]  [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }  clearPrefix();      [BUGGY]          iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  return  this;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	606	606	1	replace	                iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
