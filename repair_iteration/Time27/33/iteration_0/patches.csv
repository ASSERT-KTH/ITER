bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  [CE]  variable  originalPrinter  might  already  have  been  assigned  [FE]    IllegalArgumentException  [CONTEXT]  private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	    originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);		non-compiled	[CE]  variable  originalPrinter  might  already  have  been  assigned	65	None	add
2	[BUG]  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size()  +  1);  [CE]  variable  originalPrinter  might  already  have  been  assigned  [FE]      IllegalArgumentException  [CONTEXT]  private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size()  +  1);  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	    originalPrinter  =  iElementPairs.get(iElementPairs.size()  +  1);		non-compiled	[CE]  variable  originalPrinter  might  already  have  been  assigned	65	None	add
3	[BUG]  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size());  [CE]  variable  originalPrinter  might  already  have  been  assigned  [FE]        IllegalArgumentException  [CONTEXT]  private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size());  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	    originalPrinter  =  iElementPairs.get(iElementPairs.size());		non-compiled	[CE]  variable  originalPrinter  might  already  have  been  assigned	65	None	add
4	[BUG]  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [CE]  variable  originalPrinter  might  already  have  been  assigned  [FE]          IllegalArgumentException  [CONTEXT]  private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]    originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	    originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);		non-compiled	[CE]  variable  originalPrinter  might  already  have  been  assigned	65	None	add
5	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()]  =  null;  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()]  =  null;  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()]  =  null;	clearPrefix();  	non-compiled	[CE]  cannot  find  symbol	66	None	replace
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  iElementPairs.clear();  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();	clearPrefix();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	6	replace
7	[BUG]  [BUGGY]  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  iElementPairs.clear();  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();	clearPrefix();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	6	replace
8	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter(originalParser,  suffix);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter(originalParser,  suffix);  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()]  =  new  FieldFormatter(originalParser,  suffix);	clearPrefix();  	non-compiled	[CE]  cannot  find  symbol	66	None	replace
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]    [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	  	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
10	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [FE]          IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]    [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	  	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
11	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	clearPrefix();  	non-compiled	[CE]  cannot  find  symbol	66	None	replace
12	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null)  {  clearPrefix();  }	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
13	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  clearPrefix();  }	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
14	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];	clearPrefix();  	non-compiled	[CE]  cannot  find  symbol	66	None	replace
15	[BUG]  [BUGGY]    final  Object  originalParser  =  suffix.appendSuffix(originalPrinter);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]    IllegalArgumentException  [CONTEXT]  private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]    final  Object  originalParser  =  suffix.appendSuffix(originalPrinter);  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	    final  Object  originalParser  =  suffix.appendSuffix(originalPrinter);		non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	65	None	add
16	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
17	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
18	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	clearPrefix();  	compilable	  [FE]  IllegalStateException  	66	6	replace
19	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	clearPrefix();  	compilable	  [FE]  IllegalStateException  	66	6	replace
20	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
21	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	clearPrefix();  	compilable	  [FE]  IllegalArgumentException  	66	1	replace
