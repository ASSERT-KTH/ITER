bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
2	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
4	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
6	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
8	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
10	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
11	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	46	None	add
12	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	46	None	add
13	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	46	None	add
14	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	46	None	add
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	6	add
16	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	6	add
17	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	106	None	replace
18	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	106	None	replace
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	34	6	add
20	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	34	6	add
21	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iFieldFormatters.remove(originalPrinter);  [CE]  cannot  find  symbol  [FE]      java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iFieldFormatters.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iFieldFormatters.remove(originalPrinter);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
22	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
23	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  [FE]  IllegalArgumentException  [FE]        java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.remove(originalPrinter);    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	6	add
25	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	6	add
26	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter,  suffix);  [CE]  cannot  find  symbol  Preconditions  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter,  suffix);	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	52	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalParser  instanceof  FieldFormatter);  [CE]  cannot  find  symbol  Preconditions  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalParser  instanceof  FieldFormatter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalParser  instanceof  FieldFormatter);	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	52	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter);  [CE]  cannot  find  symbol  Preconditions  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter);	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	52	None	replace
29	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	50	None	replace
30	[BUG]  [BUGGY]  parent!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	50	None	replace
31	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix);  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	64	None	replace
32	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix;  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  newField,  suffix;	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	64	None	replace
33	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  originalParser));  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix,Object)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  originalParser));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  originalParser));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix,Object)	80	None	replace
34	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalParser,  suffix));  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalParser,  suffix));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalParser,  suffix));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	80	None	replace
35	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  originalParser);  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  originalParser);	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	80	None	replace
36	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  fieldType));  [CE]  cannot  find  symbol  fieldType  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  fieldType));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix,  fieldType));	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  cannot  find  symbol  fieldType	80	None	replace
37	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
38	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.NAME)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.NAME)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()  ==  Token.NAME)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
39	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FOR  &&  originalParser.getType()!=  Token.EXPR_RESULT)  {  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FOR  &&  originalParser.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()  ==  Token.FOR  &&  originalParser.getType()!=  Token.EXPR_RESULT)  {	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
40	[BUG]  [BUGGY]  ';'  expected  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ';'  expected  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	';'  expected	  if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	11	None	replace
41	[BUG]  [BUGGY]  newField((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  newField((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	newField((  FieldFormatter)originalPrinter,  suffix);	  if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
42	[BUG]  [BUGGY]  ';'  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ';'  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	';'	  if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	11	None	replace
43	[BUG]  [BUGGY]  ||  originalPrinter!=  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ||  originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	||  originalPrinter!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }	  parent!=    null    &&    originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
45	[BUG]  [BUGGY]  parent  ==  null  &&  originalParser!=  null)  {  clearPrefix();  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  &&  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  &&  originalParser!=  null)  {  clearPrefix();  }	  parent!=    null    &&    originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
46	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    StringFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
47	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefixes.contains(originalPrinter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefixes.contains(originalPrinter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefixes.contains(originalPrinter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    StringFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
48	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    StringFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  ((  FieldFormatter)originalPrinter).getFieldType();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	                ((    FieldFormatter)originalPrinter).getFieldType();    ((  FieldFormatter)originalPrinter).getFieldType();	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
50	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  ((  FieldFormatter)originalPrinter).getFieldType();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  ((  FieldFormatter)originalPrinter).getFieldType();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    ((  FieldFormatter)originalPrinter).getFieldType();	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
51	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
52	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
53	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  originalPrinter  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [CE]  variable  originalPrinter  might  already  have  been  assigned  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  originalPrinter  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  originalPrinter  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  }	  	non-compiled	[CE]  variable  originalPrinter  might  already  have  been  assigned	100	None	add
54	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
55	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
56	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [CE]  cannot  find  symbol  newField  [FE]            IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  newField);  }	  	non-compiled	[CE]  cannot  find  symbol  newField	100	None	add
57	[BUG]  [BUGGY]  final  Object  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [CE]  variable  originalPrinter  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]                  IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);	  if(iElementPairs.size()    >    0)    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    }    else    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    1);    }    	non-compiled	[CE]  variable  originalPrinter  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	56	None	replace
58	[BUG]  [BUGGY]  int  iElementPairs  =  iElementPairs.size();  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  int  iElementPairs  =  iElementPairs.size();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	int  iElementPairs  =  iElementPairs.size();	  iElementPairs.clear();    int    iElementPairs    =    iElementPairs.size();    	non-compiled	[CE]  int  cannot  be  dereferenced	69	None	replace
59	[BUG]  [BUGGY]  originalPrinter  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalPrinter  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalPrinter  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
60	[BUG]  [BUGGY]  originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
61	[BUG]  [BUGGY]  originalPrinter  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalPrinter  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalPrinter  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
62	[BUG]  [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  [CE]  cannot  find  symbol  OriginalPrinter  [FE]            IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);	  OriginalPrinter    =    iElementPairs.get(iElementPairs.size());    	non-compiled	[CE]  cannot  find  symbol  OriginalPrinter	58	None	replace
63	[BUG]  [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [CE]  cannot  find  symbol  OriginalPrinter  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);	  OriginalPrinter    =    iElementPairs.get(iElementPairs.size());    	non-compiled	[CE]  cannot  find  symbol  OriginalPrinter	58	None	replace
64	[BUG]  [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  +  1);  [CE]  cannot  find  symbol  OriginalPrinter  [FE]                IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  +  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	OriginalPrinter  =  iElementPairs.get(iElementPairs.size()  +  1);	  OriginalPrinter    =    iElementPairs.get(iElementPairs.size());    	non-compiled	[CE]  cannot  find  symbol  OriginalPrinter	58	None	replace
65	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(type,  suffix,  originalParser);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(type,  suffix,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(type,  suffix,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
66	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  field,  type);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  field,  type);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  field,  type);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
67	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  field);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  field);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
68	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  type,  field);  [CE]  cannot  find  symbol  [FE]                        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  type,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  type,  field);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
69	[BUG]  [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalParser    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	74	None	replace
70	[BUG]  [BUGGY]  originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalParser    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	74	None	replace
71	[BUG]  [BUGGY]  parent!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalParser    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	74	None	replace
72	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  if(originalPrinter!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  if(originalPrinter  ==  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  if(originalPrinter  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	2	1	replace
75	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	2	1	replace
76	[BUG]  [BUGGY]  FieldFormatter  originalParser  =(FieldFormatter)originalPrinter;  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  FieldFormatter  originalParser  =(FieldFormatter)originalPrinter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	FieldFormatter  originalParser  =(FieldFormatter)originalPrinter;	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	2	None	replace
77	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter,  suffix);  [CE]  no  suitable  method  found  for  remove(Object,PeriodFieldAffix)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter,  suffix);	  iElementPairs.remove(originalPrinter);    	non-compiled	[CE]  no  suitable  method  found  for  remove(Object,PeriodFieldAffix)	35	None	replace
78	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	compilable	  [FE]  IllegalArgumentException  	121	1	replace
79	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	compilable	  [FE]  IllegalArgumentException  	121	1	replace
80	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	44	None	add
81	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	44	None	add
82	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	44	None	add
83	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	44	None	add
84	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	44	None	add
85	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  IllegalStateException  	109	6	add
86	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  IllegalStateException  	109	6	add
87	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	109	None	add
88	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	109	6	add
89	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	109	6	add
90	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.add(originalPrinter);    iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	36	6	add
91	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);    iElementPairs.add(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	36	6	add
92	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix));  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix));  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);    iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix));	  	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	36	None	add
93	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  java.lang.IndexOutOfBoundsException:  Index:  9;  [CE]  not  a  statement  [FE]        java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  java.lang.IndexOutOfBoundsException:  Index:  9;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);    java.lang.IndexOutOfBoundsException:  Index:  9;	  	non-compiled	[CE]  not  a  statement	36	None	add
94	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.add(originalPrinter);    iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	36	1	add
95	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [FE]  IllegalArgumentException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.remove(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);    iElementPairs.remove(originalPrinter);	  	compilable	  [FE]  IllegalArgumentException  	36	1	add
96	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
97	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
98	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
99	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
100	[BUG]  [BUGGY]  parent  ==  null  &&  originalPrinter.getParser()!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  &&  originalPrinter.getParser()!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  &&  originalPrinter.getParser()!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
101	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
102	[BUG]  [BUGGY]  parent  ==  null  &&  originalPrinter.getParser()!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  &&  originalPrinter.getParser()!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  &&  originalPrinter.getParser()!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
103	[BUG]  [BUGGY]  IElementPairs  iElementPairs  =  iElementPairs.get();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  IElementPairs  iElementPairs  =  iElementPairs.get();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	IElementPairs  iElementPairs  =  iElementPairs.get();	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
104	[BUG]  [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  originalPrinter.get();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  originalPrinter.get();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  IElementPairs  iElementPairs  =  originalPrinter.get();	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
105	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  suffix;  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  suffix;	  iFieldFormatters[originalPrinter.getFieldType()]    =    originalParser;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
106	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  field;  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  field;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  field;	  iFieldFormatters[originalPrinter.getFieldType()]    =    originalParser;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
107	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  originalParser  =  iElementPairs.get(iElementPairs.size());  [CE]  variable  originalParser  might  already  have  been  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  originalParser  =  iElementPairs.get(iElementPairs.size());  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    originalParser  =  iElementPairs.get(iElementPairs.size());	  	non-compiled	[CE]  variable  originalParser  might  already  have  been  assigned	78	None	add
108	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  iElementPairs  =  iElementPairs.get(iElementPairs.size());  [CE]  incompatible  types  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  iElementPairs  =  iElementPairs.get(iElementPairs.size());  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    iElementPairs  =  iElementPairs.get(iElementPairs.size());	  	non-compiled	[CE]  incompatible  types	78	None	add
109	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  OriginalParser  =  iElementPairs.get(iElementPairs.size());  [CE]  cannot  find  symbol  OriginalParser  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  OriginalParser  =  iElementPairs.get(iElementPairs.size());  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    OriginalParser  =  iElementPairs.get(iElementPairs.size());	  	non-compiled	[CE]  cannot  find  symbol  OriginalParser	78	None	add
110	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  final  java.lang.IndexOutOfBoundsException  :  IndexOutOfBoundsException.appendSuffix(suffix);  [CE]  <identifier>  expected  [FE]          java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  final  java.lang.IndexOutOfBoundsException  :  IndexOutOfBoundsException.appendSuffix(suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    final  java.lang.IndexOutOfBoundsException  :  IndexOutOfBoundsException.appendSuffix(suffix);	  	non-compiled	[CE]  <identifier>  expected	78	None	add
111	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalParser);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
112	[BUG]  [BUGGY]  iFieldFormatters[originalElementPairs.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalElementPairs);  [CE]  cannot  find  symbol  originalElementPairs  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalElementPairs.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalElementPairs.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol  originalElementPairs	102	None	replace
113	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalPrinter);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
114	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  sourceName);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  sourceName);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
115	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  sourceName,  suffix);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  sourceName,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  sourceName,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
116	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,(  FieldFormatter)originalPrinter);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,(  FieldFormatter)originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,(  FieldFormatter)originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION,  suffix);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION,  suffix);	  Preconditions.checkArgument(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalParser.getType()  ==  FieldFormatter.FUNCTION);	  Preconditions.checkArgument(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkArgument(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkArgument(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkArgument(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FUNCTION);	  Preconditions.checkArgument(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
120	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
121	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
122	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
123	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
124	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
125	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
126	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
127	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
128	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
129	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
130	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
131	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
132	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
133	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
134	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  	compilable	  [FE]  IllegalArgumentException  	48	1	add
135	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  	compilable	  [FE]  IllegalArgumentException  	48	1	add
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  	compilable	  [FE]  IllegalStateException  	48	6	add
137	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  	compilable	  [FE]  IllegalStateException  	48	6	add
138	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to. ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to. ");  }	  	compilable	  [FE]  IllegalArgumentException  	48	1	add
139	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to. ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to. ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to. ");  }	  	compilable	  [FE]  IllegalArgumentException  	48	1	add
140	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " "));  }  [CE]  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " "));  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " "));  }	  	non-compiled	[CE]  	48	None	add
141	[BUG]  [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]            IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iElementPairs.appendSuffix(suffix);	  final    Object    originalParser    =    suffix.appendSuffix(printer);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	117	None	replace
142	[BUG]  [BUGGY]  final  Object  originalParser  =  printer.appendSuffix(suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  printer.appendSuffix(suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  printer.appendSuffix(suffix);	  final    Object    originalParser    =    suffix.appendSuffix(printer);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	117	None	replace
143	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iPrinter);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]                IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iPrinter);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(iPrinter);	  final    Object    originalParser    =    suffix.appendSuffix(printer);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	117	None	replace
144	[BUG]  [BUGGY]  IElementPairs  iElementPairs  =  iElementPairs.get(0);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  IElementPairs  iElementPairs  =  iElementPairs.get(0);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	IElementPairs  iElementPairs  =  iElementPairs.get(0);	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
145	[BUG]  [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(1);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(1);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(1);	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
146	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  }  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  }	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
147	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
148	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
149	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
150	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
151	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
152	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
153	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser  ==  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser  ==  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
154	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser  ==  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser  ==  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser  ==  null  ||  originalPrinter  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
155	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  originalElementPairs);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  originalElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
156	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  iElementPairs);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
157	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  column);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  column);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  column);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
158	[BUG]  [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
159	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
160	[BUG]  [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
161	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ],    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	86	None	replace
162	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  originalElementPairs);  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  originalElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ],    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	86	None	replace
163	[BUG]  [BUGGY]  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
164	[BUG]  [BUGGY]  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
165	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
166	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    iElementPairs.clear();  iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
167	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
168	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
169	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
170	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
172	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
173	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iElementPairs,  suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iElementPairs,  suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(iElementPairs,  suffix);	  final    Object    originalParser    =    suffix.appendSuffix(originalPrinter,    suffix);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	118	None	replace
174	[BUG]  [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(originalPrinter,  suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]                IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(originalPrinter,  suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iElementPairs.appendSuffix(originalPrinter,  suffix);	  final    Object    originalParser    =    suffix.appendSuffix(originalPrinter,    suffix);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	118	None	replace
175	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(prefix,  suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]                  IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(prefix,  suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(prefix,  suffix);	  final    Object    originalParser    =    suffix.appendSuffix(originalPrinter,    suffix);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	118	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  ==  null);  [CE]  cannot  find  symbol  Preconditions  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  ==  null);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  ==  null);	  Preconditions.checkState(originalPrinter!=    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	68	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null,  suffix);  [CE]  cannot  find  symbol  Preconditions  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  null,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null,  suffix);	  Preconditions.checkState(originalPrinter!=    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	68	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null  &&  originalParser.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  null  &&  originalParser.getType()  ==  Token.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null  &&  originalParser.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(originalPrinter!=    null);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
179	[BUG]  [BUGGY]  final  if(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  final  if(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	final  if(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalPrinter.getParser();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
180	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalPrinter  =  printer.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  printer  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalPrinter  =  printer.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalPrinter  =  printer.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalPrinter.getParser();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  printer	99	None	replace
181	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalPrinter.getParser();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
182	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originalParser);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
183	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  sourceName);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  sourceName);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
184	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originalParser);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
185	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	add	originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);	  originalParser    =    iElementPairs.get(iElementPairs.size());    	compilable	  [FE]  IllegalArgumentException  	79	1	replace
186	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);	  originalParser    =    iElementPairs.get(iElementPairs.size());    	compilable	  [FE]  IllegalArgumentException  	79	1	replace
187	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	add	originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);	  originalParser    =    iElementPairs.get(iElementPairs.size());    	compilable	  [FE]  IllegalArgumentException  	79	1	replace
188	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);  [FE]  IllegalArgumentException  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);	  originalParser    =    iElementPairs.get(iElementPairs.size());    	compilable	  [FE]  IllegalArgumentException  	79	1	replace
189	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	add	originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);	  originalParser    =    iElementPairs.get(iElementPairs.size());    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	79	6	replace
190	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  [FE]        java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);	  originalParser    =    iElementPairs.get(iElementPairs.size());    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  5  	79	6	replace
191	[BUG]  [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
192	[BUG]  [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
193	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  originalPrinter);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
194	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  source);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  source);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
195	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  item);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  item);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  item);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
196	[BUG]  [BUGGY]  parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
197	[BUG]  [BUGGY]  parent!=  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
198	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.isPrefix())  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.isPrefix())  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.isPrefix())  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
199	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.NAME)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.NAME)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.NAME)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
200	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.isFormatter())  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.isFormatter())  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.isFormatter())  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
201	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	30	6	add
202	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	30	6	add
203	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	30	6	add
204	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	30	6	add
205	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	30	None	add
206	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
207	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
208	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
209	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
210	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  If(originalPrinter  ==  null)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  If(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter    ==    null)    {    clearPrefix();    }    If(originalPrinter  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  ';'  expected	24	None	add
211	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent    ==    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	76	None	replace
212	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  parent    ==    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	76	None	replace
213	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	27	1	replace
214	[BUG]  [BUGGY]  if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	27	1	replace
215	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null  &&  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	27	1	replace
216	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  &&  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	27	1	replace
217	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	27	None	replace
218	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	94	1	replace
219	[BUG]  [BUGGY]  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	94	1	replace
220	[BUG]  [BUGGY]  If(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  If(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	If(originalPrinter!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	94	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME,  suffix);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME,  suffix);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FIELD_NAME);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FIELD_NAME);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
223	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()!=  FieldFormatter.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter.getType()!=  FieldFormatter.FIELD_NAME);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()!=  FieldFormatter.FIELD_NAME);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
224	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  Field,  FieldFormatter>();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  Field,  FieldFormatter>();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs  =  new  HashMap  <  Field,  FieldFormatter>();	  iElementPairs.clear();    iElementPairs    =    new    HashMap    <    String,    FieldFormatter>();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
225	[BUG]  [BUGGY]  null,  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  null,  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	null,  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();	  iElementPairs.clear();    iElementPairs    =    new    HashMap    <    String,    FieldFormatter>();    	non-compiled	[CE]  not  a  statement	71	None	replace
226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	29	1	replace
227	[BUG]  [BUGGY]  if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	29	1	replace
228	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	29	1	replace
229	[BUG]  [BUGGY]  if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	29	1	replace
230	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	120	1	add
231	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	120	1	add
232	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	120	None	add
233	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	120	6	add
234	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	120	6	add
235	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
236	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
237	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
238	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
239	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
240	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
241	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  If(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  If(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    If(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  ';'  expected	111	None	add
242	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setFieldType(suffix);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).setFieldType(suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).setFieldType(suffix);	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
243	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType(),  suffix;  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType(),  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).getFieldType(),  suffix;	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  ';'  expected	101	None	replace
244	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType()  :  null;  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType()  :  null;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).getFieldType()  :  null;	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  ';'  expected	101	None	replace
245	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iElementPairs);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  iElementPairs);	  iFieldFormatters[originalParser.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
246	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);	  iFieldFormatters[originalParser.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
247	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  source);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  source);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
248	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	107	None	replace
249	[BUG]  [BUGGY]  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	107	None	replace
250	[BUG]  [BUGGY]  final  Object  originalParser  =  iPrinter.appendSuffix(iElementPairs);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iPrinter.appendSuffix(iElementPairs);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iPrinter.appendSuffix(iElementPairs);	  final    Object    originalParser    =    suffix.appendSuffix(iElementPairs);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	20	None	replace
251	[BUG]  [BUGGY]  parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }	  parent!=    null    &&    originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
252	[BUG]  [BUGGY]  parent  ==  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  &&  originalPrinter!=  null)  {  clearPrefix();  }	  parent!=    null    &&    originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
253	[BUG]  [BUGGY]  parserFormatter  =(ParserFormatter)originalPrinter.clone();  [CE]  cannot  find  symbol  parserFormatter  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parserFormatter  =(ParserFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parserFormatter  =(ParserFormatter)originalPrinter.clone();	  parentFormatter    =(ParserFormatter)originalPrinter.clone();    	non-compiled	[CE]  cannot  find  symbol  parserFormatter	72	None	replace
254	[BUG]  [BUGGY]  originalFormatter  =(ParserFormatter)originalPrinter.clone();  [CE]  cannot  find  symbol  originalFormatter  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalFormatter  =(ParserFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalFormatter  =(ParserFormatter)originalPrinter.clone();	  parentFormatter    =(ParserFormatter)originalPrinter.clone();    	non-compiled	[CE]  cannot  find  symbol  originalFormatter	72	None	replace
255	[BUG]  [BUGGY]  ExpressionFormatter  originalFormatter  =(ParserFormatter)originalPrinter.clone();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ExpressionFormatter  originalFormatter  =(ParserFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	ExpressionFormatter  originalFormatter  =(ParserFormatter)originalPrinter.clone();	  parentFormatter    =(ParserFormatter)originalPrinter.clone();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
256	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	6	replace
257	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	6	replace
258	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
259	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	6	replace
260	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	6	replace
261	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	105	None	replace
262	[BUG]  [BUGGY]  parent  ==  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent    ==    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
263	[BUG]  [BUGGY]  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent    ==    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
264	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION,  suffix);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION,  suffix);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalParser.getType()  ==  FieldFormatter.FUNCTION);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()!=  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter.getType()!=  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()!=  FieldFormatter.FUNCTION);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
267	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(type,  originalParser);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(type,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(type,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
268	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  type,  suffix);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  type,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  type,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
269	[BUG]  [BUGGY]  parent  ==  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  parent!=    null    &&    originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	88	None	replace
270	[BUG]  [BUGGY]  IllegalArgumentException  <  FieldFormatter>  originalParser  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  type  IllegalArgumentException  does  not  take  parameters  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  IllegalArgumentException  <  FieldFormatter>  originalParser  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	IllegalArgumentException  <  FieldFormatter>  originalParser  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  type  IllegalArgumentException  does  not  take  parameters	4	None	replace
271	[BUG]  [BUGGY]  FieldFormatter  originalParser  =(FieldFormatter)originalPrinter.clone();  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  FieldFormatter  originalParser  =(FieldFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	FieldFormatter  originalParser  =(FieldFormatter)originalPrinter.clone();	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	4	None	replace
272	[BUG]  [BUGGY]  IllegalArgumentException  <  FieldFormatter>  originalParser  =(FieldFormatter)originalPrinter;  [CE]  type  IllegalArgumentException  does  not  take  parameters  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  IllegalArgumentException  <  FieldFormatter>  originalParser  =(FieldFormatter)originalPrinter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	IllegalArgumentException  <  FieldFormatter>  originalParser  =(FieldFormatter)originalPrinter;	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  type  IllegalArgumentException  does  not  take  parameters	4	None	replace
273	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null  &&  originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
274	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  &&  originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	112	1	replace
275	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    If(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
276	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }	  if(originalPrinter    ==    null)    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	25	None	replace
277	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	6	replace
278	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	6	replace
279	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
280	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	6	replace
281	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	45	6	replace
282	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter,  suffix);  [CE]  no  suitable  method  found  for  add(Object,PeriodFieldAffix)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter,  suffix);	  iElementPairs.add(originalPrinter);    	non-compiled	[CE]  no  suitable  method  found  for  add(Object,PeriodFieldAffix)	37	None	replace
283	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]      java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.add(originalParser);	  iElementPairs.add(originalPrinter);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	37	6	replace
284	[BUG]  [BUGGY]  iElementPairs.add(originalParser);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]      java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalParser);	  iElementPairs.add(originalPrinter);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	37	6	replace
285	[BUG]  [BUGGY]  parent!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
286	[BUG]  [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
287	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  if(originalPrinter  ==  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  if(originalPrinter  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
288	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  if(originalPrinter!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
289	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	6	replace
290	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	6	replace
291	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  incompatible  types	41	None	replace
292	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  &&!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  &&!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  &&!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter    ||!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
293	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter    ||!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
294	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix,  originalParser);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
295	[BUG]  [BUGGY]  iFieldFormatters[originalElementPairs.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);  [CE]  cannot  find  symbol  originalElementPairs  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalElementPairs.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalElementPairs.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol  originalElementPairs	54	None	replace
296	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix,  originalPrinter);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  suffix,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
297	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
298	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
299	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	84	6	add
300	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	84	6	add
301	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	84	None	add
302	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];	  iFieldFormatters[originalprinter.getFieldType()    ]    =    fieldFormatters[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
303	[BUG]  [BUGGY]  iFieldFormatters[originalPair.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [CE]  cannot  find  symbol  originalPair  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPair.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPair.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];	  iFieldFormatters[originalprinter.getFieldType()    ]    =    fieldFormatters[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol  originalPair	119	None	replace
304	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
305	[BUG]  [BUGGY]  Context.checkState(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Context.checkState(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Context.checkState(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  originalPrinter  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
307	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	40	None	add
308	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	40	None	add
309	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	40	None	add
310	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	40	None	add
311	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
312	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getClass().getName());	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
313	[BUG]  [BUGGY]  parent!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
314	[BUG]  [BUGGY]  newField  =(FieldFormatter)originalPrinter,  suffix);  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  newField  =(FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	newField  =(FieldFormatter)originalPrinter,  suffix);	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	113	None	replace
315	[BUG]  [BUGGY]  DumnezeulFunctionFormatter  originalParser  =(DynamicFormatter)originalPrinter;  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  DumnezeulFunctionFormatter  originalParser  =(DynamicFormatter)originalPrinter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	DumnezeulFunctionFormatter  originalParser  =(DynamicFormatter)originalPrinter;	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
316	[BUG]  [BUGGY]  DumnezeulFunctionFormatter  originalParser  =(DateFormatter)originalPrinter;  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  DumnezeulFunctionFormatter  originalParser  =(DateFormatter)originalPrinter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	DumnezeulFunctionFormatter  originalParser  =(DateFormatter)originalPrinter;	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
317	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefix.equals(originalPrinter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefix.equals(originalPrinter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefix.equals(originalPrinter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(printer    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
318	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefixes.isEmpty())  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefixes.isEmpty())  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  if(!prefixes.isEmpty())  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(printer    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
319	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
320	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
321	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
322	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
323	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
324	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
325	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
326	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null  ||  originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
327	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  originalPrinter);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
328	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  originalParser,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  originalParser,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  originalParser,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
329	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  source);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  source);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  source);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
330	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  field);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  field);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
331	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  originalParser);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalPrinter,  suffix,  originalParser);	  iElementPairs.set(originalPrinter,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	33	None	replace
332	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  field);  [CE]  cannot  find  symbol  field  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalPrinter,  suffix,  field);	  iElementPairs.set(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  field	33	None	replace
333	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  fieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalPrinter,  suffix,  fieldType);	  iElementPairs.set(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  fieldType	33	None	replace
334	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  newField);  [CE]  cannot  find  symbol  newField  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.set(originalPrinter,  suffix,  newField);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalPrinter,  suffix,  newField);	  iElementPairs.set(originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  newField	33	None	replace
335	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  fields[originalPrinter.getFieldType()  ];  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  fields[originalPrinter.getFieldType()  ];  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  fields[originalPrinter.getFieldType()  ];	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    fields[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
336	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  field[originalParser.getFieldType()  ];  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  field[originalParser.getFieldType()  ];  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  field[originalParser.getFieldType()  ];	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    fields[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
337	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  type);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  type);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix,  type);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
338	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type,  originalParser);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
339	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  field);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
340	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
341	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalParser;  [CE]  cannot  find  symbol  originalPrinter  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalParser;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalParser;	  iElementPairs.clear();    iElementPairs.clear();    this.originalPrinter    =    originalPrinter;    	non-compiled	[CE]  cannot  find  symbol  originalPrinter	70	None	replace
342	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  null;  [CE]  cannot  find  symbol  originalPrinter  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  null;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  null;	  iElementPairs.clear();    iElementPairs.clear();    this.originalPrinter    =    originalPrinter;    	non-compiled	[CE]  cannot  find  symbol  originalPrinter	70	None	replace
343	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
344	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  column);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  column);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  column);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
345	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalPrinter,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
346	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	6	add
347	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	6	add
348	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
349	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	42	None	add
350	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
351	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	42	None	add
352	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
353	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
354	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
355	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
356	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
357	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
358	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
359	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
360	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	1	6	add
361	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	1	6	add
362	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
363	[BUG]  [BUGGY]  Preconditions.checkState(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FileFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	83	None	replace
364	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
365	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
366	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
367	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
368	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
369	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
370	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
371	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
372	[BUG]  [BUGGY]  final  if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  final  if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	final  if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
373	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
374	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalPrinter  =  parser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  parser  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalPrinter  =  parser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalPrinter  =  parser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parser	98	None	replace
375	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
376	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
377	[BUG]  [BUGGY]  if(originalParser  ==  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser  ==  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser  ==  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
378	[BUG]  [BUGGY]  parentFormatter  =(ParserFormatter)originalPrinter;  [CE]  cannot  find  symbol  parentFormatter  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parentFormatter  =(ParserFormatter)originalPrinter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parentFormatter  =(ParserFormatter)originalPrinter;	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  parentFormatter	10	None	replace
379	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null  ||  originalParser  ==  originalParser)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	27	1	replace
380	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalParser)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  ||  originalParser  ==  originalParser)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	27	1	replace
381	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  fieldFormatter)  {  clearPrefix();  }  [CE]  cannot  find  symbol  fieldFormatter  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  fieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  ||  originalParser  ==  fieldFormatter)  {  clearPrefix();  }	  if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  fieldFormatter	27	None	replace
382	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	106	None	replace
383	[BUG]  [BUGGY]  parent!=  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	106	None	replace
384	[BUG]  [BUGGY]  newField((  FieldFormatter)originalPrinter,  suffix);  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  newField((  FieldFormatter)originalPrinter,  suffix);  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	newField((  FieldFormatter)originalPrinter,  suffix);  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
385	[BUG]  [BUGGY]  newField((  FieldFormatter)originalPrinter,  suffix);  originalParser  ||!(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  newField((  FieldFormatter)originalPrinter,  suffix);  originalParser  ||!(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	newField((  FieldFormatter)originalPrinter,  suffix);  originalParser  ||!(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
386	[BUG]  [BUGGY]  originalParser  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]        IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalParser  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalParser  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
387	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPair,  sourceName);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPair,  sourceName);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPair,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
388	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElement,  sourceName);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElement,  sourceName);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalElement,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
389	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	85	6	replace
390	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	85	6	replace
391	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
392	[BUG]  [BUGGY]  iElementPairs.set(originalParser,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.set(originalParser,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalParser,  suffix);	  iElementPairs.set(originalPrinter,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	33	None	replace
393	[BUG]  [BUGGY]  parent  ==  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  parent!=    null    &&    originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	89	None	replace
394	[BUG]  [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
395	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
396	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
397	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  &&  originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  &&  originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
398	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  &&  originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  &&  originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  &&  originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	111	1	add
399	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FileFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	83	1	replace
400	[BUG]  [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FileFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	83	1	replace
401	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FileFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
402	[BUG]  [BUGGY]  Guvernului  Guvernului  iElementPairs  =(VariableFormatter)originalPrinter.clone();  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Guvernului  Guvernului  iElementPairs  =(VariableFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Guvernului  Guvernului  iElementPairs  =(VariableFormatter)originalPrinter.clone();	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
403	[BUG]  [BUGGY]  Guvernului  Guvernului  iElementPairs  =(VariableFormatters)originalPrinter.clone();  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Guvernului  Guvernului  iElementPairs  =(VariableFormatters)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Guvernului  Guvernului  iElementPairs  =(VariableFormatters)originalPrinter.clone();	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
404	[BUG]  [BUGGY]  Guvernului  Guvernului  originalParser  =  iElementParser.getParser();  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Guvernului  Guvernului  originalParser  =  iElementParser.getParser();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Guvernului  Guvernului  originalParser  =  iElementParser.getParser();	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
405	[BUG]  [BUGGY]  Guvernului  Guvernului  iElementPairs  =(VariableFormatter)originalPrinter;  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Guvernului  Guvernului  iElementPairs  =(VariableFormatter)originalPrinter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Guvernului  Guvernului  iElementPairs  =(VariableFormatter)originalPrinter;	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
406	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
407	[BUG]  [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalParser!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
408	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalParser  instanceof  StringFormatter);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalParser  instanceof  StringFormatter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalParser  instanceof  StringFormatter);	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
409	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	120	1	add
410	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	120	1	add
411	[BUG]  [BUGGY]  parser  =(ParserFormatter)originalPrinter.clone();  [CE]  cannot  find  symbol  parser  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parser  =(ParserFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parser  =(ParserFormatter)originalPrinter.clone();	  parentFormatter    =(ParserFormatter)originalPrinter.clone();    	non-compiled	[CE]  cannot  find  symbol  parser	72	None	replace
412	[BUG]  [BUGGY]  iParserFormatter  =(ParserFormatter)originalPrinter.clone();  [CE]  cannot  find  symbol  iParserFormatter  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iParserFormatter  =(ParserFormatter)originalPrinter.clone();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iParserFormatter  =(ParserFormatter)originalPrinter.clone();	  parentFormatter    =(ParserFormatter)originalPrinter.clone();    	non-compiled	[CE]  cannot  find  symbol  iParserFormatter	72	None	replace
413	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setFieldType(fieldType);  [CE]  cannot  find  symbol  fieldType  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).setFieldType(fieldType);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).setFieldType(fieldType);	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  cannot  find  symbol  fieldType	101	None	replace
414	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType(0);  [CE]  method  getFieldType  in  class  FieldFormatter  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType(0);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).getFieldType(0);	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  method  getFieldType  in  class  FieldFormatter  cannot  be  applied  to  given  types;	101	None	replace
415	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType()  -  suffix;  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).getFieldType()  -  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).getFieldType()  -  suffix;	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  not  a  statement	101	None	replace
416	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  this);  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  this);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  this);	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	80	None	replace
417	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iElementPairs.get(iElementPairs.size()  -  1);  [CE]  ')'  expected  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iElementPairs.get(iElementPairs.size()  -  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(iElementPairs.get(iElementPairs.size()  -  1);	  final    Object    originalParser    =    suffix.appendSuffix(iElementPairs);    	non-compiled	[CE]  ')'  expected	20	None	replace
418	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter,  originalParser.getType()  ==  FieldFormatter.FUNCTION);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
419	[BUG]  [BUGGY]  parent!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
420	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  }  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  }	  iElementPairs.clear();    iElementPairs    =    new    HashMap    <    String,    FieldFormatter>();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
421	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
422	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)type,  suffix,  originalPrinter);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)type,  suffix,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)type,  suffix,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
423	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	113	1	replace
424	[BUG]  [BUGGY]  if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	113	1	replace
425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalParser  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	113	1	replace
426	[BUG]  [BUGGY]  if(originalParser  instanceof  FieldFormatter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	113	1	replace
427	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	6	replace
428	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	6	replace
429	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  IllegalArgumentException  	47	1	replace
430	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  [FE]  IllegalArgumentException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    	compilable	  [FE]  IllegalArgumentException  	47	1	replace
431	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  FieldFormatter;  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  FieldFormatter;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  FieldFormatter;	  iFieldFormatters[originalPrinter.getFieldType()]    =    originalParser;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
432	[BUG]  [BUGGY]  if(originalParser!=  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser!=  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser!=  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
433	[BUG]  [BUGGY]  if(originalParser!=  null)  {  if(originalPrinter  ==  null)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser!=  null)  {  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser!=  null)  {  if(originalPrinter  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
434	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
435	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
436	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
438	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
439	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
440	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.remove(originalParser);	  iElementPairs.remove(originalPrinter);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  	35	6	replace
441	[BUG]  [BUGGY]  iElementPairs.remove(originalParser);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalParser);	  iElementPairs.remove(originalPrinter);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  	35	6	replace
442	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  cleanPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  cleanPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  cleanPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
443	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  cleanPrefix();  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  cleanPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  cleanPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
444	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
445	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  null  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
446	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
447	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
448	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
449	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
450	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalPrinter  ==  originalParser)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
451	[BUG]  [BUGGY]  If(originalParser!=  null)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  If(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	If(originalParser!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	94	None	replace
452	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalPrinter.getParser();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
453	[BUG]  [BUGGY]  matically(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  matically(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	matically(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalPrinter.getParser();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	99	None	replace
454	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  file);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  file);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  file);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
455	[BUG]  [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(prefix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]                IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(prefix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iElementPairs.appendSuffix(prefix);	  final    Object    originalParser    =    suffix.appendSuffix(prefix);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	21	None	replace
456	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
457	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	3	6	add
458	[BUG]  [BUGGY]  iFieldFormatters[originalPair.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  originalPair  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPair.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPair.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  iFieldFormatters[originalParser.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  originalPair	81	None	replace
459	[BUG]  [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	59	None	replace
460	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalPrinter);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
461	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  header);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  header);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalElementPairs,  header);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
462	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalParser  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter    &&    originalParser    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	108	None	replace
463	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  suffix;  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  suffix;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  suffix;	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	64	None	replace
464	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	42	None	add
465	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	42	None	add
466	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originParser);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(sourceName,  originParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
467	[BUG]  [BUGGY]  parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	105	None	replace
468	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.add(originalPrinter);    iElementPairs.add(originalParser);	  	compilable	  [FE]  IllegalArgumentException  	36	6	add
469	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalParser);  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);    iElementPairs.add(originalParser);	  	compilable	  [FE]  IllegalArgumentException  	36	6	add
470	[BUG]  [BUGGY]  if(originalParser!=  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser!=  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser!=  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
471	[BUG]  [BUGGY]  if(originalParser  ==  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser  ==  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser  ==  null)  {  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
472	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  final  Object  originalParser  =  iElementPairs.get(iElementPairs.size());  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  final  Object  originalParser  =  iElementPairs.get(iElementPairs.size());  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    final  Object  originalParser  =  iElementPairs.get(iElementPairs.size());	  	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	78	None	add
473	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  final  java.lang.IndexOutOfBoundsException  :  IndexOutOfBoundsException.appendSuffix(suffix,  suffix);  [CE]  <identifier>  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  final  java.lang.IndexOutOfBoundsException  :  IndexOutOfBoundsException.appendSuffix(suffix,  suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    final  java.lang.IndexOutOfBoundsException  :  IndexOutOfBoundsException.appendSuffix(suffix,  suffix);	  	non-compiled	[CE]  <identifier>  expected	78	None	add
474	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.get();  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.get();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs  =  iElementPairs.get();	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get();    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	115	None	replace
475	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  iElementPairs  =  iElementPairs.get();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs  iElementPairs  =  iElementPairs.get();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs  iElementPairs  =  iElementPairs.get();	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
476	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  name);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  name);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  name);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
477	[BUG]  [BUGGY]  parent  ==  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  parent    ==    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	61	None	replace
478	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,Object)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,Object)	44	None	add
479	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	46	None	add
480	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,Object)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,Object)	46	None	add
481	[BUG]  [BUGGY]  Preconditions.checkState(originalParser!=  null);  [CE]  cannot  find  symbol  Preconditions  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalParser!=  null);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalParser!=  null);	  Preconditions.checkState(originalPrinter!=    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	68	None	replace
482	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(type,  suffix,  originalParser);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(type,  suffix,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter(type,  suffix,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    suffix,    type);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
483	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
484	[BUG]  [BUGGY]  if(originalParser!=  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser!=  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser!=  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
485	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(printer    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
486	[BUG]  [BUGGY]  parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalParser    ||(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	107	None	replace
487	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
488	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
489	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  originalPrinter  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  iElementPairs.clear();    iElementPairs.clear();    this.originalPrinter    =    originalPrinter;    	non-compiled	[CE]  cannot  find  symbol  originalPrinter	70	None	replace
490	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
491	[BUG]  [BUGGY]  if(originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	8	1	replace
492	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
493	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
494	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
495	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
496	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
497	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
498	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
499	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
500	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
501	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.get(0);  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.get(0);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs  =  iElementPairs.get(0);	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  incompatible  types	116	None	replace
502	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  iElementPairs  =  iElementPairs.get(0);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs  iElementPairs  =  iElementPairs.get(0);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs  iElementPairs  =  iElementPairs.get(0);	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
503	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.get(1);  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();  iElementPairs  =  iElementPairs.get(1);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();  iElementPairs  =  iElementPairs.get(1);	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  incompatible  types	116	None	replace
504	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementFormatters  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementFormatters  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementFormatters  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	40	None	add
505	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    ArrayIndexOutOfBoundsException  iElementPairs  =  new  ArrayIndexOutOfBoundsException(originalPrinter);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	40	None	add
506	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  fieldFormatter.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  fieldFormatter  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  fieldFormatter.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  fieldFormatter.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fieldFormatter	98	None	replace
507	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  iElementPairs.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  iElementPairs.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  iElementPairs.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
508	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  fieldFormatters.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  fieldFormatters  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  fieldFormatters.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  fieldFormatters.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fieldFormatters	98	None	replace
509	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  new  FieldFormatter(originalParser,  suffix);  }  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  new  FieldFormatter(originalParser,  suffix);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  new  FieldFormatter(originalParser,  suffix);  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	98	None	replace
510	[BUG]  [BUGGY]  final  Object  originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]                  IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iElementPairs.get(iElementPairs.size()  -  2);	  if(iElementPairs.size()    >    0)    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    }    else    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    1);    }    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	56	None	replace
511	[BUG]  [BUGGY]  initialPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  [CE]  cannot  find  symbol  initialPrinter  [FE]                    IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  initialPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	initialPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);	  if(iElementPairs.size()    >    0)    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    }    else    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    1);    }    	non-compiled	[CE]  cannot  find  symbol  initialPrinter	56	None	replace
512	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
513	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter);  iElementPairs.clear();  iElementPairs.clear();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object)	38	None	add
514	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,Object)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  originalParser);  iElementPairs.clear();  iElementPairs.clear();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,Object)	38	None	add
515	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter,  suffix);  iElementPairs.clear();  iElementPairs.clear();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayIndexOutOfBoundsException(Object,PeriodFieldAffix)	38	None	add
516	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getType());  iElementPairs.clear();  iElementPairs.clear();  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getType());  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(originalPrinter.getType());  iElementPairs.clear();  iElementPairs.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
517	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  name);  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  name);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  name);	  iFieldFormatters[originalPrinter.getFieldType()    ],    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	86	None	replace
518	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  sourceName);  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  sourceName);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()    ],    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	86	None	replace
519	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
520	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalParser  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
521	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.FOR  &&!originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.FOR  &&!originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  Token.FOR  &&!originalPrinter.getType()  ==  Token.FUNCTION)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    If(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
522	[BUG]  [BUGGY]  originalParser  ||  originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  originalParser  ||  originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	originalParser  ||  originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  not  a  statement	110	None	replace
523	[BUG]  [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()!=  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()!=  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkArgument(originalPrinter.getType()!=  FieldFormatter.FUNCTION);	  Preconditions.checkArgument(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
524	[BUG]  [BUGGY]  final  Object  originalParser  =  iPrinter.appendSuffix(suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]            IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iPrinter.appendSuffix(suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iPrinter.appendSuffix(suffix);	  final    Object    originalParser    =    suffix.appendSuffix(printer);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	117	None	replace
525	[BUG]  [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(printer);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iElementPairs.appendSuffix(printer);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iElementPairs.appendSuffix(printer);	  final    Object    originalParser    =    suffix.appendSuffix(printer);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	117	None	replace
526	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalParser  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	50	None	replace
527	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
528	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs	  	non-compiled	[CE]  ';'  expected	100	None	add
529	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs  =  new  StringFormatter((  FieldFormatter)originalPrinter,  suffix);  iElementPairs.set(	  	non-compiled	[CE]  ')'  expected	100	None	add
530	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalParser);	  	compilable	  [FE]  IllegalArgumentException  	34	6	add
531	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalParser);  [FE]  IllegalArgumentException  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalParser);	  	compilable	  [FE]  IllegalArgumentException  	34	6	add
532	[BUG]  [BUGGY]  final  Object  originalParser  =  iSuffix.appendSuffix(originalPrinter,  suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  iSuffix.appendSuffix(originalPrinter,  suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  iSuffix.appendSuffix(originalPrinter,  suffix);	  final    Object    originalParser    =    suffix.appendSuffix(originalPrinter,    suffix);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	118	None	replace
533	[BUG]  [BUGGY]  parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  parent    ==    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
534	[BUG]  [BUGGY]  parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]                IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent    ==    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
535	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  suffix);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
536	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null,  suffix);  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  null,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ],    null;    	non-compiled	[CE]  not  a  statement	114	None	replace
537	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
538	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	28	1	add
539	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  originalParser)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
540	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter    ==    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
541	[BUG]  [BUGGY]  originalPrinter  =  iElementPairs.get(iElementPairs.  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalPrinter  =  iElementPairs.get(iElementPairs.  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalPrinter  =  iElementPairs.get(iElementPairs.	  if(iElementPairs.size()    >    0)    {    originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    }    else    {    originalPrinter    =    iElementPairs.get(iElementPairs.    	non-compiled	[CE]  <identifier>  expected	57	None	replace
542	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	3	None	add
543	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
544	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(parent  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
545	[BUG]  [BUGGY]  reader!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  reader!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	reader!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  parent!=    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	53	None	replace
546	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);  [CE]  variable  originalParser  might  already  have  been  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    originalParser  =  iElementPairs.get(iElementPairs.size()  +  1);	  	non-compiled	[CE]  variable  originalParser  might  already  have  been  assigned	78	None	add
547	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  if(originalPrinter  ==  null)  {  originalParser  =  iElementPairs.get(0);  }  [CE]  variable  originalParser  might  already  have  been  assigned  [FE]      java.lang.IndexOutOfBoundsException:  Index:  4    [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  if(originalPrinter  ==  null)  {  originalParser  =  iElementPairs.get(0);  }  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser    =    iElementPairs.get(iElementPairs.size());    if(originalPrinter  ==  null)  {  originalParser  =  iElementPairs.get(0);  }	  	non-compiled	[CE]  variable  originalParser  might  already  have  been  assigned	78	None	add
548	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
549	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getClass().isArray())  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getClass().isArray())  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getClass().isArray())  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
550	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
551	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
552	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
553	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   ".   ");  }  if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   ".   ");    }    if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ".   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
554	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalPrinter;  }  [CE]  cannot  find  symbol  originalPrinter  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalPrinter;  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalPrinter;  }	  iElementPairs.clear();    iElementPairs.clear();    this.originalPrinter    =    originalPrinter;    	non-compiled	[CE]  cannot  find  symbol  originalPrinter	70	None	replace
555	[BUG]  [BUGGY]  Iterator  <  FieldFormatter>  iElementPairs  =  iElementPairs.iterator();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Iterator  <  FieldFormatter>  iElementPairs  =  iElementPairs.iterator();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Iterator  <  FieldFormatter>  iElementPairs  =  iElementPairs.iterator();	  if(originalPrinter!=    null)    {    if(!originalPrinter    instanceof    FieldFormatter)    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
556	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(printer    instanceof    FieldFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	17	1	replace
557	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(printer    instanceof    FieldFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	17	1	replace
558	[BUG]  [BUGGY]  iFieldFormatters[originalprinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix);  [CE]  cannot  find  symbol  originalprinter  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalprinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalprinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix);	  iFieldFormatters[originalParser.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol  originalprinter	81	None	replace
559	[BUG]  [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  ||(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  parent    ==    originalPrinter    &&!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to       ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
560	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalprinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalprinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	7	None	add
561	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalprinter  ==  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalprinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalprinter  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	24	None	add
562	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
563	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	1	1	add
564	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  iElementPairs);  [CE]  not  a  statement  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ],    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	86	None	replace
565	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  type);  [CE]  not  a  statement  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  type);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  type);	  iFieldFormatters[originalPrinter.getFieldType()    ],    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	86	None	replace
566	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  iFieldFormatters);  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  iFieldFormatters);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix),  iFieldFormatters);	  iElementPairs.add(new    FieldFormatter(originalPrinter,    suffix));    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	80	None	replace
567	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
568	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(originalParser!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	84	1	add
569	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	compilable	  [FE]  IllegalStateException  	49	6	replace
570	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    	compilable	  [FE]  IllegalStateException  	49	6	replace
571	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  field  =  originalParser;  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  field  =  originalParser;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  field  =  originalParser;	  iFieldFormatters[originalPrinter.getFieldType()]    =    originalParser;    	non-compiled	[CE]  not  a  statement	6	None	replace
572	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
573	[BUG]  [BUGGY]  parent  ==  null  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
574	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()!=  Token.FUNCTION)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()!=  Token.FUNCTION)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()!=  Token.FUNCTION)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
575	[BUG]  [BUGGY]  parent  ==  null  ||  originalPrinter.getType()!=  Token.VAR)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parent  ==  null  ||  originalPrinter.getType()!=  Token.VAR)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  null  ||  originalPrinter.getType()!=  Token.VAR)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
576	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter);  [CE]  cannot  find  symbol  Preconditions  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter);	  Preconditions.checkState(originalPrinter    instanceof    FieldFormatter);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	52	None	replace
577	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(printer,  suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(printer,  suffix);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(printer,  suffix);	  final    Object    originalParser    =    suffix.appendSuffix(originalPrinter,    suffix);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	118	None	replace
578	[BUG]  [BUGGY]  parentFormatter  =((  FieldFormatter)originalPrinter).getParser();  [CE]  cannot  find  symbol  parentFormatter  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  parentFormatter  =((  FieldFormatter)originalPrinter).getParser();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parentFormatter  =((  FieldFormatter)originalPrinter).getParser();	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  cannot  find  symbol  parentFormatter	5	None	replace
579	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser)  {  if(!originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||!originalPrinter.getType()  ==  FieldFormatter.FUNCTION)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
580	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  ((  FieldFormatter)originalPrinter).getFieldType();  }	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
581	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  ((  FieldFormatter)originalPrinter).getFieldType();  }	  	compilable	  [FE]  IllegalArgumentException  	100	1	add
582	[BUG]  [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix  [CE]  ')'  expected  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]          ((  FieldFormatter)originalPrinter).getFieldType();  if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	                ((    FieldFormatter)originalPrinter).getFieldType();    if(originalPrinter  instanceof  FieldFormatter)  {  ((  FieldFormatter)originalPrinter).getFieldType();  }  else  {  iElementPairs.set(iElementPairs.size()  -  1,  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix	  	non-compiled	[CE]  ')'  expected	100	None	add
583	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null,  originalParser);  [CE]  cannot  find  symbol  Preconditions  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  null,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null,  originalParser);	  Preconditions.checkState(originalPrinter!=    null);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	68	None	replace
584	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null  &&  originalParser  instanceof  FieldFormatter)  {  Preconditions.checkState(originalPrinter!=  null);  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  null  &&  originalParser  instanceof  FieldFormatter)  {  Preconditions.checkState(originalPrinter!=  null);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null  &&  originalParser  instanceof  FieldFormatter)  {  Preconditions.checkState(originalPrinter!=  null);	  Preconditions.checkState(originalPrinter!=    null);    	non-compiled	[CE]  ';'  expected	68	None	replace
585	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.isParser())  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter.isParser())  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter.isParser())  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    If(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
586	[BUG]  [BUGGY]  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();	  iElementPairs.clear();    iElementPairs    =    new    HashMap    <    String,    FieldFormatter>();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
587	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null,  originalParser);  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  null,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ],    null;    	non-compiled	[CE]  not  a  statement	114	None	replace
588	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalprinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  if(originalprinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    null)    {    clearPrefix();    }    if(originalprinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	28	None	add
589	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
590	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
591	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalprinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalprinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalprinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	9	None	add
592	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalPrinter    ==    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  cleanPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
593	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FileFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FileFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FileFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    FileFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
594	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  sourceName,  suffix);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  sourceName,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  sourceName,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
595	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    StringFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	82	1	replace
596	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter  instanceof  FieldFormatter  ||  originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter    instanceof    StringFormatter))    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	82	1	replace
597	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to... ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to... ");  }	  	compilable	  [FE]  IllegalArgumentException  	48	1	add
598	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to... ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to... ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "No    field    to    apply    suffix    to   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to... ");  }	  	compilable	  [FE]  IllegalArgumentException  	48	1	add
599	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  field;  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  field;  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  field;	  iFieldFormatters[originalPrinter.getFieldType()    ],    newField;    	non-compiled	[CE]  not  a  statement	64	None	replace
600	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  Preconditions.checkState(originalPrinter!=  originalParser  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  Preconditions.checkState(originalPrinter!=  originalParser  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  Preconditions.checkState(originalPrinter!=  originalParser  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
601	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter!=  null  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null  ||  originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
602	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  ==  originalParser  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter  ==  originalParser  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  ==  originalParser  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  Preconditions.checkState(originalPrinter!=    originalParser    ||!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	66	None	replace
603	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(originalPrinter,  iElementPairs);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]              IllegalArgumentException      [CONTEXT]      private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);      [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(originalPrinter,  iElementPairs);  [BUGGY]      originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(originalPrinter,  iElementPairs);	  final    Object    originalParser    =    suffix.appendSuffix(iElementPairs);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	20	None	replace
604	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
605	[BUG]  [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  [FE]  IllegalArgumentException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  iElementPairs.clear();  }	  iElementPairs.clear();    if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
606	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
607	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
608	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
609	[BUG]  [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=        null)        {        clearPrefix();        }        if(originalParser!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	92	1	add
610	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  }  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs!=  null)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  }	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get(0);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
611	[BUG]  [BUGGY]  int  iElementPairs  =  originalPrinter.size();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  int  iElementPairs  =  originalPrinter.size();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	int  iElementPairs  =  originalPrinter.size();	  iElementPairs.clear();    int    iElementPairs    =    iElementPairs.size();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
612	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalprinter);  [CE]  cannot  find  symbol  originalprinter  [FE]    java.lang.IndexOutOfBoundsException:  Index:  9    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.add(originalPrinter);  iElementPairs.add(originalprinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);    iElementPairs.add(originalprinter);	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	36	None	add
613	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
614	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
615	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser,  true);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser,  true);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser,  true);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(suffix,    originalParser);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
616	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  initialPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  initialPrinter  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  initialPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  initialPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalPrinter.getParser();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  initialPrinter	99	None	replace
617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(iElementPairs!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	94	1	replace
618	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs!=  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs!=  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	94	1	replace
619	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter!=    null)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    if(originalPrinter!=  null)  {  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
620	[BUG]  [BUGGY]  if(!(printer  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  printer  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(printer  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(printer  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  printer	113	None	replace
621	[BUG]  [BUGGY]  if(!(originalprinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalprinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalprinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  originalprinter	113	None	replace
622	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
623	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  if(originalParser!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    ||    originalParser    ==    originalPrinter)    {    clearPrefix();    }    if(originalParser!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	26	1	add
624	[BUG]  [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(     "     ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "     ");  }  if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter        instanceof        FieldFormatter))        {        clearPrefix();        }        else        {        throw        new        IllegalStateException(       "       ");        }        if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "       ");    }    if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
625	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get();  }  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get();  }	  iElementPairs.clear();    IElementPairs    iElementPairs    =    iElementPairs.get();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
626	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
627	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
628	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
629	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
630	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    iElementPairs.clear();    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	6	add
631	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  iElementPairs);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  iElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  iElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter(originalParser,    originalElementPairs);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
632	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  [CE]  cannot  find  symbol  originalprinter  [FE]    java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.remove(originalprinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iElementPairs.remove(originalprinter);	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	34	None	add
633	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.get(originalPrinter);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]      java.lang.IndexOutOfBoundsException:  Index:  3    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.remove(originalPrinter);  iElementPairs.get(originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);    iElementPairs.get(originalPrinter);	  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	34	None	add
634	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalprinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  if(originalprinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null    &&    originalParser    ==    null)    {    clearPrefix();    }    if(originalprinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	111	None	add
635	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter,  originalType.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  originalType  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter,  originalType.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter,  originalType.getType()  ==  FieldFormatter.FUNCTION);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol  originalType	95	None	replace
636	[BUG]  [BUGGY]  ((  FieldFormatter)originalPrinter).setFieldType(0);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  ((  FieldFormatter)originalPrinter).setFieldType(0);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	((  FieldFormatter)originalPrinter).setFieldType(0);	          ((    FieldFormatter)originalPrinter).getFieldType();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
637	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME,  originalParser);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME,  originalParser);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME,  originalParser);	  Preconditions.checkState(originalPrinter.getType()    ==    FieldFormatter.FIELD_NAME);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
638	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  originalParser,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.set(originalPrinter,  originalParser,  suffix);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalPrinter,  originalParser,  suffix);	  iElementPairs.set(originalPrinter,    suffix);    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	33	None	replace
639	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  originalPrinter.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(originalPrinter!=  null)  {  originalParser  =  originalPrinter.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  originalParser  =  originalPrinter.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
640	[BUG]  [BUGGY]  matically(originalPrinter)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  matically(originalPrinter)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	matically(originalPrinter)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
641	[BUG]  [BUGGY]  final  if(originalPrinter!=  null)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  final  if(originalPrinter!=  null)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	final  if(originalPrinter!=  null)  {  originalParser  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	          if(originalPrinter!=    null)    {    originalPrinter    =    originalParser.parse();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
642	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  originalElementPairs);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  originalElementPairs);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
643	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
644	[BUG]  [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	6	add
645	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
646	[BUG]  [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs!=  null)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
647	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
648	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(iElementPairs.size()  >  0)  {  iElementPairs.clear();  iElementPairs.clear();  }	  iElementPairs.clear();    iElementPairs.clear();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	39	6	replace
649	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  true);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  true);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  true);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
650	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalPrinter);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalPrinter);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalPrinter);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
651	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	6	add
652	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	6	add
653	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  Il  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	44	None	add
654	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
655	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
656	[BUG]  [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException(   "   ");  }  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();        if(originalPrinter    instanceof    FieldFormatter)    {    iElementPairs.clear();    }    else    {    throw    new    IllegalStateException(   "   ");    }    iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
657	[BUG]  [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalPrinter.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(     "No  field  to  apply  suffix  to     ");  }      [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalPrinter.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]      FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION  ||  originalPrinter.getType()  ==  FieldFormatter.FUNCTION);	  Preconditions.checkArgument(originalPrinter.getType()    ==    FieldFormatter.FUNCTION);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
