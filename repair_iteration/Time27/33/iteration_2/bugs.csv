bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
2	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	20	6	add
4	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter  ==  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	20	6	add
5	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	20	None	add
6	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()]  =  originalParser;  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()]  =  originalParser;  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()]  =  originalParser;	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
8	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
10	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalPrinter  ==  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
11	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  If(originalPrinter!=  null)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  If(originalPrinter!=  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    If(originalPrinter!=  null)  {  clearPrefix();  }	  	non-compiled	[CE]  ';'  expected	12	None	add
12	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalParser,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  originalParser);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  originalParser);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
14	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix,  type);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
15	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
16	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
17	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(printer  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  printer  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(printer  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(printer  instanceof  FieldFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  printer	16	None	add
18	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  If(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  If(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    If(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  ';'  expected	16	None	add
19	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]        IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(suffix);  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(suffix);	      final    Object    originalParser    =    suffix.appendSuffix(originalPrinter);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	15	None	replace
20	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iElementPairs);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]          IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(iElementPairs);  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(iElementPairs);	      final    Object    originalParser    =    suffix.appendSuffix(originalPrinter);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	15	None	replace
21	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(prefix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]            IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(prefix);  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(prefix);	      final    Object    originalParser    =    suffix.appendSuffix(originalPrinter);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	15	None	replace
22	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  fieldFormatters[originalPrinter.getFieldType()  ];  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  fieldFormatters[originalPrinter.getFieldType()  ];  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  fieldFormatters[originalPrinter.getFieldType()  ];	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    fieldFormatters[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
23	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  fields[originalParser.getFieldType()  ];  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  fields[originalParser.getFieldType()  ];  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  fields[originalParser.getFieldType()  ];	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    fieldFormatters[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
25	[BUG]  [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
26	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
27	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  ||  originalParser  ==  originalPrinter)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
28	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
29	[BUG]  [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  ||  originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
30	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	18	6	add
31	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	18	6	add
32	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
33	[BUG]  [BUGGY]  iElementPairs.set(originalPrinter,  suffix);  [CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.set(originalPrinter,  suffix);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.set(originalPrinter,  suffix);	  iElementPairs.clear();    	non-compiled	[CE]  method  set  in  interface  List<E>  cannot  be  applied  to  given  types;	7	None	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.remove(originalPrinter);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.remove(originalPrinter);	  iElementPairs.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  	7	6	replace
35	[BUG]  [BUGGY]  iElementPairs.remove(originalPrinter);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.remove(originalPrinter);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.remove(originalPrinter);	  iElementPairs.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  3  	7	6	replace
36	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.add(originalPrinter);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.add(originalPrinter);	  iElementPairs.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	7	6	replace
37	[BUG]  [BUGGY]  iElementPairs.add(originalPrinter);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.add(originalPrinter);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(originalPrinter);	  iElementPairs.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  9  	7	6	replace
38	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
39	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    iElementPairs.clear();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
41	[BUG]  [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
42	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
43	[BUG]  [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
44	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
45	[BUG]  [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    if(originalPrinter  instanceof  FieldFormatter)  {  iElementPairs.clear();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
47	[BUG]  [BUGGY]  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    if(originalPrinter!=  null)  {  iElementPairs.clear();  }  else  {  iElementPairs.clear();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	6	add
48	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
49	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
50	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter  ||!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter);  [CE]  cannot  find  symbol  Preconditions  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkState(originalPrinter  instanceof  FieldFormatter);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter  instanceof  FieldFormatter);	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	17	None	replace
53	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
54	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
55	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  type);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  type);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  suffix,  type);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
56	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  }  else  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  }  [CE]  variable  originalPrinter  might  already  have  been  assigned  [FE]              IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  if(iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  }  else  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  }  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	if(iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  }  else  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  1);  }	      originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    	non-compiled	[CE]  variable  originalPrinter  might  already  have  been  assigned	4	None	replace
57	[BUG]  [BUGGY]  if(iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  }  else  {  originalPrinter  =  iElementPairs.get(iElementPairs.  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  if(iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  }  else  {  originalPrinter  =  iElementPairs.get(iElementPairs.  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	if(iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);  }  else  {  originalPrinter  =  iElementPairs.get(iElementPairs.	      originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size());  [CE]  cannot  find  symbol  OriginalPrinter  [FE]        IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  OriginalPrinter  =  iElementPairs.get(iElementPairs.size());  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	OriginalPrinter  =  iElementPairs.get(iElementPairs.size());	      originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol  OriginalPrinter	1	None	replace
59	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
60	[BUG]  [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
61	[BUG]  [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
62	[BUG]  [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]          IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalPrinter  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
63	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser);	  iFieldFormatters[originalPrinter.getFieldType()]    =    null;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
64	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField;  [CE]  not  a  statement  [FE]          IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  newField;  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  newField;	  iFieldFormatters[originalPrinter.getFieldType()]    =    null;    	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkState(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
67	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null)  {  if(!originalPrinter  instanceof  FieldFormatter)  {  clearPrefix();  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter!=  null);  [CE]  cannot  find  symbol  Preconditions  [FE]          IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkState(originalPrinter!=  null);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter!=  null);	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	17	None	replace
69	[BUG]  [BUGGY]  iElementPairs.clear();  int  iElementPairs  =  iElementPairs.size();  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  int  iElementPairs  =  iElementPairs.size();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    int  iElementPairs  =  iElementPairs.size();	  	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	add
70	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalPrinter;  [CE]  cannot  find  symbol  originalPrinter  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  iElementPairs.clear();  this.originalPrinter  =  originalPrinter;  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    iElementPairs.clear();  this.originalPrinter  =  originalPrinter;	  	non-compiled	[CE]  cannot  find  symbol  originalPrinter	6	None	add
71	[BUG]  [BUGGY]  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    iElementPairs  =  new  HashMap  <  String,  FieldFormatter>();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
72	[BUG]  [BUGGY]  parentFormatter  =(ParserFormatter)originalPrinter.clone();  [CE]  cannot  find  symbol  parentFormatter  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parentFormatter  =(ParserFormatter)originalPrinter.clone();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parentFormatter  =(ParserFormatter)originalPrinter.clone();	  if(originalPrinter!=    null)    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol  parentFormatter	13	None	replace
73	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter;  [CE]  '('  or  '['  expected  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter;  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter;	  iFieldFormatters[originalPrinter.getFieldType()]    =    null;    	non-compiled	[CE]  '('  or  '['  expected	5	None	replace
74	[BUG]  [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
75	[BUG]  [BUGGY]  parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
76	[BUG]  [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
77	[BUG]  [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]          IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  originalParser  &&!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
78	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]              IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	add	originalParser  =  iElementPairs.get(iElementPairs.size());	      originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	4	6	replace
79	[BUG]  [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  [FE]              IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  originalParser  =  iElementPairs.get(iElementPairs.size());  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	originalParser  =  iElementPairs.get(iElementPairs.size());	      originalPrinter    =    iElementPairs.get(iElementPairs.size()    -    2);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  4  	4	6	replace
80	[BUG]  [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix));  [CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix));  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.add(new  FieldFormatter(originalPrinter,  suffix));	  iElementPairs.clear();    	non-compiled	[CE]  no  suitable  constructor  found  for  FieldFormatter(Object,PeriodFieldAffix)	7	None	replace
81	[BUG]  [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalParser.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
82	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  StringFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
83	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FileFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalPrinter  instanceof  FileFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalPrinter  instanceof  FileFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
84	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
85	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
86	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  suffix);  [CE]  not  a  statement  [FE]            IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  suffix);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  new  FieldFormatter(originalParser,  suffix);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  not  a  statement	8	None	replace
87	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(suffix,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
88	[BUG]  [BUGGY]  parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
89	[BUG]  [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
90	[BUG]  [BUGGY]  parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
91	[BUG]  [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent!=  null  &&  originalParser!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to ");  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
92	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
93	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalParser!=  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalParser!=  null)  {  clearPrefix();  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
94	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalprinter!=  null)  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  if(originalprinter!=  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    if(originalprinter!=  null)  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	12	None	add
95	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FUNCTION);	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkState(originalPrinter.getType()  ==  FieldFormatter.FIELD_NAME);	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	Preconditions.checkArgument(originalPrinter.getType()  ==  FieldFormatter.FUNCTION);	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
98	[BUG]  [BUGGY]      if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]      if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	        if(originalPrinter!=  null)  {  originalPrinter  =  originalParser.parse();  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
99	[BUG]  [BUGGY]      if(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]      if(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	        if(originalPrinter!=  null)  {  originalPrinter  =  originalPrinter.getParser();  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
100	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]      ((  FieldFormatter)originalPrinter).getFieldType();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	        ((  FieldFormatter)originalPrinter).getFieldType();	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
101	[BUG]  [BUGGY]      ((  FieldFormatter)originalPrinter).getFieldType();  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]      ((  FieldFormatter)originalPrinter).getFieldType();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	        ((  FieldFormatter)originalPrinter).getFieldType();	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
102	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalElementPairs);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalElementPairs);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  originalElementPairs);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
103	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  sourceName);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  sourceName);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
104	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  type);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  type);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter(originalParser,  type);	  iFieldFormatters[originalPrinter.getFieldType()]    =    new    FieldFormatter(originalParser,    suffix);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
105	[BUG]  [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
106	[BUG]  [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( " ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
107	[BUG]  [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]        IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
108	[BUG]  [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [CE]  not  a  statement  [FE]          IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	parent  ==  originalParser  ||(originalPrinter  instanceof  FieldFormatter  &&  originalParser  instanceof  FieldFormatter))  {  throw  new  IllegalStateException( "No  field  to  apply  suffix  to   ");  }	  if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
109	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	18	6	add
110	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalStateException  	18	6	add
111	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
112	[BUG]  [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=  null  &&  originalParser  ==  null)  {  clearPrefix();  }	  if(originalPrinter!=    null)    {    clearPrefix();    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
113	[BUG]  [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalprinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [CE]  cannot  find  symbol  originalprinter  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(!(originalPrinter  instanceof  FieldFormatter))  {  clearPrefix();  }  if(!(originalprinter  instanceof  FieldFormatter))  {  clearPrefix();  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(!(originalPrinter    instanceof    FieldFormatter))    {    clearPrefix();    }    if(!(originalprinter  instanceof  FieldFormatter))  {  clearPrefix();  }	  	non-compiled	[CE]  cannot  find  symbol  originalprinter	16	None	add
114	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null;  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ],  null;  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ],  null;	  iFieldFormatters[originalPrinter.getFieldType()]    =    null;    	non-compiled	[CE]  not  a  statement	5	None	replace
115	[BUG]  [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get();  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    IElementPairs  iElementPairs  =  iElementPairs.get();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
116	[BUG]  [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iElementPairs.clear();  IElementPairs  iElementPairs  =  iElementPairs.get(0);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iElementPairs.clear();    IElementPairs  iElementPairs  =  iElementPairs.get(0);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
117	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(printer);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]        IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(printer);  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(printer);	      final    Object    originalParser    =    suffix.appendSuffix(originalPrinter);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	15	None	replace
118	[BUG]  [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(originalPrinter,  suffix);  [CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)  [FE]          IllegalArgumentException    [CONTEXT]    private  PeriodFormatterBuilder  appendSuffix(PeriodFieldAffix  suffix)  {  final  Object  originalPrinter;  final  Object  originalParser;  if  (iElementPairs.size()  >  0)  {  originalPrinter  =  iElementPairs.get(iElementPairs.size()  -  2);    [BUGGY]  final  Object  originalParser  =  suffix.appendSuffix(originalPrinter,  suffix);  [BUGGY]    originalParser  =  iElementPairs.get(iElementPairs.size()  -  1);  }  else  {  originalPrinter  =  null;  originalParser  =  null;  }  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	593	593	1	replace	final  Object  originalParser  =  suffix.appendSuffix(originalPrinter,  suffix);	      final    Object    originalParser    =    suffix.appendSuffix(originalPrinter);    	non-compiled	[CE]  variable  originalParser  is  already  defined  in  method  appendSuffix(PeriodFieldAffix)	15	None	replace
119	[BUG]  [BUGGY]  iFieldFormatters[originalprinter.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [CE]  cannot  find  symbol  originalprinter  [FE]            IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalprinter.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalprinter.getFieldType()  ]  =  fieldFormatters[originalParser.getFieldType()  ];	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    fieldFormatters[originalParser.getFieldType()    ];    	non-compiled	[CE]  cannot  find  symbol  originalprinter	14	None	replace
120	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	add	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
121	[BUG]  [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	if(originalPrinter!=    null)    {    clearPrefix();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(originalPrinter!=  null)  {  clearPrefix();  }  else  {  throw  new  IllegalStateException( ". ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	1	add
122	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  originalParser);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  originalParser);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  originalParser);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
123	[BUG]  [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  sourceName);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]    originalPrinter  !=  originalParser  ||  !(originalPrinter  instanceof  FieldFormatter))  {  throw  new  IllegalStateException(   "No  field  to  apply  suffix  to   ");  }    [BUGGY]  iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  sourceName);  [BUGGY]    FieldFormatter  newField  =  new  FieldFormatter((FieldFormatter)  originalPrinter,  suffix);  iElementPairs.set(iElementPairs.size()  -  2,  newField);  iElementPairs.set(iElementPairs.size()  -  1,  newField);  iFieldFormatters[newField.getFieldType()]  =  newField;  [CLASS]  	projects/Time27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java	0.4082482904638631	605	605	1	replace	iFieldFormatters[originalPrinter.getFieldType()  ]  =  new  FieldFormatter((  FieldFormatter)originalPrinter,  sourceName);	  iFieldFormatters[originalPrinter.getFieldType()    ]    =    new    FieldFormatter((    FieldFormatter)originalPrinter,    suffix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
