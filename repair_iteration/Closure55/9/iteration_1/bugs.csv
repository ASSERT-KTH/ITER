bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.size())  {  [CE]  for-each  not  applicable  to  expression  type  [FE]    IllegalStateException  [CONTEXT]    int  savings  =  0;  for  (Reduction  reduction  :  reductions)  {  savings  +=  reduction.estimateSavings();  }    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  [BUGGY]  for(Reduction  reduction  :  reductions.size())  {  [BUGGY]  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	94	94	1	replace	for(Reduction  reduction  :  reductions.size())  {	for  (Reduction  reduction  :  reductions)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	17	None	replace
2	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.iterator().next())  {  [CE]  for-each  not  applicable  to  expression  type  [FE]      IllegalStateException  [CONTEXT]    int  savings  =  0;  for  (Reduction  reduction  :  reductions)  {  savings  +=  reduction.estimateSavings();  }    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  [BUGGY]  for(Reduction  reduction  :  reductions.iterator().next())  {  [BUGGY]  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	94	94	1	replace	for(Reduction  reduction  :  reductions.iterator().next())  {	for  (Reduction  reduction  :  reductions)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	17	None	replace
3	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  [CE]  cannot  find  symbol  [FE]        IllegalStateException  [CONTEXT]    int  savings  =  0;  for  (Reduction  reduction  :  reductions)  {  savings  +=  reduction.estimateSavings();  }    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  [BUGGY]  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	94	94	1	replace	for(Reduction  reduction  :  reductions.values())  {	for  (Reduction  reduction  :  reductions)  {  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
4	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.get(0))  {  [CE]  cannot  find  symbol  [FE]          IllegalStateException  [CONTEXT]    int  savings  =  0;  for  (Reduction  reduction  :  reductions)  {  savings  +=  reduction.estimateSavings();  }    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  [BUGGY]  for(Reduction  reduction  :  reductions.get(0))  {  [BUGGY]  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	94	94	1	replace	for(Reduction  reduction  :  reductions.get(0))  {	for  (Reduction  reduction  :  reductions)  {  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
5	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]            IllegalStateException  [CONTEXT]    int  savings  =  0;  for  (Reduction  reduction  :  reductions)  {  savings  +=  reduction.estimateSavings();  }    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  [BUGGY]    [BUGGY]  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	94	94	1	replace	  	for  (Reduction  reduction  :  reductions)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
6	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.length)  {  [CE]  cannot  find  symbol  length  [FE]    IllegalStateException  [CONTEXT]    int  savings  =  0;  for  (Reduction  reduction  :  reductions)  {  savings  +=  reduction.estimateSavings();  }    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  [BUGGY]  for(Reduction  reduction  :  reductions.length)  {  [BUGGY]  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	94	94	1	replace	for(Reduction  reduction  :  reductions.length)  {	for  (Reduction  reduction  :  reductions)  {  	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
