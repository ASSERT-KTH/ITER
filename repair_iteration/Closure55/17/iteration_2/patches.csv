bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  reducers;  [CE]  cannot  find  symbol  reducers  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  reducers;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.removeFirstChild()  :  reducers;	  return    root!=    null?    root.removeFirstChild()    :    reductions;    	non-compiled	[CE]  cannot  find  symbol  reducers	87	None	replace
2	[BUG]  [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  savers;  [CE]  cannot  find  symbol  savers  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  savers;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.removeFirstChild()  :  savers;	  return    root!=    null?    root.removeFirstChild()    :    reductions;    	non-compiled	[CE]  cannot  find  symbol  savers	87	None	replace
3	[BUG]  [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  reductionMap;  [CE]  cannot  find  symbol  reductionMap  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  reductionMap;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.removeFirstChild()  :  reductionMap;	  return    root!=    null?    root.removeFirstChild()    :    reductions;    	non-compiled	[CE]  cannot  find  symbol  reductionMap	87	None	replace
4	[BUG]  [BUGGY]  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reduction  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reduction	111	None	replace
5	[BUG]  [BUGGY]  return  pruningRoot!=  null?  pruning.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  pruningRoot  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  pruningRoot!=  null?  pruning.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  pruningRoot!=  null?  pruning.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  pruningRoot	111	None	replace
6	[BUG]  [BUGGY]  return  pruning!=  null?  pruning.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  pruning  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  pruning!=  null?  pruning.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  pruning!=  null?  pruning.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  pruning	111	None	replace
7	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
8	[BUG]  [BUGGY]  Node  addingRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addingRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addingRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	111	None	replace
9	[BUG]  [BUGGY]  return  contributingRoot!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  contributingRoot  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  contributingRoot!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  contributingRoot!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  contributingRoot	111	None	replace
10	[BUG]  [BUGGY]  return(root!=  null)?  reducer.getFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducer.getFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducer.getFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
11	[BUG]  [BUGGY]  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reduction  [FE]          IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reduction	107	None	replace
12	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getLastChild();	  return    root.removeFirstChild();    	compilable	  [FE]  IllegalArgumentException  	102	9	replace
13	[BUG]  [BUGGY]  return  root.getLastChild();  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getLastChild();	  return    root.removeFirstChild();    	compilable	  [FE]  IllegalArgumentException  	102	9	replace
14	[BUG]  [BUGGY]  return  root.removeLastChild();  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.removeLastChild();	  return    root.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
15	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild();	  return    root.removeFirstChild();    	compilable	  [FE]  IllegalArgumentException  	102	9	replace
16	[BUG]  [BUGGY]  return  root.getFirstChild();  [FE]  IllegalArgumentException  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild();	  return    root.removeFirstChild();    	compilable	  [FE]  IllegalArgumentException  	102	9	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getNext();	  return    root.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	102	8	replace
18	[BUG]  [BUGGY]  return  root.getNext();  [FE]  AssertionFailedError  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getNext();	  return    root.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	102	8	replace
19	[BUG]  [BUGGY]  return  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  reducer.removeFirstChild();	  return    root.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
20	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.cloneTree();	  return    root.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	102	9	replace
21	[BUG]  [BUGGY]  return  root.cloneTree();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.cloneTree();	  return    root.removeFirstChild();    	compilable	  [FE]  IllegalStateException  	102	9	replace
22	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
23	[BUG]  [BUGGY]  Node  parent  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  parent  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  parent  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
24	[BUG]  [BUGGY]  return  parent!=  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  parent  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parent!=  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parent!=  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	81	None	replace
25	[BUG]  [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  parent  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	81	None	replace
26	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reductions.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reductions.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reductions.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
27	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.removeFirstChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  root.removeFirstChild();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
28	[BUG]  [BUGGY]  return  (root  ==  null)?  reducer.removeFirstChild()  :  root.removeFirstChild();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root  ==  null)?  reducer.removeFirstChild()  :  root.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root  ==  null)?  reducer.removeFirstChild()  :  root.removeFirstChild();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
29	[BUG]  [BUGGY]  return  (root!=  null)?  reductions.removeFirstChild()  :  root.removeFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  reductions.removeFirstChild()  :  root.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root!=  null)?  reductions.removeFirstChild()  :  root.removeFirstChild();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	75	None	replace
30	[BUG]  [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  reducer;  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=  null)?  root.removeFirstChild()  :  reducer;	  return(root!=    null)?    reducer.removeFirstChild()    :    reducer;    	non-compiled	[CE]  incompatible  types	70	None	replace
31	[BUG]  [BUGGY]  return(reductions!=  null)?  root.removeFirstChild()  :  reducer;  [CE]  cannot  find  symbol  reductions  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reductions!=  null)?  root.removeFirstChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reductions!=  null)?  root.removeFirstChild()  :  reducer;	  return(root!=    null)?    reducer.removeFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol  reductions	70	None	replace
32	[BUG]  [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  reducer;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer  ==  null)?  root.removeFirstChild()  :  reducer;	  return(root!=    null)?    reducer.removeFirstChild()    :    reducer;    	non-compiled	[CE]  incompatible  types	70	None	replace
33	[BUG]  [BUGGY]  return(root!=  null)?  reducer.removeFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducer.removeFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducer.removeFirstChild()  :  reducer.getFirstChild();	  return(root!=    null)?    reducer.removeFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
34	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
35	[BUG]  [BUGGY]  return  parent!=  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  parent  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parent!=  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parent!=  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	8	None	replace
36	[BUG]  [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  reductions  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol  reductions	8	None	replace
37	[BUG]  [BUGGY]  return  root  ==  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root  ==  null?  reducer.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
38	[BUG]  [BUGGY]  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  parent  =  reducer.getParent();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    parent    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
39	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
40	[BUG]  [BUGGY]  return  lastChild!=  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [CE]  cannot  find  symbol  lastChild  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  lastChild!=  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  lastChild!=  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	79	None	replace
41	[BUG]  [BUGGY]  Node  lastChild  =  reducer.removeLastChild();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  lastChild  =  reducer.removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  lastChild  =  reducer.removeLastChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
42	[BUG]  [BUGGY]  return  lastChild  ==  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [CE]  cannot  find  symbol  lastChild  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  lastChild  ==  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  lastChild  ==  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	79	None	replace
43	[BUG]  [BUGGY]  return  root!=  null?  lastChild.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [CE]  cannot  find  symbol  lastChild  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  lastChild.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  lastChild.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeLastChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	79	None	replace
44	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]          IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	15	None	replace
45	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]            IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	15	None	replace
46	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]              IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	15	None	replace
47	[BUG]  [BUGGY]  Node  result  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]                IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  result  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  result  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	15	None	replace
48	[BUG]  [BUGGY]  Node  <?>  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  type  Node  does  not  take  parameters  [FE]                  IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  <?>  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  <?>  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  type  Node  does  not  take  parameters	15	None	replace
49	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
50	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  lastChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  lastChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  lastChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
51	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  firstChild  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
52	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  firstChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  firstChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  firstChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
53	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  addRoot  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  addRoot  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  addRoot  =  reducer.removeFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
54	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  addRoot  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  addRoot  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  addRoot  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
55	[BUG]  [BUGGY]  return  root.removeFirstChild();  Node  last  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Node  last  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Node  last  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
56	[BUG]  [BUGGY]  return  root.removeFirstChild();  Preconditions.checkState(root.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  Preconditions  [FE]                  IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  Preconditions.checkState(root.getType()  ==  Token.NAME);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.removeFirstChild();    Preconditions.checkState(root.getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol  Preconditions	101	None	add
57	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeLastChild()  :  null;  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeLastChild()  :  null;	  return    root!=    null?    root.removeLastChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
58	[BUG]  [BUGGY]  return  root  ==  null?  root.removeLastChild()  :  null;  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root  ==  null?  root.removeLastChild()  :  null;	  return    root!=    null?    root.removeLastChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
59	[BUG]  [BUGGY]  return  root!=  null?  root.removeLastChild()  :  reducer;  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.removeLastChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.removeLastChild()  :  reducer;	  return    root!=    null?    root.removeLastChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
60	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
61	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
62	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
63	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	28	None	add
64	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  firstChild  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
65	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  lastChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
66	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]            AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	28	None	add
67	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  firstChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
68	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]                AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root    ==    null?    root.removeFirstChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	28	None	add
69	[BUG]  [BUGGY]  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    addRoot    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	84	None	replace
70	[BUG]  [BUGGY]  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    addRoot    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	84	None	replace
71	[BUG]  [BUGGY]  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    addRoot    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	84	None	replace
72	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
73	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  lastChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  lastChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  lastChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
74	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  firstChild  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
75	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  firstChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  firstChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  firstChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
76	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  newChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  newChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  newChild  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
77	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  last  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  last  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  last  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
78	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  addRoot  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  addRoot  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  addRoot  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
79	[BUG]  [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  addRoot  =  reducer.getAncestor(SAVINGS_THRESHOLD);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeFirstChild();  Node  addRoot  =  reducer.getAncestor(SAVINGS_THRESHOLD);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().removeFirstChild();    Node  addRoot  =  reducer.getAncestor(SAVINGS_THRESHOLD);	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
80	[BUG]  [BUGGY]  return(root!=  null)?  reductionMap.removeFirstChild()  :  null;  [CE]  cannot  find  symbol  reductionMap  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reductionMap.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reductionMap.removeFirstChild()  :  null;	  return(root!=    null)?    reductions.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  reductionMap	97	None	replace
81	[BUG]  [BUGGY]  return(root  ==  null)?  reductionMap.removeFirstChild()  :  null;  [CE]  cannot  find  symbol  reductionMap  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reductionMap.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reductionMap.removeFirstChild()  :  null;	  return(root!=    null)?    reductions.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  reductionMap	97	None	replace
82	[BUG]  [BUGGY]  return(root!=  null)?  reducers.removeFirstChild()  :  null;  [CE]  cannot  find  symbol  reducers  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducers.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducers.removeFirstChild()  :  null;	  return(root!=    null)?    reductions.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  reducers	97	None	replace
83	[BUG]  [BUGGY]  return(root!=  null)?  pruning.removeFirstChild()  :  null;  [CE]  cannot  find  symbol  pruning  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  pruning.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  pruning.removeFirstChild()  :  null;	  return(root!=    null)?    reductions.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  pruning	97	None	replace
84	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
85	[BUG]  [BUGGY]  Node  addingRoot  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  addingRoot  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  addingRoot  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
86	[BUG]  [BUGGY]  return  addingRoot!=  null?  root.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  addingRoot  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  addingRoot!=  null?  root.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  addingRoot!=  null?  root.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  addingRoot	109	None	replace
87	[BUG]  [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reductions.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	109	None	replace
88	[BUG]  [BUGGY]  return  root!=  null?  reduction.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  reduction  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reduction.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reduction.removeFirstChild()  :  null;  Node  addingRoot  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    addingRoot    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reduction	109	None	replace
89	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return(reducer!=  null)?  root.getFirstChild()  :  null;	  return(root!=    null)?    reducer.getFirstChild()    :    null;    	compilable	  [FE]  IllegalArgumentException  	71	9	replace
90	[BUG]  [BUGGY]  return(reducer!=  null)?  root.getFirstChild()  :  null;  [FE]  IllegalArgumentException  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=  null)?  root.getFirstChild()  :  null;	  return(root!=    null)?    reducer.getFirstChild()    :    null;    	compilable	  [FE]  IllegalArgumentException  	71	9	replace
91	[BUG]  [BUGGY]  return(root!=  null)?  reducer.getFirstChild()  :  root;  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducer.getFirstChild()  :  root;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducer.getFirstChild()  :  root;	  return(root!=    null)?    reducer.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
92	[BUG]  [BUGGY]  return(root!=  null)?  reducer.getLastChild()  :  null;  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducer.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducer.getLastChild()  :  null;	  return(root!=    null)?    reducer.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return(reducer  ==  null)?  root.getFirstChild()  :  null;	  return(root!=    null)?    reducer.getFirstChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	71	8	replace
94	[BUG]  [BUGGY]  return(reducer  ==  null)?  root.getFirstChild()  :  null;  [FE]  AssertionFailedError  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer  ==  null)?  root.getFirstChild()  :  null;	  return(root!=    null)?    reducer.getFirstChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	71	8	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root  ==  null?  root.getFirstChild()  :  null;	  return    root!=    null?    root.getLastChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	32	8	replace
96	[BUG]  [BUGGY]  return  root  ==  null?  root.getFirstChild()  :  null;  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root  ==  null?  root.getFirstChild()  :  null;	  return    root!=    null?    root.getLastChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	32	8	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root  ==  null?  root.getLastChild()  :  null;	  return    root!=    null?    root.getLastChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	32	8	replace
98	[BUG]  [BUGGY]  return  root  ==  null?  root.getLastChild()  :  null;  [FE]  AssertionFailedError  [FE]      IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root  ==  null?  root.getLastChild()  :  null;	  return    root!=    null?    root.getLastChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	32	8	replace
99	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  node;  [CE]  cannot  find  symbol  node  [FE]        IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  node;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.getLastChild()  :  node;	  return    root!=    null?    root.getLastChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  node	32	None	replace
100	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.getLastChild()  :  reducer.getLastChild();	  return    root!=    null?    root.getLastChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
101	[BUG]  [BUGGY]  return  root!=  null?  root.getFirstChild()  :  reducer;  [CE]  incompatible  types  [FE]    IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getFirstChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.getFirstChild()  :  reducer;	  return    root!=    null?    root.getFirstChild()    :    null;    	non-compiled	[CE]  incompatible  types	23	None	replace
102	[BUG]  [BUGGY]  reducer  =  root.removeFirstChild(),  reducer);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer  =  root.removeFirstChild(),  reducer);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer  =  root.removeFirstChild(),  reducer);	  reducer    =    root.removeFirstChild();    	non-compiled	[CE]  ';'  expected	104	None	replace
103	[BUG]  [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "___________________________________________________  [CE]  unclosed  string  literal  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "___________________________________________________  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "___________________________________________________	  reducer    =    root.removeFirstChild();    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
104	[BUG]  [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "__________________________________________________  [CE]  unclosed  string  literal  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "__________________________________________________  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "__________________________________________________	  reducer    =    root.removeFirstChild();    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
105	[BUG]  [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "____________________________________________________  [CE]  unclosed  string  literal  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "____________________________________________________  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "____________________________________________________	  reducer    =    root.removeFirstChild();    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
106	[BUG]  [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "_________________________________________________  [CE]  unclosed  string  literal  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "_________________________________________________  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "_________________________________________________	  reducer    =    root.removeFirstChild();    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
107	[BUG]  [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "_____________________________________________________  [CE]  unclosed  string  literal  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "_____________________________________________________  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer  =  root.removeFirstChild()  &&  reducer.getLastChild().getString().equals( "_____________________________________________________	  reducer    =    root.removeFirstChild();    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
108	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.get  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.get  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.get	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addRoot    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  	51	None	replace
109	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.getFirstChild()  :  null;  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.get  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.getFirstChild()  :  null;  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.get  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.getFirstChild()  :  null;  Node  addRoot  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.get	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addRoot    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  	51	None	replace
110	[BUG]  [BUGGY]  return  (root  ==  null)?  reducer.removeFirstChild()  :  root.cloneTree();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root  ==  null)?  reducer.removeFirstChild()  :  root.cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root  ==  null)?  reducer.removeFirstChild()  :  root.cloneTree();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
111	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.cloneTree();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  root.cloneTree();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
112	[BUG]  [BUGGY]  return  (root!=  null)?  reducer.getFirstChild()  :  root.cloneTree();  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  reducer.getFirstChild()  :  root.cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root!=  null)?  reducer.getFirstChild()  :  root.cloneTree();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
113	[BUG]  [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  return(reducer!=  null)?  root.removeFirstChild()  :  null;  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  return(reducer!=  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=    null)?    root.removeFirstChild()    :    null;    Node  return(reducer!=  null)?  root.removeFirstChild()  :  null;	  	non-compiled	[CE]  not  a  statement	1	None	add
114	[BUG]  [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  resource  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  unreachable  statement  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  resource  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=    null)?    root.removeFirstChild()    :    null;    Node  resource  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  unreachable  statement	1	None	add
115	[BUG]  [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  unreachable  statement  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=    null)?    root.removeFirstChild()    :    null;    Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  unreachable  statement	1	None	add
116	[BUG]  [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  resource  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  resource  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=    null)?    root.removeFirstChild()    :    null;    Node  resource  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  cannot  find  symbol  reductionr	1	None	add
117	[BUG]  [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ");  [CE]  unreachable  statement  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer!=  null)?  root.removeFirstChild()  :  null;  Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ");  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer!=    null)?    root.removeFirstChild()    :    null;    Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ");	  	non-compiled	[CE]  unreachable  statement	1	None	add
118	[BUG]  [BUGGY]  return(root  ==  null)?  root.getFirstChild()  :  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.getFirstChild()  :  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  root.getFirstChild()  :  reducer.getLastChild();	  return(root    ==    null)?    root.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
119	[BUG]  [BUGGY]  return(root  ==  null)?  root.getFirstChild()  :  reducer;  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.getFirstChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  root.getFirstChild()  :  reducer;	  return(root    ==    null)?    root.getFirstChild()    :    null;    	non-compiled	[CE]  incompatible  types	56	None	replace
120	[BUG]  [BUGGY]  return(root!=  null)?  root.getFirstChild()  :  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  root.getFirstChild()  :  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  root.getFirstChild()  :  reducer.getLastChild();	  return(root    ==    null)?    root.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.getNext()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return(root  ==  null)?  root.getNext()  :  null;	  return(root    ==    null)?    root.getFirstChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	56	8	replace
122	[BUG]  [BUGGY]  return(root  ==  null)?  root.getNext()  :  null;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.getNext()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  root.getNext()  :  null;	  return(root    ==    null)?    root.getFirstChild()    :    null;    	compilable	  [FE]  AssertionFailedError  	56	8	replace
123	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  root.getLastChild();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  root.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  root.getLastChild();	  return(root    ==    null)?    root.removeFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
124	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  root.getFirstChild();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  root.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  root.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
125	[BUG]  [BUGGY]  return(root  ==  null)?  root.removeFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.removeFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  root.removeFirstChild()  :  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
126	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  root.getNext();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  root.getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  root.getNext();	  return(root    ==    null)?    root.removeFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
127	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  reductions;  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  reductions;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  reductions;	  return(root    ==    null)?    reducer.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
128	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  reducer;  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  reducer;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  reducer;	  return(root    ==    null)?    reducer.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
129	[BUG]  [BUGGY]  reducings.add(root);  [CE]  cannot  find  symbol  reducings  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducings.add(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducings.add(root);	  reducers.add(root);    	non-compiled	[CE]  cannot  find  symbol  reducings	69	None	replace
130	[BUG]  [BUGGY]  reducer.addChildToBack(root);  [CE]  cannot  find  symbol  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer.addChildToBack(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer.addChildToBack(root);	  reducers.add(root);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
131	[BUG]  [BUGGY]  reductions.add(root);  [CE]  cannot  find  symbol  reductions  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reductions.add(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reductions.add(root);	  reducers.add(root);    	non-compiled	[CE]  cannot  find  symbol  reductions	69	None	replace
132	[BUG]  [BUGGY]  reducer.add(root);  [CE]  cannot  find  symbol  [FE]                                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer.add(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer.add(root);	  reducers.add(root);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
133	[BUG]  [BUGGY]  prunings.add(root);  [CE]  cannot  find  symbol  prunings  [FE]                                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  prunings.add(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	prunings.add(root);	  reducers.add(root);    	non-compiled	[CE]  cannot  find  symbol  prunings	69	None	replace
134	[BUG]  [BUGGY]  reducer.addChildToFront(root);  [CE]  cannot  find  symbol  [FE]                                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  reducer.addChildToFront(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	reducer.addChildToFront(root);	  reducers.add(root);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
135	[BUG]  [BUGGY]  return  (root!=  null)?  reducer.getFirstChild()  :  root.getFirstChild();  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  reducer.getFirstChild()  :  root.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root!=  null)?  reducer.getFirstChild()  :  root.getFirstChild();	  return    (root!=    null)?    root.getFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
136	[BUG]  [BUGGY]  return  (root!=  null)?  reducer.getFirstChild()  :  root.getLastChild();  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  reducer.getFirstChild()  :  root.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root!=  null)?  reducer.getFirstChild()  :  root.getLastChild();	  return    (root!=    null)?    root.getFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
137	[BUG]  [BUGGY]  return  (root!=  null)?  root.getFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  (root!=  null)?  root.getFirstChild()  :  reducer.getFirstChild();	  return    (root!=    null)?    root.getFirstChild()    :    reducer;    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
138	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getLastChild().getNext().getNext();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
139	[BUG]  [BUGGY]  return  root.getLastChild().getNext().getNext();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getLastChild().getNext().getNext();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
140	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getLastChild().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().getLastChild().getNext().getNext();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
141	[BUG]  [BUGGY]  return  root.getFirstChild().getLastChild().getNext().getNext();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getLastChild().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getLastChild().getNext().getNext();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
142	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getParent().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().getParent().getNext().getNext();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
143	[BUG]  [BUGGY]  return  root.getFirstChild().getParent().getNext().getNext();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getParent().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getParent().getNext().getNext();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
144	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().getNext().getLastChild();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
145	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getLastChild();  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getNext().getLastChild();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
146	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().getNext().getParent();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
147	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getParent();  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getNext().getParent();	  return    root.getFirstChild().getNext().getNext();    	compilable	  [FE]  NullPointerException  	42	9	replace
148	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext(),  reducer.getLastChild());  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext(),  reducer.getLastChild());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getNext().getNext(),  reducer.getLastChild());	  return    root.getFirstChild().getNext().getNext();    	non-compiled	[CE]  ';'  expected	42	None	replace
149	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getLastChild().removeFirstChild();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  IllegalStateException  	106	9	replace
150	[BUG]  [BUGGY]  return  root.getLastChild().removeFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getLastChild().removeFirstChild();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  IllegalStateException  	106	9	replace
151	[BUG]  [BUGGY]  return  root.getFirstChild().removeLastChild();  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().removeLastChild();	  return    root.getFirstChild().removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
152	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().getNext().removeFirstChild();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  NullPointerException  	106	9	replace
153	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().removeFirstChild();  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getNext().removeFirstChild();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  NullPointerException  	106	9	replace
154	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getNext().removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getNext().removeFirstChild();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  NullPointerException  	106	9	replace
155	[BUG]  [BUGGY]  return  root.getNext().removeFirstChild();  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getNext().removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getNext().removeFirstChild();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  NullPointerException  	106	9	replace
156	[BUG]  [BUGGY]  return  root.getLastChild().removeLastChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().removeLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getLastChild().removeLastChild();	  return    root.getFirstChild().removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
157	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().cloneTree();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  IllegalStateException  	106	1	replace
158	[BUG]  [BUGGY]  return  root.getFirstChild().cloneTree();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().cloneTree();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().cloneTree();	  return    root.getFirstChild().removeFirstChild();    	compilable	  [FE]  IllegalStateException  	106	1	replace
159	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
160	[BUG]  [BUGGY]  return  lastChild!=  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  lastChild  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  lastChild!=  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  lastChild!=  null?  root.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	82	None	replace
161	[BUG]  [BUGGY]  Node  lastChild  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  lastChild  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  lastChild  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
162	[BUG]  [BUGGY]  return  root!=  null?  lastChild.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  lastChild  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  lastChild.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  lastChild.removeFirstChild()  :  null;  Node  lastChild  =  reducer.removeFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    null;    Node    lastChild    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	82	None	replace
163	[BUG]  [BUGGY]  return  reducer!=  null?  root.removeFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  reducer!=  null?  root.removeFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  reducer!=  null?  root.removeFirstChild()  :  reducer.getFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
164	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.getFirstChild();  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  root.getFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
165	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  reducer.getFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
166	[BUG]  [BUGGY]  return  reductions!=  null?  root.removeFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  reductions!=  null?  root.removeFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  reductions!=  null?  root.removeFirstChild()  :  reducer.getFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	60	None	replace
167	[BUG]  [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  reducer.getFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reductions.removeFirstChild()  :  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reductions.removeFirstChild()  :  reducer.getFirstChild();	  return    root!=    null?    root.removeFirstChild()    :    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	60	None	replace
168	[BUG]  [BUGGY]  return  root.removeFirstChild();  if(root!=  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  if(root!=  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.removeFirstChild();  if(root!=  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
169	[BUG]  [BUGGY]  return(root  ==  null)?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
170	[BUG]  [BUGGY]  return  root.removeFirstChild();  if(root  ==  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.removeFirstChild();  if(root  ==  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.removeFirstChild();  if(root  ==  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
171	[BUG]  [BUGGY]  if(root!=  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  if(root!=  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	if(root!=  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
172	[BUG]  [BUGGY]  if(root  ==  null)?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  if(root  ==  null)?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	if(root  ==  null)?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
173	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root  ==  null?  root.removeFirstChild()  :  null;  if(root!=  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
174	[BUG]  [BUGGY]  if(root!=  null)?  root.removeFirstChild()  :  null;  if(root  ==  null)?  root.removeFirstChild()  :  null;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  if(root!=  null)?  root.removeFirstChild()  :  null;  if(root  ==  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	if(root!=  null)?  root.removeFirstChild()  :  null;  if(root  ==  null)?  root.removeFirstChild()  :  null;	  return(root    ==    null)?    root.removeFirstChild()    :    null;    if(root    ==    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
175	[BUG]  [BUGGY]  return  root.getLastChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext());  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getLastChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext());	  return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext());    	non-compiled	[CE]  ';'  expected	44	None	replace
176	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getParent().getNext().getNext().getNext().getNext().getNext());  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getParent().getNext().getNext().getNext().getNext().getNext());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getNext().getNext().getParent().getNext().getNext().getNext().getNext().getNext());	  return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext());    	non-compiled	[CE]  ';'  expected	44	None	replace
177	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getParent().getNext().getNext().getNext());  [CE]  ';'  expected  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getParent().getNext().getNext().getNext());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getNext().getNext().getNext().getParent().getNext().getNext().getNext());	  return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext());    	non-compiled	[CE]  ';'  expected	44	None	replace
178	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    firstChild    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
179	[BUG]  [BUGGY]  return(root!=  null)?  reducer.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducer.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducer.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    firstChild    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
180	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.getFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.getFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.getFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    firstChild    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
181	[BUG]  [BUGGY]  return(root  ==  null)?  reductions.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                    AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reductions.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reductions.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    firstChild    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	50	None	replace
182	[BUG]  [BUGGY]  return(root!=  null)?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  root.removeFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    firstChild    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
183	[BUG]  [BUGGY]  return(root  ==  null)?  root.getFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  root.getFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  root.getFirstChild()  :  null;  Node  firstChild  =  reducer.getFirstChild();	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    firstChild    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
184	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]            AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	49	None	replace
185	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
186	[BUG]  [BUGGY]  Node  result  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]                AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  result  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  result  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionr	49	None	replace
187	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.get  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.get  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.get	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  	49	None	replace
188	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]                    AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	49	None	replace
189	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
190	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]                        AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	49	None	replace
191	[BUG]  [BUGGY]  return(root!=  null)?  reduction.removeFirstChild()  :  null;  [CE]  cannot  find  symbol  reduction  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reduction.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reduction.removeFirstChild()  :  null;	  return(reducer!=    null)?    root.removeFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  reduction	2	None	replace
192	[BUG]  [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  Node  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  Node  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer    ==    null)?    root.removeFirstChild()    :    null;    Node  return(reducer  ==  null)?  root.removeFirstChild()  :  null;	  	non-compiled	[CE]  not  a  statement	4	None	add
193	[BUG]  [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  (reducer  ==  null)?  root.removeFirstChild()  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  (reducer  ==  null)?  root.removeFirstChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer    ==    null)?    root.removeFirstChild()    :    null;    (reducer  ==  null)?  root.removeFirstChild()  :  null;	  	non-compiled	[CE]  not  a  statement	4	None	add
194	[BUG]  [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  Node  resource  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  Node  resource  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer    ==    null)?    root.removeFirstChild()    :    null;    Node  resource  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  unreachable  statement	4	None	add
195	[BUG]  [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(reducer  ==  null)?  root.removeFirstChild()  :  null;  Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(reducer    ==    null)?    root.removeFirstChild()    :    null;    Node  reduction  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  unreachable  statement	4	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getLastChild().getNext();	  return    root.getFirstChild().getNext();    	compilable	  [FE]  AssertionFailedError  	66	8	replace
197	[BUG]  [BUGGY]  return  root.getLastChild().getNext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getLastChild().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getLastChild().getNext();	  return    root.getFirstChild().getNext();    	compilable	  [FE]  AssertionFailedError  	66	8	replace
198	[BUG]  [BUGGY]  return  root.getFirstChild().getType()  ==  Token.FUNCTION?  root.getLastChild().getString()  :  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getType()  ==  Token.FUNCTION?  root.getLastChild().getString()  :  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getType()  ==  Token.FUNCTION?  root.getLastChild().getString()  :  reducer.getLastChild();	  return    root.getFirstChild().getNext();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
199	[BUG]  [BUGGY]  return  root.getFirstChild().getType()  ==  Token.NAME?  root.getLastChild().getString()  :  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getType()  ==  Token.NAME?  root.getLastChild().getString()  :  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getType()  ==  Token.NAME?  root.getLastChild().getString()  :  reducer.getLastChild();	  return    root.getFirstChild().getNext();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
200	[BUG]  [BUGGY]  return  root.getFirstChild().getType()  ==  Token.CALL?  root.getLastChild().getString()  :  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getType()  ==  Token.CALL?  root.getLastChild().getString()  :  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getType()  ==  Token.CALL?  root.getLastChild().getString()  :  reducer.getLastChild();	  return    root.getFirstChild().getNext();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
201	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	add	return  root.getFirstChild().getLastChild();	  return    root.getFirstChild().getNext();    	compilable	  [FE]  IllegalArgumentException  	66	9	replace
202	[BUG]  [BUGGY]  return  root.getFirstChild().getLastChild();  [FE]  IllegalArgumentException  [FE]            AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getLastChild();	  return    root.getFirstChild().getNext();    	compilable	  [FE]  IllegalArgumentException  	66	9	replace
203	[BUG]  [BUGGY]  return  root.getFirstChild().getType()  ==  Token.FUNCTION?  root.getLastChild().getString()  :  root.getLastChild();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getType()  ==  Token.FUNCTION?  root.getLastChild().getString()  :  root.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getFirstChild().getType()  ==  Token.FUNCTION?  root.getLastChild().getString()  :  root.getLastChild();	  return    root.getFirstChild().getNext();    	non-compiled	[CE]  incompatible  types	66	None	replace
204	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
205	[BUG]  [BUGGY]  return(root  ==  null)?  reduction.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reduction  [FE]              AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reduction.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reduction.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reduction	93	None	replace
206	[BUG]  [BUGGY]  return(root!=  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root!=  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root!=  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
207	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
208	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.get  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.get  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reduction.getClass().toString()  + ":helper ",  reducer.get	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  	93	None	replace
209	[BUG]  [BUGGY]  return(root  ==  null)?  reductions.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]                      AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reductions.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reductions.removeFirstChild()  :  null;  Node  addingRoot  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    addingRoot    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	93	None	replace
210	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
211	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	35	None	add
212	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	35	None	add
213	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	35	None	add
214	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  result  =  reducer.getFirstChild().getNext().getNext().getNext().getNext();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  result  =  reducer.getFirstChild().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  result  =  reducer.getFirstChild().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
215	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  lastChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  lastChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  lastChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
216	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext().getNext();  [CE]  cannot  find  symbol  [FE]                NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
217	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext();  [CE]  cannot  find  symbol  [FE]                  NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext();    Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
218	[BUG]  [BUGGY]  return  reducer.getReturnStatement();  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  reducer.getReturnStatement();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  reducer.getReturnStatement();	  return    root.getReturnStatement();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
219	[BUG]  [BUGGY]  return  reductions.getReturnStatement();  [CE]  cannot  find  symbol  reductions  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  reductions.getReturnStatement();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  reductions.getReturnStatement();	  return    root.getReturnStatement();    	non-compiled	[CE]  cannot  find  symbol  reductions	67	None	replace
220	[BUG]  [BUGGY]  return  root.getReturnStatement(),  reducer);  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getReturnStatement(),  reducer);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getReturnStatement(),  reducer);	  return    root.getReturnStatement();    	non-compiled	[CE]  ';'  expected	67	None	replace
221	[BUG]  [BUGGY]  return  root.getReturnStatement(),  reducer.getErrorStatement());  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getReturnStatement(),  reducer.getErrorStatement());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getReturnStatement(),  reducer.getErrorStatement());	  return    root.getReturnStatement();    	non-compiled	[CE]  ';'  expected	67	None	replace
222	[BUG]  [BUGGY]  return  root.getReturnStatement(),  reducer.getParent());  [CE]  ';'  expected  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getReturnStatement(),  reducer.getParent());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getReturnStatement(),  reducer.getParent());	  return    root.getReturnStatement();    	non-compiled	[CE]  ';'  expected	67	None	replace
223	[BUG]  [BUGGY]  return  root.getReturnStatement(),  reducer.getErrorStatement();  [CE]  ';'  expected  [FE]                                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getReturnStatement(),  reducer.getErrorStatement();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root.getReturnStatement(),  reducer.getErrorStatement();	  return    root.getReturnStatement();    	non-compiled	[CE]  ';'  expected	67	None	replace
224	[BUG]  [BUGGY]  return  parseHelperCode(root,  reducer);  [CE]  method  parseHelperCode  in  class  FunctionRewriter  cannot  be  applied  to  given  types;  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parseHelperCode(root,  reducer);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parseHelperCode(root,  reducer);	  return    parseHelperCode(root);    	non-compiled	[CE]  method  parseHelperCode  in  class  FunctionRewriter  cannot  be  applied  to  given  types;	100	None	replace
225	[BUG]  [BUGGY]  return  parseHelperCode(reducer,  root);  [CE]  method  parseHelperCode  in  class  FunctionRewriter  cannot  be  applied  to  given  types;  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parseHelperCode(reducer,  root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parseHelperCode(reducer,  root);	  return    parseHelperCode(root);    	non-compiled	[CE]  method  parseHelperCode  in  class  FunctionRewriter  cannot  be  applied  to  given  types;	100	None	replace
226	[BUG]  [BUGGY]  return  parseHelperCode(reductions,  root);  [CE]  cannot  find  symbol  reductions  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parseHelperCode(reductions,  root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parseHelperCode(reductions,  root);	  return    parseHelperCode(root);    	non-compiled	[CE]  cannot  find  symbol  reductions	100	None	replace
227	[BUG]  [BUGGY]  return  parseHelperCode(root,  reducer.getConstantStatement());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parseHelperCode(root,  reducer.getConstantStatement());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parseHelperCode(root,  reducer.getConstantStatement());	  return    parseHelperCode(root);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
228	[BUG]  [BUGGY]  return  parseHelperCode(root,  reducer.getParent());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  parseHelperCode(root,  reducer.getParent());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  parseHelperCode(root,  reducer.getParent());	  return    parseHelperCode(root);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
229	[BUG]  [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    null    :    root.getFirstChild();    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
230	[BUG]  [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    null    :    root.getFirstChild();    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	63	None	add
231	[BUG]  [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  return  root!=  null?  null  :  root.getFirstChild();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  return  root!=  null?  null  :  root.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    null    :    root.getFirstChild();    Node  return  root!=  null?  null  :  root.getFirstChild();	  	non-compiled	[CE]  not  a  statement	63	None	add
232	[BUG]  [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]          AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    null    :    root.getFirstChild();    Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	63	None	add
233	[BUG]  [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]            AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    null    :    root.getFirstChild();    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	63	None	add
234	[BUG]  [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]              AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  null  :  root.getFirstChild();  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    null    :    root.getFirstChild();    Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	63	None	add
235	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
236	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
237	[BUG]  [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.get  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.get  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return(root  ==  null)?  reducer.removeFirstChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.get	  return(root    ==    null)?    root.removeFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  	52	None	replace
238	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    root.getLastChild()    :    null;    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
239	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    root.getLastChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
240	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  return  root!=  null?  root.getLastChild()  :  null;  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  return  root!=  null?  root.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    root.getLastChild()    :    null;    Node  return  root!=  null?  root.getLastChild()  :  null;	  	non-compiled	[CE]  not  a  statement	31	None	add
241	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]          IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    root.getLastChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
242	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  lastChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  lastChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    root.getLastChild()    :    null;    Node  lastChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
243	[BUG]  [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]              IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root!=    null?    root.getLastChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
244	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
245	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	37	None	add
246	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	37	None	add
247	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	37	None	add
248	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getParent();  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getParent();	  	non-compiled	[CE]  not  a  statement	37	None	add
249	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getParent();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getParent();	  	non-compiled	[CE]  not  a  statement	37	None	add
250	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext().getNext().getNext();  [CE]  cannot  find  symbol  [FE]                NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  addRoot  =  reducer.getFirstChild().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
251	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	37	None	add
252	[BUG]  [BUGGY]  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]            IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    newChild    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	86	None	replace
253	[BUG]  [BUGGY]  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]              IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    newChild    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	86	None	replace
254	[BUG]  [BUGGY]  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  missing  return  statement  [FE]                IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    newChild    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  missing  return  statement	86	None	replace
255	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]                IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	18	None	replace
256	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]                  IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	18	None	replace
257	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]                    IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	18	None	replace
258	[BUG]  [BUGGY]  Node  <  K,  V>  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  Node  <  K,  V>  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	Node  <  K,  V>  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  return    (root!=    null)?    root.getFirstChild()    :    null;    Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
259	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext();    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
260	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  lastChild  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  lastChild  =  reducer.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext();    Node  lastChild  =  reducer.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
261	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  return  root.getFirstChild().getNext().getNext();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext();    Node  return  root.getFirstChild().getNext().getNext();	  	non-compiled	[CE]  not  a  statement	41	None	add
262	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper   ",  reducer.getHelperSource());  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper   ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext();    Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper   ",  reducer.getHelperSource());	  	non-compiled	[CE]  unreachable  statement	41	None	add
263	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  addRoot  =  reducer.getFirstChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext();    Node  addRoot  =  reducer.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
264	[BUG]  [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ");  [CE]  unreachable  statement  [FE]              NullPointerException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root.getFirstChild().getNext().getNext();  Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ");  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    root.getFirstChild().getNext().getNext();    Node  newChild  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ");	  	non-compiled	[CE]  unreachable  statement	41	None	add
265	[BUG]  [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  this;  [CE]  incompatible  types  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root  ==  null?  root.removeFirstChild()  :  this;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root  ==  null?  root.removeFirstChild()  :  this;	  return    root!=    null?    root.removeFirstChild()    :    this;    	non-compiled	[CE]  incompatible  types	99	None	replace
266	[BUG]  [BUGGY]  return  root!=  null?  root.getFirstChild()  :  this;  [CE]  incompatible  types  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.getFirstChild()  :  this;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.getFirstChild()  :  this;	  return    root!=    null?    root.removeFirstChild()    :    this;    	non-compiled	[CE]  incompatible  types	99	None	replace
267	[BUG]  [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  SAVINGS_THRESHOLD;  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  SAVINGS_THRESHOLD;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.removeFirstChild()  :  SAVINGS_THRESHOLD;	  return    root!=    null?    root.removeFirstChild()    :    this;    	non-compiled	[CE]  incompatible  types	99	None	replace
268	[BUG]  [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  NodeUtil.getFirstChild(root);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  root.removeFirstChild()  :  NodeUtil.getFirstChild(root);  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  root.removeFirstChild()  :  NodeUtil.getFirstChild(root);	  return    root!=    null?    root.removeFirstChild()    :    this;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
269	[BUG]  [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  (root!=  null)?  root.getLastChild()  :  null;  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  (root!=  null)?  root.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    (root!=    null)?    root.getLastChild()    :    null;    (root!=  null)?  root.getLastChild()  :  null;	  	non-compiled	[CE]  not  a  statement	20	None	add
270	[BUG]  [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  parent  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  parent  =  reducer.getParent();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    (root!=    null)?    root.getLastChild()    :    null;    Node  parent  =  reducer.getParent();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
271	[BUG]  [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    (root!=    null)?    root.getLastChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
272	[BUG]  [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]          IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    (root!=    null)?    root.getLastChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
273	[BUG]  [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]            IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    (root!=    null)?    root.getLastChild()    :    null;    Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
274	[BUG]  [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  return  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  not  a  statement  [FE]              IllegalArgumentException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  (root!=  null)?  root.getLastChild()  :  null;  Node  return  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return    (root!=    null)?    root.getLastChild()    :    null;    Node  return  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  not  a  statement	20	None	add
275	[BUG]  [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.getLastChild();  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {  Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());      [BUGGY]  return  root!=  null?  reducer.removeFirstChild()  :  root.getLastChild();  [BUGGY]      }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	113	113	1	replace	return  root!=  null?  reducer.removeFirstChild()  :  root.getLastChild();	  return    (root!=    null)?    reducer.removeFirstChild()    :    root.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
