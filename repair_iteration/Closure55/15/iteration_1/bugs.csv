bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reduced.addChildrenToFront(reduction);  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reduced.addChildrenToFront(reduction);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  reduced.addChildrenToFront(reduction);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reducer.addChildrenToFront(reduction);  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reducer.addChildrenToFront(reduction);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  reducer.addChildrenToFront(reduction);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reducer.addChildToBack(reduction);  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reducer.addChildToBack(reduction);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  reducer.addChildToBack(reduction);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reduced.addChildToBack(reduction);  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reduced.addChildToBack(reduction);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  reduced.addChildToBack(reduction);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
5	[BUG]  [BUGGY]  newChild.addChildToBack(reduction);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  newChild.addChildToBack(reduction);  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	newChild.addChildToBack(reduction);	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  reducers.add(reduction);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  reducers.add(reduction);  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	reducers.add(reduction);	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  newChild.addChildrenToFront(reduction);  [CE]  illegal  start  of  expression  [FE]                IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  newChild.addChildrenToFront(reduction);  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	newChild.addChildrenToFront(reduction);	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]    [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
9	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
10	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
11	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
12	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  ReductionGatherer  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  ReductionGatherer  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  ReductionGatherer  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
13	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savingRoot.addChildrenToFront(helperCodeCost);  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savingRoot.addChildrenToFront(helperCodeCost);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savingRoot.addChildrenToFront(helperCodeCost);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savings.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savings.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  Node  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  savings.addChildrenToFront(helperCodeCost);  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  ReductionGatherer  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  ReductionGatherer  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  ReductionGatherer  helperCodeCost  =  reduction.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCodeCost);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
16	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  helperCode.addChildrenToFront(reduction);  }  [CE]  illegal  start  of  expression  [FE]    IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  helperCode.addChildrenToFront(reduction);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  helperCode.addChildrenToFront(reduction);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  helperCode.addChildrenToFront(reduction);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  helperCode.addChildrenToFront(reduction);  compiler.reportCodeChange();  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  helperCode.addChildrenToFront(reduction);  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  if(reduction.getType()  ==  Token.RETURN)  {  reducer.addChildrenToFront(reduction);  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  if(reduction.getType()  ==  Token.RETURN)  {  reducer.addChildrenToFront(reduction);  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  if(reduction.getType()  ==  Token.RETURN)  {  reducer.addChildrenToFront(reduction);  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
19	[BUG]  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reducer.addChildrenToFront(reduction);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  compiler.reportCodeChange();  }  [BUGGY]  for(Reduction  reduction  :  reductions.values())  {  reducer.addChildrenToFront(reduction);  compiler.reportCodeChange();  }  [BUGGY]  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	102	102	1	replace	for(Reduction  reduction  :  reductions.values())  {  reducer.addChildrenToFront(reduction);  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
