projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Nodeparent=n.getParent();
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Noden=n.getFirstChild();
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkState(n.getType()==Token.FUNCTION);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeTraversal.traverse(compiler,n,this);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeUtil.isReduceableFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkState(n.getType()==Token.EXPR_RESULT);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkState(n.getType()==Token.NAME);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkState(n.getType()==Token.GETPROP);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodenewChild=n.getFirstChild();
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeaddRoot=n.getFirstChild();
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isReduceableFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isFunctionExpression(n)||NodeUtil.isReduceableFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isFunctionExpression(n)||NodeUtil.isFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isReduceableFunctionExpression(n)||NodeUtil.isFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnn.getType()==Token.FUNCTION&&NodeUtil.isFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isFunctionExpression(n)&&NodeUtil.isReduceableFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isReduceableFunctionExpression(n)&&NodeUtil.isFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isImmutableFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkState(NodeUtil.isReduceableFunctionExpression(n));
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeTraversal.traverse(compiler,n,newSingleReturnStatementReducer());
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeTraversal.traverse(compiler,n,newReductionGatherer());
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeTraversal.traverse(compiler,n,newReduceableFunctionExpression());
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnn!=null&&NodeUtil.isFunctionExpression(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.mayHaveSideEffects(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isReduceableFunction(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isFunctionExpression(n)||NodeUtil.isVarDeclaration(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isExpressionNode(n);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117returnNodeUtil.isFunctionExpression(parent);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117NodeTraversal.traverse(compiler,n,newGetterReducer());
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkArgument(n.getType()==Token.NAME);
projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java117Preconditions.checkState(n.getType()==Token.BLOCK);
