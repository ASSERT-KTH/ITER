bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	3	None	add
2	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	3	None	add
3	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	7	None	add
4	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	7	None	add
5	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]            IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	17	None	replace
6	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	17	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	8	1	replace
8	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	8	1	replace
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	8	1	replace
10	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	8	1	replace
11	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]            IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	13	None	replace
12	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:help ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	13	None	replace
13	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]                IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	13	None	replace
14	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	15	None	add
15	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	15	None	add
16	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	1	None	add
17	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	1	None	add
18	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	1	None	add
19	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]          IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	1	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	2	9	replace
21	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperSource());  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	2	9	replace
22	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	2	1	replace
23	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	2	1	replace
24	[BUG]  [BUGGY]  Node  root  =  reducer.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getFirstChild();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
25	[BUG]  [BUGGY]  Node  root  =  reducer.getLastChild();  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getLastChild();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getLastChild();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
26	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot();  [CE]  cannot  find  symbol  [FE]                      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getRoot();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
27	[BUG]  [BUGGY]  Node  root  =  reducer.getParent();  [CE]  cannot  find  symbol  [FE]                        IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getParent();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getParent();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
28	[BUG]  [BUGGY]  Node  root  =  reducer.getNode();  [CE]  cannot  find  symbol  [FE]                          IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getNode();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getNode();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
29	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD);  [CE]  cannot  find  symbol  [FE]                            IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD);  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
30	[BUG]  [BUGGY]  Node  root  =  reducer.getSingleNode();  [CE]  cannot  find  symbol  [FE]                              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getSingleNode();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getSingleNode();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
31	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper: ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper: ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	16	1	replace
32	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper: ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper: ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper: ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	16	1	replace
33	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	11	None	add
34	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	11	None	add
35	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	12	1	replace
36	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	12	1	replace
37	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	12	1	replace
38	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	12	1	replace
39	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]        IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	10	None	replace
40	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	6	None	replace
41	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
42	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                  IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	6	None	replace
43	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":help   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":help   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":help   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	6	None	replace
44	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ", ",  reducer.getHelperSource());  [CE]  unclosed  string  literal  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ", ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ", ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
45	[BUG]  [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]            IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	5	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	8	9	replace
47	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getHelperSource());  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	8	9	replace
48	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]        IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionr	14	None	replace
49	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducingr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reducingr  [FE]            IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducingr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducingr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reducingr	5	None	replace
50	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]            IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionr	17	None	replace
51	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	17	1	replace
52	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	17	1	replace
53	[BUG]  [BUGGY]  Node  root  =  reducer.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.removeFirstChild();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.removeFirstChild();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
54	[BUG]  [BUGGY]  Node  root  =  reducer.getRootNode();  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getRootNode();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRootNode();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
55	[BUG]  [BUGGY]  Node  root  =  reducer.getReduction();  [CE]  cannot  find  symbol  [FE]                      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getReduction();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getReduction();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
56	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper ".,  reducer.getHelperSource());  [CE]  <identifier>  expected  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper ".,  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper ".,  reducer.getHelperSource());	  	non-compiled	[CE]  <identifier>  expected	1	None	add
57	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper, ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper, ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper, ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	15	None	add
58	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	7	None	add
59	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:helper ".,  reducer.getHelperSource());  [CE]  <identifier>  expected  [FE]      IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:helper ".,  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ".:helper ".,  reducer.getHelperSource());	  	non-compiled	[CE]  <identifier>  expected	7	None	add
60	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass(),  reducer.getHelperSource()  + ":help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]              IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass(),  reducer.getHelperSource()  + ":help ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass(),  reducer.getHelperSource()  + ":help ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	6	None	replace
61	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:help   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	11	None	add
62	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor();  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  reducer.getAncestor();  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
63	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]        IllegalStateException    [CONTEXT]    public  Node  parseHelperCode(Reducer  reducer)  {    [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]    reducer.getClass().toString()  +     ":helper   ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionr	14	None	replace
