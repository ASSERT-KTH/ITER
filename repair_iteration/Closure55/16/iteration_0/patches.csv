bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
2	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":help ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
4	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
5	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]        IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  reductions	31	None	replace
6	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]          IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  reductions	31	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
8	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:help ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]            IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
9	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  root  [FE]              IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]    [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	  	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  root	31	None	replace
10	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]    IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  reductionr	31	None	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
12	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
13	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ".:help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]        IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ".:help ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ".:help ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  reductionr	31	None	replace
14	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]    IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ":helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  reductionr	31	None	replace
15	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
16	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	compilable	  [FE]  IllegalStateException  	31	1	replace
17	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]        IllegalStateException  [CONTEXT]  public  Node  parseHelperCode(Reducer  reducer)  {  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",helper ",  reducer.getHelperSource());	Node  root  =  compiler.parseSyntheticCode(  reducer.getClass().toString()  +   ":helper ",  reducer.getHelperSource());  	non-compiled	[CE]  cannot  find  symbol  reductionr	31	None	replace
