bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  root  =  reducer.reductionMap.getLastChild();  [CE]  cannot  find  symbol  reductionMap  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductionMap.getLastChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductionMap.getLastChild();	  Node    root    =    reducer.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  reductionMap	25	None	replace
2	[BUG]  [BUGGY]  Node  root  =  reductions.getLastChild();  [CE]  cannot  find  symbol  reductions  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getLastChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getLastChild();	  Node    root    =    reducer.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	25	None	replace
3	[BUG]  [BUGGY]  Node  root  =  reducer.getLastChild(),  reducer.getFirstChild();  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getLastChild(),  reducer.getFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getLastChild(),  reducer.getFirstChild();	  Node    root    =    reducer.getLastChild();    	non-compiled	[CE]  ';'  expected	25	None	replace
4	[BUG]  [BUGGY]  Node  root  =  reducer.reduceFirstChild();  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceFirstChild();	  Node    root    =    reducer.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
5	[BUG]  [BUGGY]  Node  root  =  reducer.nextChild();  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.nextChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.nextChild();	  Node    root    =    reducer.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
6	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer.getHelperSource());  [CE]  unclosed  string  literal  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:helper   ".,    reducer.getHelperSource());    	non-compiled	[CE]  unclosed  string  literal	59	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:helper   ".,    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	59	1	replace
8	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:helper   ".,    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	59	1	replace
9	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
10	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  not  a  statement	37	None	add
11	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCompilerSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCompilerSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCompilerSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
12	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCompilerName());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCompilerName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCompilerName());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
13	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getName());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getName());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code: "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	52	9	replace
15	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code: "  +  reducer.getHelperSource());  [FE]  AssertionFailedError  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code: "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper  code: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	52	9	replace
16	[BUG]  [BUGGY]  Node  root  =  reducer.removeLastChild();  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.removeLastChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.removeLastChild();	  Node    root    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
17	[BUG]  [BUGGY]  Node  root  =  reducer.parseFirstChild();  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseFirstChild();	  Node    root    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
18	[BUG]  [BUGGY]  Node  root  =  reductions.removeFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.removeFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.removeFirstChild();	  Node    root    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	53	None	replace
19	[BUG]  [BUGGY]  Node  root  =  reducer.parent.removeFirstChild();  [CE]  cannot  find  symbol  parent  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parent.removeFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parent.removeFirstChild();	  Node    root    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	53	None	replace
20	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getName());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer: "  +  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
21	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
22	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,  helper:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,  helper:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,  helper:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
23	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	39	None	replace
24	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
25	[BUG]  [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	39	None	replace
26	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	39	None	replace
27	[BUG]  [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getHelperSource();  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getHelperSource();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRootNode(),  reducer.getHelperSource();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  ';'  expected	54	None	replace
28	[BUG]  [BUGGY]  Node  root  =  reductions.getRootNode();  [CE]  cannot  find  symbol  reductions  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getRootNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getRootNode();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  cannot  find  symbol  reductions	54	None	replace
29	[BUG]  [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getChildCount();  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getChildCount();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRootNode(),  reducer.getChildCount();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  ';'  expected	54	None	replace
30	[BUG]  [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getFirstChild();  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRootNode(),  reducer.getFirstChild();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  ';'  expected	54	None	replace
31	[BUG]  [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getErrorReporter();  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getErrorReporter();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRootNode(),  reducer.getErrorReporter();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  ';'  expected	54	None	replace
32	[BUG]  [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getHelperSource());  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRootNode(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRootNode(),  reducer.getHelperSource());	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  ';'  expected	54	None	replace
33	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper_code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper_code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	22	None	add
34	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper_code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper_code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	22	None	add
35	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper_code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper_code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper_code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper_code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper_code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	22	None	add
36	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	6	None	replace
37	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
38	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ".:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ".:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ".:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	13	None	replace
39	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass(),    reducer.getHelperSource()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	60	None	replace
40	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ":help   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ":help   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ":help   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass(),    reducer.getHelperSource()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	60	None	replace
41	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass(),    reducer.getHelperSource()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	60	None	replace
42	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ",:help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ",:help ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass(),  reducer.getHelperSource()  + ",:help ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass(),    reducer.getHelperSource()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	60	None	replace
43	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass(),    reducer.getHelperSource()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
44	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    reducer.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
45	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass(),  compiler.toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass(),  compiler.toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass(),  compiler.toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reducer.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
46	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reducer.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	41	1	replace
47	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reducer.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	41	1	replace
48	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper:   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	32	1	replace
49	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper:   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	32	1	replace
50	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",:help ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	12	None	replace
51	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",:help ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",:help ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",:help   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
52	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper    code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	35	None	add
53	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper    code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	35	None	add
54	[BUG]  [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getSingleNode();  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getSingleNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getSingleNode(),  reducer.getSingleNode();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  ';'  expected	30	None	replace
55	[BUG]  [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getHelperSource();  [CE]  ';'  expected  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getHelperSource();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getSingleNode(),  reducer.getHelperSource();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  ';'  expected	30	None	replace
56	[BUG]  [BUGGY]  Node  root  =  reductions.getSingleNode();  [CE]  cannot  find  symbol  reductions  [FE]                                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getSingleNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getSingleNode();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  cannot  find  symbol  reductions	30	None	replace
57	[BUG]  [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getCurrentNode();  [CE]  ';'  expected  [FE]                                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getCurrentNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getSingleNode(),  reducer.getCurrentNode();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  ';'  expected	30	None	replace
58	[BUG]  [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getHelperSource());  [CE]  ';'  expected  [FE]                                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getSingleNode(),  reducer.getHelperSource());	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  ';'  expected	30	None	replace
59	[BUG]  [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getNameNode();  [CE]  ';'  expected  [FE]                                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getSingleNode(),  reducer.getNameNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getSingleNode(),  reducer.getNameNode();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  ';'  expected	30	None	replace
60	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	9	None	add
61	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	9	None	add
62	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper-code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper-code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper-code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper-code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	9	None	add
63	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getName());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
64	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperName());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper: "  +  reducer.getHelperName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
65	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code     ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code     ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	51	None	add
66	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code     ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code     ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	51	None	add
67	[BUG]  [BUGGY]  Node  root  =  reducer.getNext();  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getNext();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getNext();	  Node    root    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
68	[BUG]  [BUGGY]  Node  root  =  reducer.getNameNode();  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getNameNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getNameNode();	  Node    root    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
69	[BUG]  [BUGGY]  Node  root  =  reducer.getGrandparent();  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getGrandparent();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getGrandparent();	  Node    root    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
70	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	46	None	add
71	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,  reducer:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,  reducer:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,  reducer:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	46	None	add
72	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	7	None	add
73	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	7	None	add
74	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	7	None	add
75	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(HELPER_SOURCE);  [CE]  cannot  find  symbol  HELPER_SOURCE  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(HELPER_SOURCE);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(HELPER_SOURCE);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  HELPER_SOURCE	29	None	replace
76	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  reducer);  [CE]  cannot  find  symbol  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  reducer);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  reducer);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
77	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(FACTORY_METHOD_NAME);  [CE]  cannot  find  symbol  FACTORY_METHOD_NAME  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(FACTORY_METHOD_NAME);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(FACTORY_METHOD_NAME);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  FACTORY_METHOD_NAME	29	None	replace
78	[BUG]  [BUGGY]  Node  root  =  reductions.getAncestor(SAVINGS_THRESHOLD);  [CE]  cannot  find  symbol  reductions  [FE]                                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getAncestor(SAVINGS_THRESHOLD);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getAncestor(SAVINGS_THRESHOLD);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  reductions	29	None	replace
79	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  saver);  [CE]  cannot  find  symbol  saver  [FE]                                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  saver);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  saver);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  saver	29	None	replace
80	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(RESULT_THRESHOLD);  [CE]  cannot  find  symbol  RESULT_THRESHOLD  [FE]                                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(RESULT_THRESHOLD);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(RESULT_THRESHOLD);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  RESULT_THRESHOLD	29	None	replace
81	[BUG]  [BUGGY]  Node  root  =  reductions.getRoot();  [CE]  cannot  find  symbol  reductions  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getRoot();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getRoot();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  cannot  find  symbol  reductions	26	None	replace
82	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getHelperSource();  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getHelperSource();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot(),  reducer.getHelperSource();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  ';'  expected	26	None	replace
83	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getParent();  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getParent();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot(),  reducer.getParent();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  ';'  expected	26	None	replace
84	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getChildCount();  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getChildCount();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot(),  reducer.getChildCount();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  ';'  expected	26	None	replace
85	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getErrorReporter();  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getErrorReporter();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot(),  reducer.getErrorReporter();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  ';'  expected	26	None	replace
86	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getErrorReducer();  [CE]  ';'  expected  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getErrorReducer();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot(),  reducer.getErrorReducer();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  ';'  expected	26	None	replace
87	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper,   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper,   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper,   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	57	1	replace
88	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper,   ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper,   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper,   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper,   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	57	1	replace
89	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionMap.getClass().toString()  + ",helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	5	None	replace
90	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler.getClass().toString()  + ",helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
91	[BUG]  [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ",helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ",helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	5	None	replace
92	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperName());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
93	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getName());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
94	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCurrentName());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCurrentName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCurrentName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
95	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHeaderSuffix());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHeaderSuffix());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHeaderSuffix());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
96	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCurrentNode());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCurrentNode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getCurrentNode());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
97	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getParent();  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getParent();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(),  reducer.getParent();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  ';'  expected	62	None	replace
98	[BUG]  [BUGGY]  Node  root  =  reductions.getAncestor();  [CE]  cannot  find  symbol  reductions  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getAncestor();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getAncestor();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  cannot  find  symbol  reductions	62	None	replace
99	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getChildCount();  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getChildCount();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(),  reducer.getChildCount();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  ';'  expected	62	None	replace
100	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getHelperSource();  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getHelperSource();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(),  reducer.getHelperSource();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  ';'  expected	62	None	replace
101	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getErrorReporter();  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getErrorReporter();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(),  reducer.getErrorReporter();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  ';'  expected	62	None	replace
102	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getErrorReducer();  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getErrorReducer();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(),  reducer.getErrorReducer();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  ';'  expected	62	None	replace
103	[BUG]  [BUGGY]  Node  root  =  reducer.getNode(),  reducer.getHelperSource();  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getNode(),  reducer.getHelperSource();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getNode(),  reducer.getHelperSource();	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  ';'  expected	28	None	replace
104	[BUG]  [BUGGY]  Node  root  =  reductions.getNode();  [CE]  cannot  find  symbol  reductions  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getNode();	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  cannot  find  symbol  reductions	28	None	replace
105	[BUG]  [BUGGY]  Node  root  =  reducer.getNode(),  reducer.getHelperSource());  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getNode(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getNode(),  reducer.getHelperSource());	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  ';'  expected	28	None	replace
106	[BUG]  [BUGGY]  Node  root  =  reducer.getNode(),  reducer.getParent();  [CE]  ';'  expected  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getNode(),  reducer.getParent();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getNode(),  reducer.getParent();	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  ';'  expected	28	None	replace
107	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper, ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper, ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",:helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",:helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	1	1	replace
108	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper, ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper, ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper, ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",:helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",:helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	1	1	replace
109	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getName());  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper ",  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
110	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    reductionMap.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	45	1	replace
111	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    reductionMap.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	45	1	replace
112	[BUG]  [BUGGY]  Node  root  =  reductions.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reductionMap.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	45	None	replace
113	[BUG]  [BUGGY]  Node  root  =  reducer.getClass().parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getClass().parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getClass().parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reductionMap.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
114	[BUG]  [BUGGY]  Node  root  =  reducer.reductionMap.getReduction();  [CE]  cannot  find  symbol  reductionMap  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductionMap.getReduction();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductionMap.getReduction();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reductionMap	55	None	replace
115	[BUG]  [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getHelperSource();  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getHelperSource();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getReduction(),  reducer.getHelperSource();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  ';'  expected	55	None	replace
116	[BUG]  [BUGGY]  Node  root  =  reductions.getReduction();  [CE]  cannot  find  symbol  reductions  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getReduction();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getReduction();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reductions	55	None	replace
117	[BUG]  [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getParent();  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getParent();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getReduction(),  reducer.getParent();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  ';'  expected	55	None	replace
118	[BUG]  [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getHelperSource());  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getReduction(),  reducer.getHelperSource());	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  ';'  expected	55	None	replace
119	[BUG]  [BUGGY]  Node  root  =  reducer.getRawReduction();  [CE]  cannot  find  symbol  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRawReduction();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRawReduction();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
120	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper-code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper-code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	10	1	replace
121	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper-code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper-code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  helper-code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	10	1	replace
122	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getName());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
123	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getSourceName());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getSourceName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getSourceName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
124	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper: ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper: ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper:   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper: ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
125	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ", "  reducer.getHelperSource());  [CE]  unclosed  string  literal  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ", "  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",helper ", "  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper       ",    reducer.getHelperSource());    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
126	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	23	1	replace
127	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper_code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	23	1	replace
128	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getName());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
129	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getSourceName());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getSourceName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getSourceName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
130	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getNameNode());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getNameNode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getNameNode());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
131	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperName());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getHelperName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
132	[BUG]  [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionMap  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductionMap.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ",:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionMap	11	None	replace
133	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	63	None	replace
134	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reder.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reder  [FE]              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reder.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reder.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reder	63	None	replace
135	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ":helper_code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionMap.getClass().toString()    +   ":help       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	43	None	replace
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",.:helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	4	1	replace
137	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",.:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ".:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",.:helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	4	1	replace
138	[BUG]  [BUGGY]  Node  root  =  reducer.reductionMap.getFirstChild();  [CE]  cannot  find  symbol  reductionMap  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductionMap.getFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductionMap.getFirstChild();	  Node    root    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductionMap	24	None	replace
139	[BUG]  [BUGGY]  Node  root  =  reductions.getFirstChild();  [CE]  cannot  find  symbol  reductions  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getFirstChild();	  Node    root    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reductions	24	None	replace
140	[BUG]  [BUGGY]  Node  root  =  reducer.parent.getFirstChild();  [CE]  cannot  find  symbol  parent  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parent.getFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parent.getFirstChild();	  Node    root    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	24	None	replace
141	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getName());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
142	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getSourceName());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getSourceName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getSourceName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
143	[BUG]  [BUGGY]  Node  root  =  reductions.getParent();  [CE]  cannot  find  symbol  reductions  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.getParent();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.getParent();	  Node    root    =    reducer.getParent();    	non-compiled	[CE]  cannot  find  symbol  reductions	27	None	replace
144	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,helper:   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,helper:   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper:   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,helper:   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
145	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper:   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper:   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper:   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper:   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
146	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  Helper:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  Helper:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  Helper:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
147	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  not  a  statement	20	None	add
148	[BUG]  [BUGGY]  Node  root  =  reducer.reductions.getReduction();  [CE]  cannot  find  symbol  reductions  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductions.getReduction();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductions.getReduction();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reductions	55	None	replace
149	[BUG]  [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getChildCount();  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getReduction(),  reducer.getChildCount();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getReduction(),  reducer.getChildCount();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  ';'  expected	55	None	replace
150	[BUG]  [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getRoot());  [CE]  cannot  find  symbol  parent  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getRoot());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceChild(parent,  reducer.getRoot());	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  cannot  find  symbol  parent	26	None	replace
151	[BUG]  [BUGGY]  Node  root  =  reducer.reduceChild(null,  reducer.getRoot());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceChild(null,  reducer.getRoot());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceChild(null,  reducer.getRoot());	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
152	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code     ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper  code     ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper    code       ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ":helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	51	None	add
153	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());  [CE]  no  suitable  method  found  for  parseSyntheticCode(Class<CAP#1>,String,String)  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass(),  reducer.getHelperSource()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass(),    reducer.getHelperSource()    +   ":help   ",    reducer.getHelperSource());    	non-compiled	[CE]  no  suitable  method  found  for  parseSyntheticCode(Class<CAP#1>,String,String)	60	None	replace
154	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(HIGHINGS_THRESHOLD);  [CE]  cannot  find  symbol  HIGHINGS_THRESHOLD  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(HIGHINGS_THRESHOLD);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(HIGHINGS_THRESHOLD);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  HIGHINGS_THRESHOLD	29	None	replace
155	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + "),  reducer:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + "),  reducer:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + "),  reducer:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	46	None	add
156	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    Node  return  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  not  a  statement	46	None	add
157	[BUG]  [BUGGY]  Node  root  =  reducer.firstChild();  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.firstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.firstChild();	  Node    root    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
158	[BUG]  [BUGGY]  Node  root  =  reducer.reductionMap.getSingleNode();  [CE]  cannot  find  symbol  reductionMap  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductionMap.getSingleNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductionMap.getSingleNode();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  cannot  find  symbol  reductionMap	30	None	replace
159	[BUG]  [BUGGY]  Node  root  =  reducer.parseSingleNode(reducer);  [CE]  cannot  find  symbol  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSingleNode(reducer);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSingleNode(reducer);	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
160	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getLastChild();  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(),  reducer.getLastChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(),  reducer.getLastChild();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  ';'  expected	62	None	replace
161	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  roots  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  roots  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  roots  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
162	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  variable  reducer  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  variable  reducer  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
163	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  start  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  start  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  start  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
164	[BUG]  [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getRootNode());  [CE]  cannot  find  symbol  parent  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getRootNode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceChild(parent,  reducer.getRootNode());	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  cannot  find  symbol  parent	54	None	replace
165	[BUG]  [BUGGY]  Node  root  =  reducer.rootNode();  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.rootNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.rootNode();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
166	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass(),  reducer.getHelperSource());  [CE]  no  suitable  method  found  for  parseSyntheticCode(Class<CAP#1>,String)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass(),  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  no  suitable  method  found  for  parseSyntheticCode(Class<CAP#1>,String)	38	None	replace
167	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".,:helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	61	1	replace
168	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".,:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",:help       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ".,:helper   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	61	1	replace
169	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getSource());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper_code ",  reducer.getSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper_code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	21	9	replace
171	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: "  +  reducer.getHelperSource());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	21	9	replace
172	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getReturnStatement());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getReturnStatement());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getReturnStatement());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
173	[BUG]  [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getNode());  [CE]  cannot  find  symbol  parent  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getNode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceChild(parent,  reducer.getNode());	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  cannot  find  symbol  parent	28	None	replace
174	[BUG]  [BUGGY]  Node  root  =  reducer.reductionMap.getNode();  [CE]  cannot  find  symbol  reductionMap  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductionMap.getNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductionMap.getNode();	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  cannot  find  symbol  reductionMap	28	None	replace
175	[BUG]  [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer);  [CE]  cannot  find  symbol  parent  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceChild(parent,  reducer);	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  cannot  find  symbol  parent	28	None	replace
176	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	10	1	replace
177	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper-code ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	10	1	replace
178	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperName());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperName());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper-code ",  reducer.getHelperName());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper-code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
179	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducingr.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reducingr  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducingr.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducingr.getClass().toString()  + ":helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reducingr	39	None	replace
180	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  return  compiler  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  return  compiler  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  return  compiler  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  not  a  statement	37	None	add
181	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  helper  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  helper  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  helper  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
182	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  parent  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]        IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  Node  parent  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    Node  parent  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	37	None	add
183	[BUG]  [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler,  reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.parseSyntheticCode(compiler,  reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.parseSyntheticCode(compiler,  reducer.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reducer.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
184	[BUG]  [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getSingleNode());  [CE]  cannot  find  symbol  parent  [FE]                                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduceChild(parent,  reducer.getSingleNode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduceChild(parent,  reducer.getSingleNode());	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  cannot  find  symbol  parent	30	None	replace
185	[BUG]  [BUGGY]  Node  root  =  reducers.getSingleNode();  [CE]  cannot  find  symbol  reducers  [FE]                                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.getSingleNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.getSingleNode();	  Node    root    =    reducer.getSingleNode();    	non-compiled	[CE]  cannot  find  symbol  reducers	30	None	replace
186	[BUG]  [BUGGY]  Node  root  =  reducers.getNode();  [CE]  cannot  find  symbol  reducers  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.getNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.getNode();	  Node    root    =    reducer.getNode();    	non-compiled	[CE]  cannot  find  symbol  reducers	28	None	replace
187	[BUG]  [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  reductions);  [CE]  cannot  find  symbol  reductions  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  reductions);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getAncestor(SAVINGS_THRESHOLD,  reductions);	  Node    root    =    reducer.getAncestor(SAVINGS_THRESHOLD);    	non-compiled	[CE]  cannot  find  symbol  reductions	29	None	replace
188	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",   ",  reducer.getHelperSource());  [CE]  unclosed  string  literal  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper ",   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper   ",   ",    reducer.getHelperSource());    	non-compiled	[CE]  unclosed  string  literal	44	None	replace
189	[BUG]  [BUGGY]  Node  root  =  reducers.getReduction();  [CE]  cannot  find  symbol  reducers  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.getReduction();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.getReduction();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reducers	55	None	replace
190	[BUG]  [BUGGY]  Node  root  =  reducer.reduce(reductions);  [CE]  cannot  find  symbol  reductions  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reduce(reductions);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reduce(reductions);	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reductions	55	None	replace
191	[BUG]  [BUGGY]  Node  root  =  reducedr.getReduction();  [CE]  cannot  find  symbol  reducedr  [FE]                              IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducedr.getReduction();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducedr.getReduction();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reducedr	55	None	replace
192	[BUG]  [BUGGY]  Node  root  =  reducer.reductionMap.get();  [CE]  cannot  find  symbol  reductionMap  [FE]                                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reductionMap.get();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reductionMap.get();	  Node    root    =    reducer.getReduction();    	non-compiled	[CE]  cannot  find  symbol  reductionMap	55	None	replace
193	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",  reducer.:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]                    IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",  reducer.:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductions.getClass().toString()  + ",  reducer.:helper ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductions.getClass().toString()    +   ".:helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	13	None	replace
194	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperCode());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperCode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",:helper  code ",  reducer.getHelperCode());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper    code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
195	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  [CE]  variable  reducer  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  reducer  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
196	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  helper  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  Node  helper  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    helper:   "    +    reducer.getHelperSource());    Node  helper  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  helper:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	20	None	add
197	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());  [CE]  variable  reducer  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    Node  reducer  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  variable  reducer  is  already  defined  in  method  parseHelperCode(Reducer)	46	None	add
198	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  return  compiler  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",  reducer:   "  +  reducer.getHelperSource());  Node  return  compiler  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    Node  return  compiler  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ",  reducer:   "  +  reducer.getHelperSource());	  	non-compiled	[CE]  not  a  statement	46	None	add
199	[BUG]  [BUGGY]  Node  root  =  reducers.getAncestor();  [CE]  cannot  find  symbol  reducers  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.getAncestor();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.getAncestor();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  cannot  find  symbol  reducers	62	None	replace
200	[BUG]  [BUGGY]  Node  root  =  reducerer.getAncestor();  [CE]  cannot  find  symbol  reducerer  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducerer.getAncestor();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducerer.getAncestor();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  cannot  find  symbol  reducerer	62	None	replace
201	[BUG]  [BUGGY]  Node  root  =  reducer.removeAncestor();  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.removeAncestor();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.removeAncestor();	  Node    root    =    reducer.getAncestor();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
202	[BUG]  [BUGGY]  Node  root  =  reducers.removeFirstChild();  [CE]  cannot  find  symbol  reducers  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.removeFirstChild();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.removeFirstChild();	  Node    root    =    reducer.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  reducers	53	None	replace
203	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper  code   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",:helper  code   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",:helper    code   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper  code   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	35	None	add
204	[BUG]  [BUGGY]  Node  root  =  reducers.getRootNode();  [CE]  cannot  find  symbol  reducers  [FE]                        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.getRootNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.getRootNode();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  cannot  find  symbol  reducers	54	None	replace
205	[BUG]  [BUGGY]  Node  root  =  reducedr.getRootNode();  [CE]  cannot  find  symbol  reducedr  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducedr.getRootNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducedr.getRootNode();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  cannot  find  symbol  reducedr	54	None	replace
206	[BUG]  [BUGGY]  Node  root  =  reducerer.getRootNode();  [CE]  cannot  find  symbol  reducerer  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducerer.getRootNode();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducerer.getRootNode();	  Node    root    =    reducer.getRootNode();    	non-compiled	[CE]  cannot  find  symbol  reducerer	54	None	replace
207	[BUG]  [BUGGY]  Node  root  =  reductions.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductions  [FE]                IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reductions.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reductions.parseSyntheticCode(compiler.getClass().toString()  + ",:helper ",  reducer.getHelperSource());	  Node    root    =    reductionMap.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductions	45	None	replace
208	[BUG]  [BUGGY]  Node  root  =  reducerer.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reducerer  [FE]                  IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducerer.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducerer.parseSyntheticCode(compiler.getClass().toString()  + ":helper ",  reducer.getHelperSource());	  Node    root    =    reductionMap.parseSyntheticCode(compiler.getClass().toString()    +   ":helper   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reducerer	45	None	replace
209	[BUG]  [BUGGY]  Node  root  =  reducers.getRoot();  [CE]  cannot  find  symbol  reducers  [FE]                          IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducers.getRoot();  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducers.getRoot();	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  cannot  find  symbol  reducers	26	None	replace
210	[BUG]  [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getHelperSource());  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.getRoot(),  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.getRoot(),  reducer.getHelperSource());	  Node    root    =    reducer.getRoot();    	non-compiled	[CE]  ';'  expected	26	None	replace
211	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperReducer());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperReducer());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString(),  reducer.getHelperReducer());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString(),    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
212	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper:   ",  reducer.getHelperSource());  [CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  +   ",helper:   ",  reducer.getHelperSource());  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper:   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",helper:   ",    reducer.getHelperSource());    Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ".:helper:   ",  reducer.getHelperSource());	  	non-compiled	[CE]  variable  root  is  already  defined  in  method  parseHelperCode(Reducer)	31	None	add
213	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper,   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper,   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper,   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	57	1	replace
214	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper,   ",  reducer.getHelperSource());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper,   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper,   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper       ",    reducer.getHelperSource());    Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +       ",helper,   ",    reducer.getHelperSource());    	compilable	  [FE]  IllegalStateException  	57	1	replace
215	[BUG]  [BUGGY]  Node  root  =  reducer.reducedByName(fACTORY_METHOD_NAME);  [CE]  cannot  find  symbol  fACTORY_METHOD_NAME  [FE]                      IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  reducer.reducedByName(fACTORY_METHOD_NAME);  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  reducer.reducedByName(fACTORY_METHOD_NAME);	  Node    root    =    reducer.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  fACTORY_METHOD_NAME	24	None	replace
216	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [CE]  cannot  find  symbol  reductionr  [FE]            IllegalStateException      [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reductionr.getClass().toString()  + ",:helper  code   ",  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reductionr.getClass().toString()    +   ":helper    code       ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol  reductionr	63	None	replace
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":  reducer: "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	add	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":  reducer: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	47	9	replace
218	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":  reducer: "  +  reducer.getHelperSource());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":  reducer: "  +  reducer.getHelperSource());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":  reducer: "  +  reducer.getHelperSource());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ",    reducer:   "    +    reducer.getHelperSource());    	compilable	  [FE]  AssertionFailedError  	47	9	replace
219	[BUG]  [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperCode());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  Node  parseHelperCode(Reducer  reducer)  {      [BUGGY]  Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperCode());  [BUGGY]      reducer.getClass().toString()  +       ":helper     ",  reducer.getHelperSource());  return  (root  !=  null)  ?  root.removeFirstChild()  :  null;  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  parseHelperCode  [RETURN_TYPE]  Node  Reducer  reducer  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	111	112	1	replace	Node  root  =  compiler.parseSyntheticCode(reducer.getClass().toString()  + ":helper  code ",  reducer.getHelperCode());	  Node    root    =    compiler.parseSyntheticCode(reducer.getClass().toString()    +   ":helper    code   ",    reducer.getHelperSource());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
