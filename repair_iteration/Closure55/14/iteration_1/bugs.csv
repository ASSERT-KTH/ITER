bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  compiler.report(JSError.make(reduction,  addingRoot,  SAVINGS_THRESHOLD));  [CE]  cannot  find  symbol  reduction  [FE]    IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(reduction,  addingRoot,  SAVINGS_THRESHOLD));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(reduction,  addingRoot,  SAVINGS_THRESHOLD));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
2	[BUG]  [BUGGY]  compiler.report(JSError.make(Locale.ENGLISH,  reduction.getLocale()));  [CE]  cannot  find  symbol  Locale  [FE]      IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(Locale.ENGLISH,  reduction.getLocale()));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(Locale.ENGLISH,  reduction.getLocale()));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  Locale	27	None	replace
3	[BUG]  [BUGGY]  compiler.report(JSError.make(ReductionGatherer.UNKNOWN_SOURCE,  reduction));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]        IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(ReductionGatherer.UNKNOWN_SOURCE,  reduction));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(ReductionGatherer.UNKNOWN_SOURCE,  reduction));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	27	None	replace
4	[BUG]  [BUGGY]  compiler.report(JSError.make(Locale.ENGLISH,  reduction.getLastChild()));  [CE]  cannot  find  symbol  Locale  [FE]          IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(Locale.ENGLISH,  reduction.getLastChild()));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(Locale.ENGLISH,  reduction.getLastChild()));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  Locale	27	None	replace
5	[BUG]  [BUGGY]  compiler.report(JSError.make(ReductionGatherer.UNKNOWN_SOURCE));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]            IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(ReductionGatherer.UNKNOWN_SOURCE));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(ReductionGatherer.UNKNOWN_SOURCE));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	27	None	replace
6	[BUG]  [BUGGY]  compiler.report(JSError.make(Locale.ENGLISH,  reduction));  [CE]  cannot  find  symbol  Locale  [FE]              IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(Locale.ENGLISH,  reduction));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(Locale.ENGLISH,  reduction));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  Locale	27	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]    [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	add	  	compiler.reportCodeChange();  	compilable	  [FE]  IllegalStateException  	27	1	replace
8	[BUG]  [BUGGY]    [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]    [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	  	compiler.reportCodeChange();  	compilable	  [FE]  IllegalStateException  	27	1	replace
9	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  SAVINGS_THRESHOLD));  [CE]  no  suitable  method  found  for  make(Node,int)  [FE]    IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  SAVINGS_THRESHOLD));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  SAVINGS_THRESHOLD));	compiler.reportCodeChange();  	non-compiled	[CE]  no  suitable  method  found  for  make(Node,int)	27	None	replace
10	[BUG]  [BUGGY]  compiler.report(JSError.make(reduction,  addingRoot,  HELPER_SOURCE));  [CE]  cannot  find  symbol  reduction  [FE]      IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(reduction,  addingRoot,  HELPER_SOURCE));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(reduction,  addingRoot,  HELPER_SOURCE));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
11	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  reduction,  SAVINGS_THRESHOLD));  [CE]  cannot  find  symbol  reduction  [FE]        IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  reduction,  SAVINGS_THRESHOLD));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  reduction,  SAVINGS_THRESHOLD));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
12	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  reduction,  HELPER_SOURCE));  [CE]  cannot  find  symbol  reduction  [FE]          IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  reduction,  HELPER_SOURCE));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  reduction,  HELPER_SOURCE));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
13	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  SAVINGS_THRESHOLD),  reduction);  [CE]  no  suitable  method  found  for  make(Node,int)  [FE]            IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  SAVINGS_THRESHOLD),  reduction);  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  SAVINGS_THRESHOLD),  reduction);	compiler.reportCodeChange();  	non-compiled	[CE]  no  suitable  method  found  for  make(Node,int)	27	None	replace
14	[BUG]  [BUGGY]  compiler.report(JSError.make(ReductionGatherer.HELPER_SOURCE,  reduction));  [CE]  cannot  find  symbol  HELPER_SOURCE  [FE]              IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(ReductionGatherer.HELPER_SOURCE,  reduction));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(ReductionGatherer.HELPER_SOURCE,  reduction));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  HELPER_SOURCE	27	None	replace
15	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  reduction.getMask(),  HELPER_SOURCE));  [CE]  cannot  find  symbol  reduction  [FE]    IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  reduction.getMask(),  HELPER_SOURCE));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  reduction.getMask(),  HELPER_SOURCE));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
16	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  reduction.getMask(),  SAVINGS_THRESHOLD));  [CE]  cannot  find  symbol  reduction  [FE]      IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  reduction.getMask(),  SAVINGS_THRESHOLD));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  reduction.getMask(),  SAVINGS_THRESHOLD));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
17	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  reduction.getStandardError(),  HELPER_SOURCE));  [CE]  cannot  find  symbol  reduction  [FE]        IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  reduction.getStandardError(),  HELPER_SOURCE));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  reduction.getStandardError(),  HELPER_SOURCE));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
18	[BUG]  [BUGGY]  compiler.report(JSError.make(root,  reduction.getMask()));  [CE]  cannot  find  symbol  reduction  [FE]          IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.report(JSError.make(root,  reduction.getMask()));  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.report(JSError.make(root,  reduction.getMask()));	compiler.reportCodeChange();  	non-compiled	[CE]  cannot  find  symbol  reduction	27	None	replace
19	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.getNodeForCodeInsertion(null);  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	add	compiler.getNodeForCodeInsertion(null);	compiler.reportCodeChange();  	compilable	  [FE]  IllegalStateException  	27	1	replace
20	[BUG]  [BUGGY]  compiler.getNodeForCodeInsertion(null);  [FE]  IllegalStateException  [FE]            IllegalStateException  [CONTEXT]    if  (savings  >  (helperCodeCost  +  SAVINGS_THRESHOLD))  {  for  (Reduction  reduction  :  reductions)  {  reduction.apply();  }  Node  addingRoot  =  compiler.getNodeForCodeInsertion(null);  addingRoot.addChildrenToFront(helperCode);  [BUGGY]  compiler.getNodeForCodeInsertion(null);  [BUGGY]  }  }  }  [CLASS]  FunctionRewriter  Reduction  ReductionGatherer  Reducer  EmptyFunctionReducer  SingleReturnStatementReducer  IdentityReducer  ReturnConstantReducer  GetterReducer  SetterReducer  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  Multimap  reductionMap  reductions  AbstractCompiler  compiler  Reduction  reduction  boolean  Node  addingRoot  externs  helperCode  newChild  oldChild  parent  root  Collection  reductions  List  reducers  String  FACTORY_METHOD_NAME  HELPER_SOURCE  Reducer  reducer  int  SAVINGS_THRESHOLD  helperCodeCost  savings  	projects/Closure55/src/com/google/javascript/jscomp/FunctionRewriter.java	0.3333333333333333	100	100	1	replace	compiler.getNodeForCodeInsertion(null);	compiler.reportCodeChange();  	compilable	  [FE]  IllegalStateException  	27	1	replace
