projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF{entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset>=numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset<hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead<entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==offset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize<totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>=numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize<numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||entrySize==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||entrySize==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName())){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||totalRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||numRecords==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||numToRead==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||numToRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||numToRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||entrySize==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=hasHitEOF||buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==hasHitEOF||buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=hasHitEOF||buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset>=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords!=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>offset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entrySize==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead<entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead<entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entrySize==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&numToRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||currEntry!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&currEntry!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords!=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length!=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length!=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry().length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntryInput();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<hasHitEOF||totalRead<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||totalRead<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<=0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||totalRead>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset<hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize<hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset<0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<hasHitEOF||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length<=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||numToRead==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||numRecords==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||numRecords==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entrySize==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||hasHitEOF&&entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead&&hasHitEOF==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset>=numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=hasHitEOF||totalRead>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead<=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entrySize>=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||offset>=hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=hasHitEOF||offset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.get
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName())
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF&&entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF&&entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||hasHitEOF||numToRead==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF&&entryOffset==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset||hasHitEOF||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF&&entrySize==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entrySize==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572bytecurrEntrySize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead,null);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572IntegercurrEntrySize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset!=numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||totalRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset||hasHitEOF{entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==buf||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==numRecords||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset<=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entrySize>numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize!=entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize!=hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize!=hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||numRecords<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||numToRead<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||totalRead<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])record.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords!=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead,toSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||hasHitEOF||buf.length<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<totalRead||buf.length<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||hasHitEOF||buf.length<=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length<=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&numToRead<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||offset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intnumToRead=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intlen=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,-1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=1,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==hasHitEOF||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==hasHitEOF||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0||totalRead==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||totalRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0||numToRead==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<numRecords||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset<numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<buf.length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>SMALL_BUFFER_SIZE||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset<SMALL_BUFFER_SIZE||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset<SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset>SMALL_BUFFER_SIZE||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead<=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead>=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||numRecords==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entrySize==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize||numToRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=hasHitEOF&&entryOffset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=hasHitEOF&&entryOffset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<hasHitEOF||buf.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<HitEOF||buf.length<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||buf.length<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead,null);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<totalRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<buf.length;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<SMALL_BUFFER_SIZE;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<length;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||offset<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&offset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<offset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=hasHitEOF&&entryOffset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset!=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset==totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==fullNameData||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<hasHitEOF&&entryOffset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length!=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||currEntry.length>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset<totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&offset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset<hasHitEOF||totalRead<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF&&entrySize==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==entrySize||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==available||entrySize==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==numRecords.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(recordSize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset<0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry.length<available()||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length<numRecords.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&offset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==0||hasHitEOF||entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||hasHitEOF{0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entrySize==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead==offset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==buf.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&entryOffset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset>hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(curr
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(buf<totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<fullNameData.length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>entryOffset&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<=entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<input.length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>buf.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length<=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords!=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||offset>hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>offset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length<=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length!=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length!=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&currEntry.length==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>=entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hashRecord||totalRead==totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entrySize==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead>=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entrySize==available){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==available){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&offset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<available()||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<available||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==available||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||buf.length==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offsetToRead||hasHitEOF{entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currentEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize<SMALL_BUFFER_SIZE||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&currEntry.length!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&currEntry.length<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead>=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<inputSize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<recordSize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available()||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null||entryOffset==hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hashRecord||entryOffset==hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize!=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||totalRead<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead!=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF&&totalRead==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==totalRead||hasHitEOF||numToRead==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==totalRead||hasHitEOF||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset||numToRead==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==totalRead||numToRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||totalRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||totalRead==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length<=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>=0||hasHitEOF||entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==available){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==input.length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==entryOffset&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&offset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=input.length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset>numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>fullNameData.length||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset>entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==hasHitEOF||totalRead>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=nu
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length<totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,numToRead)+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead<numToRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&buf.length==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0,buffer.length=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=0){for(inti=0;i<numToRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||hasHitEOF||buf.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||numToRead==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==available()||numToRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName())){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName()
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize<hasHitEOF||numToRead<entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset+numToRead<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize<hasHitEOF||entryOffset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(offset<0||numToRead<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||isEnabled(currentEntrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry().arraycopy(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntry(buf,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hitEOF&&entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead==offset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||totalRead==offset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||offset>=hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entrySize>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length!=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>buf.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry!=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hashRecord||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry.length==available()||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry.length==available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEnt
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEnt
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available()||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==hasHitEOF||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(currEntry==null||currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&currEntry.length>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&offset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&currEntry.length!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead!=hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intch=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize>entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead>HIT_EOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>0){for(inti=0;i<numToRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572while(i<numToRead){for(inti=0;i<numToRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572for(inti=0;i<numToRead;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>hasHitEOF||offset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==hasHitEOF||entryOffset==this.entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||entrySize==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readCurrentEntry(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available()||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||numToRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==hasHitEOF&&entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572readNow=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<available()||entryOffset<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||numToRead<hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||entryOffset<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||hasHitEOF==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==totalRead||hasHitEOF||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0||hasHitEOF||entryOffset==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==0||hasHitEOF||entryOffset==totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead||hasHitEOF||totalRead==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hashHitEOF||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>=0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue();if(currEntry!=null){return
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<hasHitEOF||offset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entrySize!=available){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getValue(i);if(currEntry!=null){return-1
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<available()||hasHitEOF{entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0||hasHitEOF{entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead==available()||hasHitEOF{entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(height==totalRead||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>=available||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||buf.length==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset!=0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset==hasHitEOF||entrySize==available){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572intcurrEntrySize=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead>0){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<1){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<1){for(inti=0,len=buf.length;i<len;++i){buffer[i]=is.read(buf,offset,0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entryOffset||hasHitEOF==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<available()||hasHitEOF==entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize==entryOffset&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<HitEOF||buf.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset>SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||entryOffset>=SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&totalRead<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||offset!=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=is.readByte(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||totalRead>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.get
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<0){for(inti=0;i<numToRead;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().equals(currEntry.getName())
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&totalRead>=entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&entryOffset>totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hashEOF||entryOffset||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||numToRead>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords<0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){return-1;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead<this.entrySize||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF&&offset>=totalRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry();if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(length==0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=currEntry.getEntry(i);if(currEntry!=null){continue
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(totalRead==hasHitEOF||entryOffset==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hashHitEOF||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead==hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntryArray();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntryData();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=getCurrentEntryName();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entrySize>entryOffset){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(hasHitEOF||totalRead<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length>=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(!hasHitEOF&&buf.length<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572if(numToRead&&hasHitEOF{entryOffset||entrySize==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java572byte[]currEntry=(byte[])currEntry.read(buf,offset,0);
