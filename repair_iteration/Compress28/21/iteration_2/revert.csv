projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.recordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(numToSkip,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(recordSize,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iOUtils);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199charskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=(int)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numToSkip)+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=available.skip(numToSkip,iOUtils);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=available.skip(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.length-iOUtils.skip(numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.longValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.iOUtils.skip(numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.length-numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available+numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available+numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numToSIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,hasHitEOF,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Shortskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(numToSkip,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()-available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()+numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()*numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()-numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available)+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available-numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=available.recordSize(encoding);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=encoding.recordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.recordSize(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=this.encoding.recordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.recordSize(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.recordSize(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip+1);skipped=Math.min(available*numToSkip+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(numToSkip<available){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available+numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.longValue()-numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=is.skip(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skip(numToSkip,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip+1);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,false,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,false,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip-available,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available-numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(available,numToSkip,iOUtils);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available*iOUtils.skip(available,numToSkip,i);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,available*hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available*iOUtils.skip(numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available+iOUtils.skip(numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(numToSkip,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iOUtils-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available*iOUtils.skip(numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,isHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,available,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=(long)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=(int)Math.ceil(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=(int)Math.ceil(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=(int)Math.ceil(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=(byte)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=(short)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(numToSkip>available){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available*iOUtils.skip(numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available+iOUtils.skip(numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iOUtils+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Stringskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199CharSequenceskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Characterskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Fileskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Stringskipped=IOUtils.skip(numToSkip,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Charskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,available,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,isHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numToSIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available*numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(numToSkip,recordSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(recordSize,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(entrySize,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199available=Math.max(available,numToSkip+1);skipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skipped(numToSkip,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skipped(numToSkip,IOUtils.shortValue(available));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skipped(numToSkip,IOUtils.skipped(available));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skipped(numToSkip,IOUtils.shortifyValue(available));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>=numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199available=Math.max(available,numToSkip+1);skipped=Math.min(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip+1);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(numToSkip<available){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available+numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip/1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,available,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,available,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,isHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numToSIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,this.iOUtils);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(available,iOUtils);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip-1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,hasHitEOF,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Shortskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Shortskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip,skipped);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available+hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available*hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip-available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,available,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,false,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,false,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skipped(available,numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(numToSkip,available,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip-1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Shortskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,hasHitEOF,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(numToSkip,available,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skipped(available,numToSkip,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip-16);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numToSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip/1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=encoding.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,encoding);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available+numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>=numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,0);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,encoding);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip-1+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>0){available=Math.max(available,0);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numToSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skipped(numToSkip,IOUtils.skipped(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iPosition);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iRawOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>0){available=Math.max(available,0);skipped=Math.min(available*numToSkip+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>0){available=Math.max(available,0);skipped=Math.min(available*numToSkip+0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,encoding);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,16);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available-iOUtils.skip(numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available-iOUtils.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199charskipped=IOUtils.skip(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=currEntry.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip-1+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,encoding);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>=numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>0){available=Math.max(available,0);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199skip=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199floatskipped=(float)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199charskipped=(char)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199charskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()+available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Charskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=currEntry.recordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=zipEncoding.recordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available-numToSkip,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip-16);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available-numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Doubleskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available-numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(skipped<0){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(skipped<0){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(numToSkip,recordSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip*numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,this.hashCode);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Shortskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Byteskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199doubleskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=this.available.skip(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip+1);skipped=Math.min(available*numToSkip+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>0){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=encoding.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available-numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.max(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.highValue()-iOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,available+hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available-numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip+1);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(skipped>0){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available-numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip/2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.recordSize(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,this.hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available*iOUtils.skip(numToSkip,numToSkip-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>0){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip+1);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(skipped>0){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip+1,skipped);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.length-numToSkip-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(skipped<0){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip+1,skipped);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,this.hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,this.hashCode);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,this.hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,this.hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,this.isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,this.isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip-16);
