projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=encoding.recordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199numToSkip=Math.max(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Integerskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(numToSkip,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(recordSize,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199byteskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=iOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=available.skip(numToSkip,iOUtils);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip,isHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=IOUtils.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip,false);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip,available);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available>numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199if(available<numToSkip){available=Math.max(available,numToSkip);skipped=Math.min(available*numToSkip+numToSkip);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199Longskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199charskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available+numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=iOUtils.skip(available,numToSkip-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available-numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skip(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199shortskipped=IOUtils.skip(is,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=IOUtils.skipped(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=(int)Math.ceil(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199intskipped=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java199longskipped=Math.max(available,numToSkip);
