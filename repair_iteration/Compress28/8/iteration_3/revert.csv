projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar_")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar-")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tarentry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,hasHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length!=0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getParent()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName()>=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getSize()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getRawClass()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||containsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().endsWith("/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry!=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getTar()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=0){for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<totalRead;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=0){for(inti=0;i<totalRead;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords.length;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length>=0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length!=0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length>>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tarentry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar-entry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals(TAG_TAR_ENTRY_NAME)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar_entry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||currEntry.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||currEntry.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(entrySize+1)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals(entrySize+1)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(entrySize,entryOffset)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytenumRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarRecord=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasAsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasRecorded){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasFinallyEmpty()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasFinally()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals(TAG_TARGET_ERROR)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead,length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttar=getRecord(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576IntegertarSize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarSize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset>=currEntry.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==null||hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset>=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF&&entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==entrySize||hasHitEOF||entryOffset>=currEntry.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset>=numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tar/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals(TAG_TARGET_NAME)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=null){for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords.length==0){for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords.length!=0){for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==null){for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords.length==0){for(intj=0;j<numRecords.length;++j){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==0||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.TRY){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getParent()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length>=0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords.length==0){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=null){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords.length!=0){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=offset;i<buf.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null&&currEntry!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||currEntry.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null&&currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null&&currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==0||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.getName().equals("tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tar_")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tar-")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&is.read(buf,offset,hasHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.length==0||is.read(buf,offset,hasHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getType()==Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getType()==Token.TRY){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttar=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarRecords=getRecordSize(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576IntegertarRecords=getRecordSize(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry!=null&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(record!=null&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead),hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF||currentEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry==null||hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,entrySize);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576chartarSize=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarSize=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576IntegertarSize=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset<currEntry.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF&&entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==0||hasHitEOF||entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==null||hasHitEOF||entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==entrySize||hasHitEOF||entryOffset<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getSize()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getCurrentSize()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getRawSize()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getSize()>=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getLength()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,entrySize);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576chartarSize=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576IntegertarSize=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inthasHitEOF=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarSize=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream(buf);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream(buf,offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getErrorStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=i.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==0||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()!=Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()>=Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.FUNCTION){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||currEntry.getType()==Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getRawClass()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getRawClass()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getRawClass()>=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&currEntry.getRawClass()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getTar()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getCurrentTar()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getTar()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||currEntry.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,entrySize);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576chartarRecords=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576IntegertarRecords=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576bytetarRecords=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null&&currEntry!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i!=null&&currEntry!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null&&currEntry!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||containsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(containsHitEOF||currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry==null||containsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==0||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||buf.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.length!=0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.length==0||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getNext()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getParent()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.GETPROP){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.getName().endsWith("/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().endsWith("/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().endsWith(".tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&currEntry.getName().endsWith("/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().endsWith(".tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().endsWith(".java")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset!=currEntry.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==null||hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset!=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize!=0||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF||currentEntry!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasAsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasFinallyEmpty()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset==currEntry.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset==numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==null||hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entryOffset==entrySize||hasHitEOF||entryOffset==currEntry.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF&&entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=0){for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<totalRead;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=0){for(inti=0;i<totalRead;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals(".tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(offset)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(entryHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(entryOffset)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,0);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null&&currEntry!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getSize()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getUpperBound()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getRealSize()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset>=numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset>=0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName()>=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getRawName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords<0){for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords>=0){for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasRecorded){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.isEOF()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasFinallyEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasFinally()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getTar()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("currenttarentry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("/tarentry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getParent()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead!=0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.readByte(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset,numToRead+1)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset<numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.isEOF()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasFinallyEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasTarEntry(numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream(buf,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize!=null&&currEntry!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,0);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead+1);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getType()!=Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||currEntry!=null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.length>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is>=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==null){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=null){for(inti=offset;i<numRecords.length;++i){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=buf.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("/tar/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("/tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead),hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=null){for(inti=0;i<numRecords.length;++i){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==null){for(inti=0;i<numRecords.length;++i){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords!=null){for(intj=0;j<numRecords.length;++j){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length<numToRead){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead,true);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(record==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF&&entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset==numRecords){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead+1)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords<0){for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().endsWith(".zip")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().endsWith(".java")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().endsWith(".zip")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getRawClass()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getNumberOfLinks()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tar)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF){inttarSize=is.read(buf,offset,numToRead);hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,0);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead)||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead)&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==null||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF){inttarSize=is.read(buf,offset,numToRead);hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is>=null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF||entryOffset>>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null&&currEntry.enabled(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.NAME||currEntry.getType()!=Token.CATCH){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.NAME||currEntry.getType()!=Token.VAR){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.NAME||currEntry.getType()!=Token.BLOCK){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.NAME||currEntry.getType()!=Token.GETPROP){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==entrySize||currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||curr.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry!=null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords>0){for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead==0){for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords>0){for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numToRead;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.available()||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.available()||offset==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||hasHitEOF||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.getName()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.getSize()<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.getName().endsWith("./")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&currEntry.length==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||currEntry.length==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==0||containsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()!=Token.TRY){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,hasHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset,hasHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(entrySize>=null||hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasRawClass()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasNext()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasMoreThanEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasTarEntry(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasMoreTokens()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF){inttarRecords=is.read(buf,offset,numToRead);hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset>=available){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF||is.read(buf,offset,numToRead)&&currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry==null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar/null")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.readByte(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||curr.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getTarName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getTarType()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numToRead!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(hasHitEOF||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry==null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||curr.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasMoreThanEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||currEntry.hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasNext()){
