projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar_")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar-")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals("tar")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tarentry")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576intnumRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(numRecords==0){for(inti=0;i<numRecords;i++){if(is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576InputStreamis=this.currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.length==0||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(is==null||currEntry.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(i==null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,hasHitEOF)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset>=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset==entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset!=entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry==null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.length!=0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getParent()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName()>=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getSize()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getType()==Token.NAME){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName().equals("tar)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.length==0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||is.read(buf,offset+numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getName()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getRawClass()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.available()){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||containsHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecord=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576readNow=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576ch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=getRecordSize(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,numToRead)||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||is.read(buf,offset,numToRead)&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null&&is.read(buf,offset,numToRead)>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().endsWith("/")){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry!=null||currEntry.getName().equals(entrySize)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry>=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currentEntry!=null||hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||currEntry.getTar()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576if(currEntry==null||hasHitEOF||entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576Integertar=getRecord(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarSize=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java576inttarRecords=is.read(buf,offset,numToRead);hasHitEOF=true;
